{
    "docs": [
        {
            "location": "/", 
            "text": "OpenAPS docs - lite version\n\n\nThe OpenAPS project is a fantastic open-source DIY artificial pancreas system.  The \nofficial documents\n offer a much more thorough and complete view of the system.  This is a test repository that is (1) only relevant for people using an explorer board/edison OpenAPS system and (2) does not provide for all the options available in the current OpenAPS possibilities.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Home"
        }, 
        {
            "location": "/#openaps-docs-lite-version", 
            "text": "The OpenAPS project is a fantastic open-source DIY artificial pancreas system.  The  official documents  offer a much more thorough and complete view of the system.  This is a test repository that is (1) only relevant for people using an explorer board/edison OpenAPS system and (2) does not provide for all the options available in the current OpenAPS possibilities.", 
            "title": "OpenAPS docs - lite version"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/prep/overview/", 
            "text": "Getting Ready for OpenAPS\n\n\nExperience shows there are some important preparation steps that, if done, can help minimize frustration and troubleshooting when you go to build your OpenAPS rig and use a closed loop system.  It starts with education and gathering of information.\n\n\nPlease don't skip reading through these preparation steps.  If you take the time to read through these steps PRIOR to beginning your OpenAPS build, you will likely have a much smoother build and will be less likely to experience errors.", 
            "title": "Overview"
        }, 
        {
            "location": "/prep/overview/#getting-ready-for-openaps", 
            "text": "Experience shows there are some important preparation steps that, if done, can help minimize frustration and troubleshooting when you go to build your OpenAPS rig and use a closed loop system.  It starts with education and gathering of information.  Please don't skip reading through these preparation steps.  If you take the time to read through these steps PRIOR to beginning your OpenAPS build, you will likely have a much smoother build and will be less likely to experience errors.", 
            "title": "Getting Ready for OpenAPS"
        }, 
        {
            "location": "/prep/gitter/", 
            "text": "Get Connected\n\n\nYou aren't expected to build or operate your new loop system all alone.  There are several areas you can find almost immediate support for troublehsooting or questions about your OpenAPS system.  However, there are also ways that you can maximize your chances of getting quality help...providing good information for others to review is a big part of that.  Please check out \nthis blog post\n for some tips on how to get the best help when you need it online.\n\n\nGitter\n\n\nGitter is an online chat service.  It is public (so don't say anything you wouldn't want in google), non-threaded, and organized into groups called channels.  Here are the links to some of the groups most active in the DIY looping community currently. \n\n\n\n\nOpenAPS\n\n\nAutotune\n\n\nLoop\n\n\nRileyLink\n\n\nTI stick communications\n\n\n\n\nUnfortunately, Gitter doesn't have the best search function to find old information, and since it isn't threaded converations, you may need to spend some time looking for the information.  So, if you find a particularly useful bit of information that you couldn't find in the docs...consider making a PR to the docs so that the information is permanently stored for others to find.\n\n\nYou can tag particular people if you have a question by using the \n@\n symbol and then typing their username.  This will help notify the person that you are \"speaking to them\".  You can also private message people by hovering over their profile picture and choosing the \"chat privately\" button.\n\n\n\n\n\n\n\n\n\n\n\nGitter has a mobile app which works great for posting text, but does not allow for posting images directly.  Using the destop application will allow you to search, edit posts, and add photos.  If you want to post a screenshot or image, you can simply drag and drop the file into the Gitter desktop application's active window.  The file will upload and then display in the chat thread.\n\n\nPosting copy-paste code from your rig is also another valuable activity for troubleshooing.  To pose a single line of information, you can use the single-backtick-quote that is found on the key to the right of the number 1 key on the keyboard.  (hint: it is under the ~ on the same key)  If you start and stop a portion of your text with those single quotes, it will \nlook like this\n.  You can also extended-hold the single quote key on your iPhone keypad to bring up the single-backtick-quote that will work in Gitter.\n\n\nPosting multiple lines of copy-paste from your rig will also sometimes be needed.  You can do that by starting the large section of lines with a single line of 3 single quotes (the same one we used in the example above), press \ncontrol-enter\n to get a new line started, paste the lines of code that you want to post, press \ncontrol-enter\n again to get another new line, enter 3 single quotes to end the section.  The copy-pasted lines should have 3 single quotes on the line above and the line below.  The example below shows, on the bottom, how the formatted text yielded the black box of text in Gitter.  Using this format helps troubleshooters read your information easier than unformatted copy and paste.\n\n\n\n\n\n\n\n\n\n\n\nFacebook\n\n\nThere is also a \nLooped Group\n in Facebook that is currently a discussion place for users on both Loop and OpenAPS systems.  You will need to request membership for the group and respond to a message from the group administrators prior to joining.\n\n\nThe Looped Group has grown considerably in the last 6 months and has many users on both systems.  You can search easily for previous posts on topics that may interest you.  Note:  If you are asking for troubleshooting help, screenshots and additional information about where you are in your problem will help get the best response.\n\n\n\n\n\n\n\n\n\n\n\nGoogle Group\n\n\nA google group focused on OpenAPS development work can be found \nhere\n. Request access to participate and see some of the archived discussions. If you're new, make sure to introduce yourself!\n\n\nGitHub issues\n\n\nFor reporting issues on the openaps tools formally, the openaps \nissues page\n on GitHub is the proper forum. Feel free to try and get through the issues by working with others on the Gitter channel first if you think it may be something unrelated to the codebase.  You can also review the list of issues periodically and learn a lot about how the code has been improved based on user input.\n\n\nSlack\n\n\nThere is also a \nSlack channel\n to discuss communication around other pumps that are being explored for being used for other DIY closed loops.\n\n\nTwitter\n\n\nMany users of the DIY projects post to twitter with their newest developments or projects.  Try searching twitter for the hashtags of \n#wearenotwaiting\n and \n#openaps\n and \n#loopkit\n to see what others are posting.", 
            "title": "Get connected"
        }, 
        {
            "location": "/prep/gitter/#get-connected", 
            "text": "You aren't expected to build or operate your new loop system all alone.  There are several areas you can find almost immediate support for troublehsooting or questions about your OpenAPS system.  However, there are also ways that you can maximize your chances of getting quality help...providing good information for others to review is a big part of that.  Please check out  this blog post  for some tips on how to get the best help when you need it online.", 
            "title": "Get Connected"
        }, 
        {
            "location": "/prep/gitter/#gitter", 
            "text": "Gitter is an online chat service.  It is public (so don't say anything you wouldn't want in google), non-threaded, and organized into groups called channels.  Here are the links to some of the groups most active in the DIY looping community currently.    OpenAPS  Autotune  Loop  RileyLink  TI stick communications   Unfortunately, Gitter doesn't have the best search function to find old information, and since it isn't threaded converations, you may need to spend some time looking for the information.  So, if you find a particularly useful bit of information that you couldn't find in the docs...consider making a PR to the docs so that the information is permanently stored for others to find.  You can tag particular people if you have a question by using the  @  symbol and then typing their username.  This will help notify the person that you are \"speaking to them\".  You can also private message people by hovering over their profile picture and choosing the \"chat privately\" button.     Gitter has a mobile app which works great for posting text, but does not allow for posting images directly.  Using the destop application will allow you to search, edit posts, and add photos.  If you want to post a screenshot or image, you can simply drag and drop the file into the Gitter desktop application's active window.  The file will upload and then display in the chat thread.  Posting copy-paste code from your rig is also another valuable activity for troubleshooing.  To pose a single line of information, you can use the single-backtick-quote that is found on the key to the right of the number 1 key on the keyboard.  (hint: it is under the ~ on the same key)  If you start and stop a portion of your text with those single quotes, it will  look like this .  You can also extended-hold the single quote key on your iPhone keypad to bring up the single-backtick-quote that will work in Gitter.  Posting multiple lines of copy-paste from your rig will also sometimes be needed.  You can do that by starting the large section of lines with a single line of 3 single quotes (the same one we used in the example above), press  control-enter  to get a new line started, paste the lines of code that you want to post, press  control-enter  again to get another new line, enter 3 single quotes to end the section.  The copy-pasted lines should have 3 single quotes on the line above and the line below.  The example below shows, on the bottom, how the formatted text yielded the black box of text in Gitter.  Using this format helps troubleshooters read your information easier than unformatted copy and paste.", 
            "title": "Gitter"
        }, 
        {
            "location": "/prep/gitter/#facebook", 
            "text": "There is also a  Looped Group  in Facebook that is currently a discussion place for users on both Loop and OpenAPS systems.  You will need to request membership for the group and respond to a message from the group administrators prior to joining.  The Looped Group has grown considerably in the last 6 months and has many users on both systems.  You can search easily for previous posts on topics that may interest you.  Note:  If you are asking for troubleshooting help, screenshots and additional information about where you are in your problem will help get the best response.", 
            "title": "Facebook"
        }, 
        {
            "location": "/prep/gitter/#google-group", 
            "text": "A google group focused on OpenAPS development work can be found  here . Request access to participate and see some of the archived discussions. If you're new, make sure to introduce yourself!", 
            "title": "Google Group"
        }, 
        {
            "location": "/prep/gitter/#github-issues", 
            "text": "For reporting issues on the openaps tools formally, the openaps  issues page  on GitHub is the proper forum. Feel free to try and get through the issues by working with others on the Gitter channel first if you think it may be something unrelated to the codebase.  You can also review the list of issues periodically and learn a lot about how the code has been improved based on user input.", 
            "title": "GitHub issues"
        }, 
        {
            "location": "/prep/gitter/#slack", 
            "text": "There is also a  Slack channel  to discuss communication around other pumps that are being explored for being used for other DIY closed loops.", 
            "title": "Slack"
        }, 
        {
            "location": "/prep/gitter/#twitter", 
            "text": "Many users of the DIY projects post to twitter with their newest developments or projects.  Try searching twitter for the hashtags of  #wearenotwaiting  and  #openaps  and  #loopkit  to see what others are posting.", 
            "title": "Twitter"
        }, 
        {
            "location": "/prep/settings/", 
            "text": "Test your pump\n\n\nReasons this is important\n\n\nadd links to relevant blog posts\n\n\nBasals\n\n\nISF\n\n\nDIA\n\n\nCarb Ratio\n\n\nInfusion sets\n\n\nPump menus", 
            "title": "Test your pump"
        }, 
        {
            "location": "/prep/settings/#test-your-pump", 
            "text": "Reasons this is important  add links to relevant blog posts", 
            "title": "Test your pump"
        }, 
        {
            "location": "/prep/settings/#basals", 
            "text": "", 
            "title": "Basals"
        }, 
        {
            "location": "/prep/settings/#isf", 
            "text": "", 
            "title": "ISF"
        }, 
        {
            "location": "/prep/settings/#dia", 
            "text": "", 
            "title": "DIA"
        }, 
        {
            "location": "/prep/settings/#carb-ratio", 
            "text": "", 
            "title": "Carb Ratio"
        }, 
        {
            "location": "/prep/settings/#infusion-sets", 
            "text": "", 
            "title": "Infusion sets"
        }, 
        {
            "location": "/prep/settings/#pump-menus", 
            "text": "", 
            "title": "Pump menus"
        }, 
        {
            "location": "/prep/gear/", 
            "text": "You won't get far in your OpenAPS without some important pieces of gear.  Get your gear together well ahead of your build for a smooth setup.\n\n\n\n\nComputer\n\n\nYou can use a Windows or Apple computer (or raspberry pi or...)\n\n\n\n\nCell Phone\n\n\nOpenAPS can use either Android or iPhone.  There are some features that are only available on Android vs iPhone, but they are only about the peripheral parts of the OpenAPS setup (such as x-drip+ app and http widget).  The core of OpenAPS (oref0 and openaps) is the same no matter which phone you are using.\n\n\n\n\nMedtronic pump\n\n\n\n\nCurrently, only the following Medtronic MiniMed models allow us to remotely set temporary basal rate commands, which is required to use OpenAPS:\n\n\n512/712 (note: needs special set-up in OpenAPS)\n515/715\n522/722\n523/723 (with firmware 2.4A or lower)\n554/754 (European Veo, with firmware 2.6A or lower; OR Canadian Veo with firmware 2.7A or lower)\n\n\n\nNOTE: For European/WorldWide users who have access to a \nDANA*R\n insulin pump, you may be able to use AndroidAPS, which leverages OpenAPS's oref0 algorithm but allows you to interface using an Android phone and Bluetooth to communicate directly with the \nDANA*R\n pump. \nSee here for instructions and details related to AndroidAPS\n.\n\n\nFirmware\n\n\nDue to changes in the firmware, the openaps tools are only able to function in\nfull on the above pump models. Security features were added after the firmware\nversion 2.4 in the US that prevent making some remote adjustments.\n\n\nTo check firmware, hit Esc on the home screen and scroll all the way to the bottom. You can also go into the Utilities menu and \"Connect Devices\" menu and look for a PC Connect option. If that is present, the pump will not work for looping. If it\u2019s absent, it should be able to receive temp basal commands.)\n\n\nIf you have one of the above mentioned pumps, but it has buttons that do not work, use the instructions found on this \nImgur photo album\n to repair your pump.\n\n\nModels\n\n\nTo determine your pump model, look at the back side of your pump.  There should be a sticker on the underside of the pump.  On the right hand side of the sticker, it says REF MMT-XXXXXX\n\n\n\n\nIn the example above, it says the pump model is:  MMT-722NAS\n\n\nMMT         Pump Manufacturer Model (MiniMed Medtronic)\n722         Pump Model Number\nNA          Pump Region (NA=North America, CA=Canada/Australia, WW=Worldwide)\nS           Pump Color (S=Smoke, L=Clear/Lucite, B=Blue, P=Pink/Purple)\n\n\n\nSome pumps may have an \u201cL\u201d or \u201cS\u201d or \"R\" before the pump region, e.g. a model number like MMT-LNAS.  This does not affect compatibility.\n\n\nThe difference between the Medtronic 500 series and the 700 series pumps is the size of the insulin reservoirs.  The 500 series pumps use a 180 unit reservoir, and the 700 series pumps use a 300 unit reservoir (or smaller 180 unit reservoir, if you want).\n\n\nThe difference between the Medtronic x22 pumps and the x23 pumps is primarily two features.  \n\n\n\n\n\n\nThe x23 pumps will allow for increments of 0.025 units, whereas the x22 pumps have larger increments of 0.05 units.  OpenAPS will have the insulin delivery automatically rounded by the pump to the units available in the pump model, and any smaller adjustments (to make up for the rounding) will be made through OpenAPS\u2019s use of temp basals.  \n\n\n\n\n\n\nThe x23 series pumps are also faster at delivering large boluses (up to several times faster for boluses \n 10 units).\n\n\n\n\n\n\nFor 512/712 pumps, certain commands like Read Settings, BG Targets and certain Read Basal Profile are not available, and requires creating a static json for needed info missing to successfully run the loop (\nsee example here\n).\n\n\nTips for finding a compatible pump\n\n\nIf you need to acquire an appropriate pump check CraigsList or other sites like\nMedwow or talk to friends in your local community to see if there are any old\npumps lying around in their closets gathering dust. \nMedWow\n is an eBay-like source for used pumps. \nSearchTempest\n is a great tool for searching Craigslist nationally all at once. In addition to searching for listings, consider posting an offer to Craigslist or ask around local community groups.\n\n\nNote: If you're buying a pump online, we recommend you ask the seller to confirm the\nfirmware version of the pump. (You may also want to consider asking for a video\nof the pump with working functionality before purchasing.)\n\n\nBattery usage\n\n\nRepeated wireless communication with the pump drains the battery quite quickly.\nWith a loop running every five minutes, a standard alkaline AAA\u2014recommended by\nMedtronic\u2014lasts somewhere about four days before the pump goes to a\n\"Low Battery\" state and stops allowing wireless transmission. Lithium batteries\nlast significantly longer but do not give much warning when they are about to\ndie.  You can set alerts in Nightscout to provide warning about the status of the\nbattery. For further information on batteries, see\n\nthis study\n on AAA\nbattery use in a looping pump.\n\n\n\n\nCGM\n\n\n\n\nDexcom G4 Platinum System (with or without Share)\n\n\nDexcom G5 Mobile\n\n\nMedtronic (MiniMed Paradigm REAL-Time Revel or Enlite)\n\n\n\n\nThe openaps tool set currently primarily supports three different CGM systems: the Dexcom G4 Platinum system (with or without the \nShare\n functionality), the newer Dexcom G5 Mobile system and the \nMedtronic system\n. Other CGM or CGM-like devices (Libre) can also be used if the data is uploaded to Nightscout and the OpenAPS rig has internet connectivity (aka on-line).\n\n\nWith Dexcom, the Share platform is not required, but using Share can help keep the size of the rig to a minimum.  Without Share, the receiver can be plugged in directly to the OpenAPS rig and will need a portable battery to power the receiver too.\n\n\nNOTE: You can also pull CGM data from Nightscout as an alternative (including Dexcom G5 to iOS device + Nightscout Bridge plugin), or use xDrip (see below). The Medtronic CGM system communicates directly with the associated pump, so that data can be retrieved using the CareLink USB stick. The Medtronic Minimed 530g Pump's Enlite CGM Sensors CAN be used with the older OpenAPS compatible Medtronic Pumps (Despite that pump originally being offered with SoftSensor CGM Sensors).\n\n\nUsing the Medtronic CGM\n\n\nBecause the Medtronic pump collects data directly from the Enlite sensors, OpenAPS will retrieve CGM data in addition to your regular pump data from your pump. While you use the same OpenAPS commands to get it, the Medtronic CGM data may need a little special formatting after being retrieved. If so, it will be specified in other areas of the documentation.\n\n\n\n\nThe Rig\n\n\nNOTE:  The Explorer Board and Edison are DIFFERENT PIECES OF EQUIPMENT.  They are not sold as a single unit.  You will be ordering them separately.  And you need to buy BOTH of them.\n\n\n\n\nEdison\n is the short name for the Intel Edison Compute Module.  Edison is the brains of your OpenAPS system.  It holds the looping code and information about your known wifi networks, too.  Most Edisons come with an operating system called Yocto.  OpenAPS needs an updated version called Jubilinux installed instead.  The process of updating the Edison is called \"flashing\".  You can either buy an \nunflashed Edison\n or order a \npre-flashed Edison\n.  If you buy a preflashed Edison, you can skip the \"Flash Edison\" portion of these docs when you go to build your rig.\n\n\nExplorer Board\n is a custom-designed board that allows an Edison to serve as a bridge from wifi or bluetooth to a 915MHz protocol.  Basically, it has the communications built in to talk between the Edison and your pump.\n  \n\n\n\n\nNuts and Bolts\n are needed to keep your Edison attached to your Explorer Board.  Without these little nuts and bolts, your Edison will come loose, your loop will stop and you will be sad.  Don't be sad.  Check your nuts and bolts periodically after you have built your rig to make sure they stay tight.\n\n\n\n\n\n\nLipo Battery\n is the portable power for your rig.  If you want a mobile rig, you'll need a lipo battery.  There are smaller batteries such as this \nAdafruit 2000mAh battery\n or \nSparkFun 2000mAh battery\n will fit in smaller cases, but will also not last nearly as long.  (The Adafruit version of the 2000mAh battery is the version that will fit in oversized tic-tac containers and is most common for people looking for smallest rig-size.)  The 2000mAh battery will last a little over 12 hours on a standard OpenAPS setup.  The \n25000mAh battery\n will add about another 4-5 hours to the battery life for the day, which may be worth the slightly larger size it brings.  A note about lipo battery ordering...lipo batteries cannot be shipped by themselves (you must order them with some other piece of equipment, even if it is just a cable) and are very difficult to find in local stores if your battery's wires break. Plan ahead with this information in mind.  A backup battery is a great idea.\n\n\n\n\n\n\nCharging block\n can be used with the cables below to charge your rig's lipo battery overnight.  You can also re-purpose an old iPhone charging block if you have one of those laying around.\n\n\n\n\n\n\nUSB-microB cables\n (two of them) are needed to complete the initial setup of your rig.  You may already have workable USB cables from other devices around your house (android phones, playstation controllers, dexcom receivers, etc). The cables don\u2019t have to be a certain length either, \n3-ft long cable\n or \n6-inch long cable\n can both work fine.  You just want to make sure you get a good data cable.  Cheap cables may cause you to not be able to communicate with your rig and make you want to pull your hair out.\n\n\n\n\n\n\n\n\nCarrying case\n\n\nTally Gear\n\n\nTic Tac box\n\n\nStaples box\n\n\nother boxes\n\n\n\n\nPebble watch\n\n\nThere are two watchfaces for Pebble that integrate easily with OpenAPS.  \n\n\n\n\nSkyLoop\n\n\nUrchin", 
            "title": "Buy the gear"
        }, 
        {
            "location": "/prep/gear/#computer", 
            "text": "You can use a Windows or Apple computer (or raspberry pi or...)", 
            "title": "Computer"
        }, 
        {
            "location": "/prep/gear/#cell-phone", 
            "text": "OpenAPS can use either Android or iPhone.  There are some features that are only available on Android vs iPhone, but they are only about the peripheral parts of the OpenAPS setup (such as x-drip+ app and http widget).  The core of OpenAPS (oref0 and openaps) is the same no matter which phone you are using.", 
            "title": "Cell Phone"
        }, 
        {
            "location": "/prep/gear/#medtronic-pump", 
            "text": "Currently, only the following Medtronic MiniMed models allow us to remotely set temporary basal rate commands, which is required to use OpenAPS:  512/712 (note: needs special set-up in OpenAPS)\n515/715\n522/722\n523/723 (with firmware 2.4A or lower)\n554/754 (European Veo, with firmware 2.6A or lower; OR Canadian Veo with firmware 2.7A or lower)  NOTE: For European/WorldWide users who have access to a  DANA*R  insulin pump, you may be able to use AndroidAPS, which leverages OpenAPS's oref0 algorithm but allows you to interface using an Android phone and Bluetooth to communicate directly with the  DANA*R  pump.  See here for instructions and details related to AndroidAPS .", 
            "title": "Medtronic pump"
        }, 
        {
            "location": "/prep/gear/#firmware", 
            "text": "Due to changes in the firmware, the openaps tools are only able to function in\nfull on the above pump models. Security features were added after the firmware\nversion 2.4 in the US that prevent making some remote adjustments.  To check firmware, hit Esc on the home screen and scroll all the way to the bottom. You can also go into the Utilities menu and \"Connect Devices\" menu and look for a PC Connect option. If that is present, the pump will not work for looping. If it\u2019s absent, it should be able to receive temp basal commands.)  If you have one of the above mentioned pumps, but it has buttons that do not work, use the instructions found on this  Imgur photo album  to repair your pump.", 
            "title": "Firmware"
        }, 
        {
            "location": "/prep/gear/#models", 
            "text": "To determine your pump model, look at the back side of your pump.  There should be a sticker on the underside of the pump.  On the right hand side of the sticker, it says REF MMT-XXXXXX   In the example above, it says the pump model is:  MMT-722NAS  MMT         Pump Manufacturer Model (MiniMed Medtronic)\n722         Pump Model Number\nNA          Pump Region (NA=North America, CA=Canada/Australia, WW=Worldwide)\nS           Pump Color (S=Smoke, L=Clear/Lucite, B=Blue, P=Pink/Purple)  Some pumps may have an \u201cL\u201d or \u201cS\u201d or \"R\" before the pump region, e.g. a model number like MMT-LNAS.  This does not affect compatibility.  The difference between the Medtronic 500 series and the 700 series pumps is the size of the insulin reservoirs.  The 500 series pumps use a 180 unit reservoir, and the 700 series pumps use a 300 unit reservoir (or smaller 180 unit reservoir, if you want).  The difference between the Medtronic x22 pumps and the x23 pumps is primarily two features.      The x23 pumps will allow for increments of 0.025 units, whereas the x22 pumps have larger increments of 0.05 units.  OpenAPS will have the insulin delivery automatically rounded by the pump to the units available in the pump model, and any smaller adjustments (to make up for the rounding) will be made through OpenAPS\u2019s use of temp basals.      The x23 series pumps are also faster at delivering large boluses (up to several times faster for boluses   10 units).    For 512/712 pumps, certain commands like Read Settings, BG Targets and certain Read Basal Profile are not available, and requires creating a static json for needed info missing to successfully run the loop ( see example here ).", 
            "title": "Models"
        }, 
        {
            "location": "/prep/gear/#tips-for-finding-a-compatible-pump", 
            "text": "If you need to acquire an appropriate pump check CraigsList or other sites like\nMedwow or talk to friends in your local community to see if there are any old\npumps lying around in their closets gathering dust.  MedWow  is an eBay-like source for used pumps.  SearchTempest  is a great tool for searching Craigslist nationally all at once. In addition to searching for listings, consider posting an offer to Craigslist or ask around local community groups.  Note: If you're buying a pump online, we recommend you ask the seller to confirm the\nfirmware version of the pump. (You may also want to consider asking for a video\nof the pump with working functionality before purchasing.)", 
            "title": "Tips for finding a compatible pump"
        }, 
        {
            "location": "/prep/gear/#battery-usage", 
            "text": "Repeated wireless communication with the pump drains the battery quite quickly.\nWith a loop running every five minutes, a standard alkaline AAA\u2014recommended by\nMedtronic\u2014lasts somewhere about four days before the pump goes to a\n\"Low Battery\" state and stops allowing wireless transmission. Lithium batteries\nlast significantly longer but do not give much warning when they are about to\ndie.  You can set alerts in Nightscout to provide warning about the status of the\nbattery. For further information on batteries, see this study  on AAA\nbattery use in a looping pump.", 
            "title": "Battery usage"
        }, 
        {
            "location": "/prep/gear/#cgm", 
            "text": "Dexcom G4 Platinum System (with or without Share)  Dexcom G5 Mobile  Medtronic (MiniMed Paradigm REAL-Time Revel or Enlite)   The openaps tool set currently primarily supports three different CGM systems: the Dexcom G4 Platinum system (with or without the  Share  functionality), the newer Dexcom G5 Mobile system and the  Medtronic system . Other CGM or CGM-like devices (Libre) can also be used if the data is uploaded to Nightscout and the OpenAPS rig has internet connectivity (aka on-line).  With Dexcom, the Share platform is not required, but using Share can help keep the size of the rig to a minimum.  Without Share, the receiver can be plugged in directly to the OpenAPS rig and will need a portable battery to power the receiver too.  NOTE: You can also pull CGM data from Nightscout as an alternative (including Dexcom G5 to iOS device + Nightscout Bridge plugin), or use xDrip (see below). The Medtronic CGM system communicates directly with the associated pump, so that data can be retrieved using the CareLink USB stick. The Medtronic Minimed 530g Pump's Enlite CGM Sensors CAN be used with the older OpenAPS compatible Medtronic Pumps (Despite that pump originally being offered with SoftSensor CGM Sensors).", 
            "title": "CGM"
        }, 
        {
            "location": "/prep/gear/#using-the-medtronic-cgm", 
            "text": "Because the Medtronic pump collects data directly from the Enlite sensors, OpenAPS will retrieve CGM data in addition to your regular pump data from your pump. While you use the same OpenAPS commands to get it, the Medtronic CGM data may need a little special formatting after being retrieved. If so, it will be specified in other areas of the documentation.", 
            "title": "Using the Medtronic CGM"
        }, 
        {
            "location": "/prep/gear/#the-rig", 
            "text": "NOTE:  The Explorer Board and Edison are DIFFERENT PIECES OF EQUIPMENT.  They are not sold as a single unit.  You will be ordering them separately.  And you need to buy BOTH of them.   Edison  is the short name for the Intel Edison Compute Module.  Edison is the brains of your OpenAPS system.  It holds the looping code and information about your known wifi networks, too.  Most Edisons come with an operating system called Yocto.  OpenAPS needs an updated version called Jubilinux installed instead.  The process of updating the Edison is called \"flashing\".  You can either buy an  unflashed Edison  or order a  pre-flashed Edison .  If you buy a preflashed Edison, you can skip the \"Flash Edison\" portion of these docs when you go to build your rig.  Explorer Board  is a custom-designed board that allows an Edison to serve as a bridge from wifi or bluetooth to a 915MHz protocol.  Basically, it has the communications built in to talk between the Edison and your pump.      Nuts and Bolts  are needed to keep your Edison attached to your Explorer Board.  Without these little nuts and bolts, your Edison will come loose, your loop will stop and you will be sad.  Don't be sad.  Check your nuts and bolts periodically after you have built your rig to make sure they stay tight.    Lipo Battery  is the portable power for your rig.  If you want a mobile rig, you'll need a lipo battery.  There are smaller batteries such as this  Adafruit 2000mAh battery  or  SparkFun 2000mAh battery  will fit in smaller cases, but will also not last nearly as long.  (The Adafruit version of the 2000mAh battery is the version that will fit in oversized tic-tac containers and is most common for people looking for smallest rig-size.)  The 2000mAh battery will last a little over 12 hours on a standard OpenAPS setup.  The  25000mAh battery  will add about another 4-5 hours to the battery life for the day, which may be worth the slightly larger size it brings.  A note about lipo battery ordering...lipo batteries cannot be shipped by themselves (you must order them with some other piece of equipment, even if it is just a cable) and are very difficult to find in local stores if your battery's wires break. Plan ahead with this information in mind.  A backup battery is a great idea.    Charging block  can be used with the cables below to charge your rig's lipo battery overnight.  You can also re-purpose an old iPhone charging block if you have one of those laying around.    USB-microB cables  (two of them) are needed to complete the initial setup of your rig.  You may already have workable USB cables from other devices around your house (android phones, playstation controllers, dexcom receivers, etc). The cables don\u2019t have to be a certain length either,  3-ft long cable  or  6-inch long cable  can both work fine.  You just want to make sure you get a good data cable.  Cheap cables may cause you to not be able to communicate with your rig and make you want to pull your hair out.", 
            "title": "The Rig"
        }, 
        {
            "location": "/prep/gear/#carrying-case", 
            "text": "Tally Gear  Tic Tac box  Staples box  other boxes", 
            "title": "Carrying case"
        }, 
        {
            "location": "/prep/gear/#pebble-watch", 
            "text": "There are two watchfaces for Pebble that integrate easily with OpenAPS.     SkyLoop  Urchin", 
            "title": "Pebble watch"
        }, 
        {
            "location": "/prep/wifi/", 
            "text": "If you want to keep your rig small and portable, using the internet will be important.  Without an internet connection, you will need to plug your receiver directly into the rig's OTG port and a portable battery pack into the UART port.  This increases your rig's size pretty substantially.  (see offline looping for more detailed information about alternate way to achieve offline looping...some of which are more complex to setup)\n\n\nKnown wifi networks\n\n\nYou will want to prepare ahead of your rig-build by gathering the wifi network names and passwords from areas that you will be at frequently (home, friends' houses, work, etc).  By adding known wifi networks to your your rig's setup, you can save from using your cellular data plan to keep your rig running.  As you are gathering the network names and passwords, remember to pay attention to lower vs upper case letter, hypens, or special characters.  If the names and passwords do not match exactly, the rig will not be able to connect to the network.\n\n\nSchool wifi networks\n\n\nIf you are sending your t1d kid to school with an OpenAPS rig, talk with the school district's IT department ahead of building your rig.  Find out if they will allow your rig to access their wifi network, and if so, whether there is any special restrictions or login issues you should know about.  Some school districts will need the MAC address of the rig to add it to their \"approved\" devices list.  Other school districts may need a more complex wifi access setup ahead of time (see Rig, Wifi for more info).\n\n\nIf the school district refuses to allow the rig access to the school's wifi network, you can use BT tethering to your phone's hotspot to stay online while at school.  The downside is that you will be using your cell data during the school day and it will cause added drain on the phone's battery.  \n\n\nIn some cases, schools have let the phone on the school's wifi but not the rig.  Unfotunately though, the phone cannot use the school's wifi while the rig is BT-tethered to it.  A work-around would be to use a mifi device through your cell provider.  The mifi is a small box (about half the size of a dex receiver usually) that projects a wifi signal using your cellular dat plan.  If you use a mifi, the phone could stay connected to the school's wifi and the rig could stay connected to the mifi.\n\n\nIdeally, though, work to get the school to allow the rig access on their wifi network.\n\n\nHome router\n\n\nHave you ever accessed your home router to see the devices connected to it?  You should try to do that ahead of your rig build, as it can be a super fast tool for troubleshooting during early rig building steps.  Most home routers can be accessed by going to the URL \nhttp://192.168.1.1\n on your computer's browser.  The default login for NetGear routers has user as \nadmin\n and the password as \npassword\n.  The default login for Linksys routers has no user name and password is \nadmin\n.  For Asus routers, the default for both user and password is \nadmin\n.  If you are unsure of your router's specifics, google \"how to access \n_\n router\" and put your router's brand name in that search field.\n\n\nBy having access to your home router, you can easily see if you rig is listed as a connected device.  You can also bring up the MAC address and IP address of the rig, which may be helpful in other areas of the rig setup that are discussed later.  [Note:  The rig's MAC address will remain constant.  The IP address of the rig will change depending on where it is connected.]", 
            "title": "Wifi Networks"
        }, 
        {
            "location": "/prep/wifi/#known-wifi-networks", 
            "text": "You will want to prepare ahead of your rig-build by gathering the wifi network names and passwords from areas that you will be at frequently (home, friends' houses, work, etc).  By adding known wifi networks to your your rig's setup, you can save from using your cellular data plan to keep your rig running.  As you are gathering the network names and passwords, remember to pay attention to lower vs upper case letter, hypens, or special characters.  If the names and passwords do not match exactly, the rig will not be able to connect to the network.", 
            "title": "Known wifi networks"
        }, 
        {
            "location": "/prep/wifi/#school-wifi-networks", 
            "text": "If you are sending your t1d kid to school with an OpenAPS rig, talk with the school district's IT department ahead of building your rig.  Find out if they will allow your rig to access their wifi network, and if so, whether there is any special restrictions or login issues you should know about.  Some school districts will need the MAC address of the rig to add it to their \"approved\" devices list.  Other school districts may need a more complex wifi access setup ahead of time (see Rig, Wifi for more info).  If the school district refuses to allow the rig access to the school's wifi network, you can use BT tethering to your phone's hotspot to stay online while at school.  The downside is that you will be using your cell data during the school day and it will cause added drain on the phone's battery.    In some cases, schools have let the phone on the school's wifi but not the rig.  Unfotunately though, the phone cannot use the school's wifi while the rig is BT-tethered to it.  A work-around would be to use a mifi device through your cell provider.  The mifi is a small box (about half the size of a dex receiver usually) that projects a wifi signal using your cellular dat plan.  If you use a mifi, the phone could stay connected to the school's wifi and the rig could stay connected to the mifi.  Ideally, though, work to get the school to allow the rig access on their wifi network.", 
            "title": "School wifi networks"
        }, 
        {
            "location": "/prep/wifi/#home-router", 
            "text": "Have you ever accessed your home router to see the devices connected to it?  You should try to do that ahead of your rig build, as it can be a super fast tool for troubleshooting during early rig building steps.  Most home routers can be accessed by going to the URL  http://192.168.1.1  on your computer's browser.  The default login for NetGear routers has user as  admin  and the password as  password .  The default login for Linksys routers has no user name and password is  admin .  For Asus routers, the default for both user and password is  admin .  If you are unsure of your router's specifics, google \"how to access  _  router\" and put your router's brand name in that search field.  By having access to your home router, you can easily see if you rig is listed as a connected device.  You can also bring up the MAC address and IP address of the rig, which may be helpful in other areas of the rig setup that are discussed later.  [Note:  The rig's MAC address will remain constant.  The IP address of the rig will change depending on where it is connected.]", 
            "title": "Home router"
        }, 
        {
            "location": "/prep/hotspot/", 
            "text": "Mobile Hotspot\n\n\n\n\n\n\n\n\n\nCell phones can use their cell data to act as a portable internet connection.  Mobile hotspot comes preinstalled on most compatible devices. Depending on your device, it may be an app in your App menu or an option under Settings. It may also be named something different than Mobile Hotspot, like Personal Hotspot (iOS), Internet Sharing (Windows) or Portable Wi-Fi Hotspot (Google Nexus devices). But these all do the same thing.  Unfortunately, the mobile hotspot feature is not standardized across all phones or all cellular service providers.  Some service providers charge extra for this feature, some limit the amount of data that can be used on personal hotpsot each month, and others only allow hotspotting through a wifi connection (and not through BT tethering).  \n\n\nCheck your service provider\n\n\nAn absolute must-do ahead of your rig build...\nCHECK YOUR CELLULAR SERVICE PROVIDER'S PERSONAL HOTSPOT FEATURE\n.\n\n\nEither call-in or login to your account and double check how your particular personal hotpsot feature is enabled for your device.  Check if there are any fees or restrictions.  Many providers will have areas in your online account where you simply need to toggle the feature \"on\" in order to use the personal hotspot service.  Other services like Ting, \nrestrict BT-tethered hotspot use to 3G data only (not LTE)\n and you have to specifically turn off LTE service to use the feature.  Checking with your provider ahead will potentially save you a lot of troubleshooting time later.\n\n\nHotspot Tethering\n\n\nA device (like your rig) can be connected (tethered) to your phone's hotspot in one of 3 ways; wifi, BT, or USB:\n\n\n\n\n\n\nwifi\n:  The wifi tethering signal for the hotspot is not constantly broadcast by your phone, however.  So when you want to use the wifi connection to your hotspot (for example, you are leaving your home wifi network and traveling), you will need to \nmanually toggle your hotspot \noff-on\n so that the phone will broadcast a wifi signal for the rig to connect to.  The other consideration is that since this is a wifi connection, the rig will not automatically disconnect when you come into one of your other known wifi networks.  You will have to remember to manually disconnect (toggle hotspot off), if you do not wish to continue using cell data when you are home.  Hotspot done by wifi connections also use more phone battery than a BT tether connection.\n\n\n\n\n\n\nBT\n:  BT tethering requires your phone and rig to be BT-paired before they can connect (and you'll specifically set that up later in these docs).  The advantage of connecting to your hotspot via BT tether is that it will happen automatically.  You do not have to remember to toggle hotspot.  Simply \nleave your hotspot toggled \non\n as usual, leave the house, and within a few minutes (or sooner) your rig will BT tether to the hotspot.  You'll see a blue bar across the top of your iPhone screen indicating a device is connected via personal hotspot. Your rig will then use your cell phone as its internet connection.  When your rig comes back into a known wifi network, it will automatically drop the BT tether and connect with the wifi network.  Screenshot below shows what you'll see in your network logs as you move from known wifi network to BT tether.  oref0-online will automatically find BT tether and connect.\n\n\n\n\n\n\nUSB\n: You can plug devices directly into your cell phone to use hotspot.  However, the phone would pull battery power from your rig and would drain your battery fairly quickly.  This is not a recommended connection method for OpenAPS use.\n\n\n\n\n\n\nWifi vs. BT Hotspot\n\n\n\n\n\n\nIf you choose \nwifi tether\n, you must manually turn it on; wait for the rig to connect; and when you get home, you must manually turn it off or your rig will not switch to home wifi. This also consumes more battery on the phone.\n\n\n\n\n\n\nIf you choose to \nBT tether\n, it takes extra steps to setup ahead of time, but your rig will automatically connect when it loses connections to any known wifi networks (i.e. walking out the door) without you even having to pull the phone out of your pocket; it automatically allows the rig move to a known wifi network when one comes back in range; and it consumes less battery on the phone compared to wifi-connected hotspot.\n\n\n\n\n\n\nTethering on Androids\n\n\nSome android phones running marshmallow may want to check out this website for \ninformation on tethering", 
            "title": "Mobile Hotspot"
        }, 
        {
            "location": "/prep/hotspot/#mobile-hotspot", 
            "text": "Cell phones can use their cell data to act as a portable internet connection.  Mobile hotspot comes preinstalled on most compatible devices. Depending on your device, it may be an app in your App menu or an option under Settings. It may also be named something different than Mobile Hotspot, like Personal Hotspot (iOS), Internet Sharing (Windows) or Portable Wi-Fi Hotspot (Google Nexus devices). But these all do the same thing.  Unfortunately, the mobile hotspot feature is not standardized across all phones or all cellular service providers.  Some service providers charge extra for this feature, some limit the amount of data that can be used on personal hotpsot each month, and others only allow hotspotting through a wifi connection (and not through BT tethering).", 
            "title": "Mobile Hotspot"
        }, 
        {
            "location": "/prep/hotspot/#check-your-service-provider", 
            "text": "An absolute must-do ahead of your rig build... CHECK YOUR CELLULAR SERVICE PROVIDER'S PERSONAL HOTSPOT FEATURE .  Either call-in or login to your account and double check how your particular personal hotpsot feature is enabled for your device.  Check if there are any fees or restrictions.  Many providers will have areas in your online account where you simply need to toggle the feature \"on\" in order to use the personal hotspot service.  Other services like Ting,  restrict BT-tethered hotspot use to 3G data only (not LTE)  and you have to specifically turn off LTE service to use the feature.  Checking with your provider ahead will potentially save you a lot of troubleshooting time later.", 
            "title": "Check your service provider"
        }, 
        {
            "location": "/prep/hotspot/#hotspot-tethering", 
            "text": "A device (like your rig) can be connected (tethered) to your phone's hotspot in one of 3 ways; wifi, BT, or USB:    wifi :  The wifi tethering signal for the hotspot is not constantly broadcast by your phone, however.  So when you want to use the wifi connection to your hotspot (for example, you are leaving your home wifi network and traveling), you will need to  manually toggle your hotspot  off-on  so that the phone will broadcast a wifi signal for the rig to connect to.  The other consideration is that since this is a wifi connection, the rig will not automatically disconnect when you come into one of your other known wifi networks.  You will have to remember to manually disconnect (toggle hotspot off), if you do not wish to continue using cell data when you are home.  Hotspot done by wifi connections also use more phone battery than a BT tether connection.    BT :  BT tethering requires your phone and rig to be BT-paired before they can connect (and you'll specifically set that up later in these docs).  The advantage of connecting to your hotspot via BT tether is that it will happen automatically.  You do not have to remember to toggle hotspot.  Simply  leave your hotspot toggled  on  as usual, leave the house, and within a few minutes (or sooner) your rig will BT tether to the hotspot.  You'll see a blue bar across the top of your iPhone screen indicating a device is connected via personal hotspot. Your rig will then use your cell phone as its internet connection.  When your rig comes back into a known wifi network, it will automatically drop the BT tether and connect with the wifi network.  Screenshot below shows what you'll see in your network logs as you move from known wifi network to BT tether.  oref0-online will automatically find BT tether and connect.    USB : You can plug devices directly into your cell phone to use hotspot.  However, the phone would pull battery power from your rig and would drain your battery fairly quickly.  This is not a recommended connection method for OpenAPS use.", 
            "title": "Hotspot Tethering"
        }, 
        {
            "location": "/prep/hotspot/#wifi-vs-bt-hotspot", 
            "text": "If you choose  wifi tether , you must manually turn it on; wait for the rig to connect; and when you get home, you must manually turn it off or your rig will not switch to home wifi. This also consumes more battery on the phone.    If you choose to  BT tether , it takes extra steps to setup ahead of time, but your rig will automatically connect when it loses connections to any known wifi networks (i.e. walking out the door) without you even having to pull the phone out of your pocket; it automatically allows the rig move to a known wifi network when one comes back in range; and it consumes less battery on the phone compared to wifi-connected hotspot.", 
            "title": "Wifi vs. BT Hotspot"
        }, 
        {
            "location": "/prep/hotspot/#tethering-on-androids", 
            "text": "Some android phones running marshmallow may want to check out this website for  information on tethering", 
            "title": "Tethering on Androids"
        }, 
        {
            "location": "/prep/linux/", 
            "text": "Linux Basics\n\n\nA little bit of Linux will go a long way.\n  \n\n\nI did not come into OpenAPS with a lot of Linux background or comfort-level.  I wouldn't even say that I know a lot of it yet. But, I have found a familiar set of commands and environments that are helpful to keep in mind as you build and use your OpenAPS rig.\n\n\nLine commands\n\n\nFile Editors\n\n\nAliases", 
            "title": "Linux Basics"
        }, 
        {
            "location": "/prep/linux/#linux-basics", 
            "text": "A little bit of Linux will go a long way.     I did not come into OpenAPS with a lot of Linux background or comfort-level.  I wouldn't even say that I know a lot of it yet. But, I have found a familiar set of commands and environments that are helpful to keep in mind as you build and use your OpenAPS rig.", 
            "title": "Linux Basics"
        }, 
        {
            "location": "/prep/linux/#line-commands", 
            "text": "", 
            "title": "Line commands"
        }, 
        {
            "location": "/prep/linux/#file-editors", 
            "text": "", 
            "title": "File Editors"
        }, 
        {
            "location": "/prep/linux/#aliases", 
            "text": "", 
            "title": "Aliases"
        }, 
        {
            "location": "/prep/oref0/", 
            "text": "GitHub\n\n\nA general description of github so that newbies can gain some understanding of what it is.\n\n\nOpenAPS repos\n\n\noref0\n\n\ndocs\n\n\nMaking a PR\n\n\nOther repos of interest", 
            "title": "GitHub and OpenAPS"
        }, 
        {
            "location": "/prep/oref0/#github", 
            "text": "A general description of github so that newbies can gain some understanding of what it is.", 
            "title": "GitHub"
        }, 
        {
            "location": "/prep/oref0/#openaps-repos", 
            "text": "", 
            "title": "OpenAPS repos"
        }, 
        {
            "location": "/prep/oref0/#oref0", 
            "text": "", 
            "title": "oref0"
        }, 
        {
            "location": "/prep/oref0/#docs", 
            "text": "", 
            "title": "docs"
        }, 
        {
            "location": "/prep/oref0/#making-a-pr", 
            "text": "", 
            "title": "Making a PR"
        }, 
        {
            "location": "/prep/oref0/#other-repos-of-interest", 
            "text": "", 
            "title": "Other repos of interest"
        }, 
        {
            "location": "/prep/file-structure/", 
            "text": "Basic Files in OpenAPS\n\n\nvery general overview of how the files/folder are structured\n\n\npull from existing pages mostly\n\n\noref0\n\n\nmyopenaps\n\n\nautotune", 
            "title": "Navigating your rig"
        }, 
        {
            "location": "/prep/file-structure/#basic-files-in-openaps", 
            "text": "very general overview of how the files/folder are structured  pull from existing pages mostly", 
            "title": "Basic Files in OpenAPS"
        }, 
        {
            "location": "/prep/file-structure/#oref0", 
            "text": "", 
            "title": "oref0"
        }, 
        {
            "location": "/prep/file-structure/#myopenaps", 
            "text": "", 
            "title": "myopenaps"
        }, 
        {
            "location": "/prep/file-structure/#autotune", 
            "text": "", 
            "title": "autotune"
        }, 
        {
            "location": "/prep/advanced-features/", 
            "text": "How to Update Loop\n\n\nWhen a new version of Loop is released, you can click \nHERE\n to read what features or fixes were a part of the new release.  If you decide you'd like to update to the new version, your upgrade process will depend on how you initially installed Loop.\n\n\nDirect download\n\n\nIf you used a direct download of the .zip file from GitHub (aka Option 1 Super Easy), then you will simply do the same again.  \n\n\n\n\n\n\nDirectly download the current version's zip file \nHERE (for master branch)\n or \nHERE (for dev branch)\n\n\n\n\n\n\nFollow the guide for installation as you did before, beginning with the changing of the MAIN_APP_BUNDLE_IDENTIFIER.  If you wish to keep your existing Loop app's settings, then use the same MAIN_APP_BUNDLE_IDENTIFIER as you used in the first installation.  If you can't remember it, you can open your old folder on your computer and check what it was.  Or alternatively, open your Loop settings, open up the Issue Report and look for a line titled \nappGroupName\n.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake any customizations you are interested.\n\n\n\n\n\n\nBuild Loop onto iPhone and you've completed your upgrade.  Your old Loop app will have been updated to the new version and your settings will carry forward to the new version.\n\n\n\n\n\n\nXcode Source Control and GitHub git\n\n\nIf you used Clone with GitHub (Option 2 Sorta Easy) or GitHub Desktop (Option 3 Advanced), you will want to \ncd\n into your Loop repository on your local computer and \ngit pull https://github.com/LoopKit/Loop.git\n to update your Loop repository.  Then you can navigate to the Loop.xcodeproj and update as described above.", 
            "title": "AMA, autosens, autotune"
        }, 
        {
            "location": "/prep/advanced-features/#how-to-update-loop", 
            "text": "When a new version of Loop is released, you can click  HERE  to read what features or fixes were a part of the new release.  If you decide you'd like to update to the new version, your upgrade process will depend on how you initially installed Loop.", 
            "title": "How to Update Loop"
        }, 
        {
            "location": "/prep/advanced-features/#direct-download", 
            "text": "If you used a direct download of the .zip file from GitHub (aka Option 1 Super Easy), then you will simply do the same again.      Directly download the current version's zip file  HERE (for master branch)  or  HERE (for dev branch)    Follow the guide for installation as you did before, beginning with the changing of the MAIN_APP_BUNDLE_IDENTIFIER.  If you wish to keep your existing Loop app's settings, then use the same MAIN_APP_BUNDLE_IDENTIFIER as you used in the first installation.  If you can't remember it, you can open your old folder on your computer and check what it was.  Or alternatively, open your Loop settings, open up the Issue Report and look for a line titled  appGroupName .           Make any customizations you are interested.    Build Loop onto iPhone and you've completed your upgrade.  Your old Loop app will have been updated to the new version and your settings will carry forward to the new version.", 
            "title": "Direct download"
        }, 
        {
            "location": "/prep/advanced-features/#xcode-source-control-and-github-git", 
            "text": "If you used Clone with GitHub (Option 2 Sorta Easy) or GitHub Desktop (Option 3 Advanced), you will want to  cd  into your Loop repository on your local computer and  git pull https://github.com/LoopKit/Loop.git  to update your Loop repository.  Then you can navigate to the Loop.xcodeproj and update as described above.", 
            "title": "Xcode Source Control and GitHub git"
        }, 
        {
            "location": "/prep/checklist/", 
            "text": "iPhone Widget\n\n\nThe Loop app will automatically build a widget that will be available on your iPhone.  The widget is available in the Today view of your iPhone.  Swipe right on your iPhone homescreen and your widgets will be available.  The Loop widget maybe at the bottom of your widget list.  Scroll down to the bottom of the screen and press the \nedit\n button.\n\n\nThat open an \"Add Widgets\" screen.  If you hold and drag the two horizontal lines on the Loop widget row, you can drag it up to the order you'd like it to appear on your widget list.", 
            "title": "Checklist"
        }, 
        {
            "location": "/prep/checklist/#iphone-widget", 
            "text": "The Loop app will automatically build a widget that will be available on your iPhone.  The widget is available in the Today view of your iPhone.  Swipe right on your iPhone homescreen and your widgets will be available.  The Loop widget maybe at the bottom of your widget list.  Scroll down to the bottom of the screen and press the  edit  button.  That open an \"Add Widgets\" screen.  If you hold and drag the two horizontal lines on the Loop widget row, you can drag it up to the order you'd like it to appear on your widget list.", 
            "title": "iPhone Widget"
        }, 
        {
            "location": "/nightscout/overview/", 
            "text": "Overview\n\n\nNightscout (NS) is an excellent tool to remotely view Loop's actions.  It allows for easy remote monitoring of Loop activities, troubleshooting of Loop errors, history of CGM, carbs, boluses, \n temp basals, reports to analyze data trends and patterns. There is a Nightscout app in your iPhone App Store, or you can use a web browser to view the data.  Setting up Nightscout is free and fairly quick.  Once setup, the site can be accessed by anyone that you share your unique Nightscout URL with.  \n\n\nNightscout is highly recommended for Loop users, especially those using Loop as caregivers to t1ds.  Nightscout displays are often the easiest way to troubleshoot Loop settings, if you are having problems and seeking input from others.  Below is some discussion about the general Nightscout display, as well as some Loop-specific display information.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlood Glucose\n\n\nYour blood glucose (BG) readings from your CGM are shown in green, yellow, or red in the main graph area of NS.  You can adjust your high and low BG targets in NS (when NS alerts will start for high/low BGs), but those will not affect your Loop performance.  Loop only uses the BG targets given in the Loop app settings.  The main screen of BGs is displaying the time duration you have selected (in the example above, 12 hours of BG history).  The bottom of the screen shows the last 48-hours of BG trends.  You can scan backwards by dragging the bottom timeline to the left, if you want to review specific Loop actions or data in the last two days. \n\n\n\n\nCarbs\n\n\nCarbs are automatically uploaded to NS by the Loop app.  The amount of carbs on board (active carbs or COB) can be seen by clicking the Loop pill.  The size of a white carb dot on the graph is proportional to the amount of carbs entered...bigger meals get bigger dots. Loop does not read carbs from NS for use in looping caluclations, it only uploads carbs to NS that have been entered in the Loop app.\n\n\n\n\nBoluses\n\n\nInsulin boluses are also automatically uploaded to NS by the Loop app.  The bolus is shown as a filled in blue lower-half of the dot, and the specific amount of the bolus is also shown.  There may be a slight delay between when the carbs for a meal are uploaded to NS to when the meal bolus appears.  This is because depending on the pump model and size of bolus, the bolus may take a few minutes to actually be given and then Loop has to perform a pump read to verify the reservoir volume has decreased (i.e., the bolus was given).  As shown in the example above, the meal carbs have been uploaded, but the bolus delivery is still in progress.  Insulin on board (active insulin or IOB) is also shown in the Loop pill.\n\n\n\n\nTemp Basals\n\n\nWithin your NS profile, you will enter in the scheduled basal for your t1d.  This is not automatically updated when you update the Loop app or your pump; you will have to manually update your basal profile in your NS site if you change your basal profile in Loop and/or pump.  If you don't update the NS basal profile, it doesn't cause any problems in Loop function...you simply won't have accurate VISUAL representation of high/low temp basals within NS. The dashed blue line represents the scheduled basal profile (as entered in your NS profile).  The solid blue lines indicate the actual basal amounts set for a given time...so as Loop sets temp basals higher or lower than your scheduled basal rate, the solid blue line will jump above or below your dashed blue line.  There is a slight delay (up to 2-5 minutes) in the rendering of basal changes on the blue lines, so if you want the accurate current basal rate, you can check the Loop pill.\n\n\n\n\nPredicted BG\n\n\nThe purple line to the right of the BG is Loop's predicted BG.  Watching the behavior of that purple line can help you understand why Loop is making decisions regarding high or low temps.  You can read more on that topic in the Algorithm section of these docs.\n\n\n\n\nLoop pill\n\n\nThe Loop pill is the little display box which when hovered over, or clicked, will provide additional information about recent Loop activities and status.  Information included is the last time Loop ran, the temp basal set, IOB, and COB.  Looking at the Loop pill is a quick method for assessing if you loop is currently active, as well.  The small symbols to the right of the word Loop have specific meaning.  The small horizontal lightning bolt, shown in this example, is an active loop which recently enacted a temp basal.  You can read the section on Troubleshooting using the Loop Pill for additional information about the various symbols.\n\n\n\n\nSAGE and CAGE pills\n\n\nThe SAGE and CAGE pills are for Sensor Age and Cannula Age.  These optional pills track the time since your CGM sensor and Pump site were last changed.  You can set up custom alerts to remind you when it is time to change the devices, or simply use the visuals to keep track of your particular timing for site/sensor changes.", 
            "title": "Overview"
        }, 
        {
            "location": "/nightscout/overview/#overview", 
            "text": "Nightscout (NS) is an excellent tool to remotely view Loop's actions.  It allows for easy remote monitoring of Loop activities, troubleshooting of Loop errors, history of CGM, carbs, boluses,   temp basals, reports to analyze data trends and patterns. There is a Nightscout app in your iPhone App Store, or you can use a web browser to view the data.  Setting up Nightscout is free and fairly quick.  Once setup, the site can be accessed by anyone that you share your unique Nightscout URL with.    Nightscout is highly recommended for Loop users, especially those using Loop as caregivers to t1ds.  Nightscout displays are often the easiest way to troubleshoot Loop settings, if you are having problems and seeking input from others.  Below is some discussion about the general Nightscout display, as well as some Loop-specific display information.       Blood Glucose  Your blood glucose (BG) readings from your CGM are shown in green, yellow, or red in the main graph area of NS.  You can adjust your high and low BG targets in NS (when NS alerts will start for high/low BGs), but those will not affect your Loop performance.  Loop only uses the BG targets given in the Loop app settings.  The main screen of BGs is displaying the time duration you have selected (in the example above, 12 hours of BG history).  The bottom of the screen shows the last 48-hours of BG trends.  You can scan backwards by dragging the bottom timeline to the left, if you want to review specific Loop actions or data in the last two days.    Carbs  Carbs are automatically uploaded to NS by the Loop app.  The amount of carbs on board (active carbs or COB) can be seen by clicking the Loop pill.  The size of a white carb dot on the graph is proportional to the amount of carbs entered...bigger meals get bigger dots. Loop does not read carbs from NS for use in looping caluclations, it only uploads carbs to NS that have been entered in the Loop app.   Boluses  Insulin boluses are also automatically uploaded to NS by the Loop app.  The bolus is shown as a filled in blue lower-half of the dot, and the specific amount of the bolus is also shown.  There may be a slight delay between when the carbs for a meal are uploaded to NS to when the meal bolus appears.  This is because depending on the pump model and size of bolus, the bolus may take a few minutes to actually be given and then Loop has to perform a pump read to verify the reservoir volume has decreased (i.e., the bolus was given).  As shown in the example above, the meal carbs have been uploaded, but the bolus delivery is still in progress.  Insulin on board (active insulin or IOB) is also shown in the Loop pill.   Temp Basals  Within your NS profile, you will enter in the scheduled basal for your t1d.  This is not automatically updated when you update the Loop app or your pump; you will have to manually update your basal profile in your NS site if you change your basal profile in Loop and/or pump.  If you don't update the NS basal profile, it doesn't cause any problems in Loop function...you simply won't have accurate VISUAL representation of high/low temp basals within NS. The dashed blue line represents the scheduled basal profile (as entered in your NS profile).  The solid blue lines indicate the actual basal amounts set for a given time...so as Loop sets temp basals higher or lower than your scheduled basal rate, the solid blue line will jump above or below your dashed blue line.  There is a slight delay (up to 2-5 minutes) in the rendering of basal changes on the blue lines, so if you want the accurate current basal rate, you can check the Loop pill.   Predicted BG  The purple line to the right of the BG is Loop's predicted BG.  Watching the behavior of that purple line can help you understand why Loop is making decisions regarding high or low temps.  You can read more on that topic in the Algorithm section of these docs.   Loop pill  The Loop pill is the little display box which when hovered over, or clicked, will provide additional information about recent Loop activities and status.  Information included is the last time Loop ran, the temp basal set, IOB, and COB.  Looking at the Loop pill is a quick method for assessing if you loop is currently active, as well.  The small symbols to the right of the word Loop have specific meaning.  The small horizontal lightning bolt, shown in this example, is an active loop which recently enacted a temp basal.  You can read the section on Troubleshooting using the Loop Pill for additional information about the various symbols.   SAGE and CAGE pills  The SAGE and CAGE pills are for Sensor Age and Cannula Age.  These optional pills track the time since your CGM sensor and Pump site were last changed.  You can set up custom alerts to remind you when it is time to change the devices, or simply use the visuals to keep track of your particular timing for site/sensor changes.", 
            "title": "Overview"
        }, 
        {
            "location": "/nightscout/new_user/", 
            "text": "New Nightscout Users\n\n\nTwo options exist for easy hosting of NS; Azure or Heroku. Both hosting services are free.  However,  Azure has data quotas monthly and shorter term CPU quotas.  If you exceed those quotas, you may be facing a monthly data-use bill or being locked out of NS for about 12 hours until the quotas reset.  As you start to use NS more intensively for alarms, pebble watches, etc\u2026it is possible that you may exceed your monthly data cap on Azure.  Many Loop users have transitioned their old sites from Azure over to Heroku and have found the hosting change to be beneficial.  Heroku also has some memory limits, but those limits have been more than adequate for Loop users.  Therefore, we recommend new users start with Heroku.\n\n\nHEROKU NIGHTSCOUT SET-UP\n\n\n\n\nCreate an account at \nHeroku\n and choose the Primary Development Language to be Node.js when you create your account.  You\u2019re going to use a free account, but you will still need to enter credit card information for your account setup.  Don\u2019t forget to check your email to confirm your Heroku account.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate an account at \nGitHub\n\n\n\n\n\n\nGo to the \nNightscout cgm-remote-monitor repository\n\n\n\n\n\n\nClick the \nFork\n button in the upper right corner\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nScroll down until you see the purple \nDeploy to Heroku\n button.  Click that button.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive your app a name, this will be the prefix of your NS site\u2019s URL. For example, \nhttps://yourappname.herokuapp.com\n\n\n\n\n\n\nFill out the information lines in the \nConfig Variables\n Section of that page, as shown below.  Some of the lines can stay with the default entries already provided.\n\n\n\n\n\n\n\n\n\n\n\n\nKEY\n\n\nVALUE\n\n\n\n\n\n\n\n\n\n\nAPI_SECRET\n\n\nCreate your own API_SECRET\u2026this is like the password to your NS site.  Please write it down somewhere safe or commit it to memory, you will be using it in the future.  It needs to be at least 12 characters long and should NOT use the `@` symbol.\n\n\n\n\n\n\nDISPLAY_UNITS\n\n\nenter either mg/dl or mmol\n\n\n\n\n\n\nENABLE\n\n\nbridge loop pump iob cob basal careportal sage cage\n(Enter all of the words without commas.  Just a single space between each word. Make sure autocorrect does not add space between careportal)\n\n\n\n\n\n\nDISABLE\n\n\nLeave blank\n\n\n\n\n\n\nALARM_TYPES\n\n\nsimple\n\n\n\n\n\n\nBG_HIGH\n\n\nEnter the numeric value of BG you\u2019d like as an urgent high alarm.\n\n\n\n\n\n\nBG_TARGET_TOP\n\n\nEnter the numeric value of the top of your target BG.\n\n\n\n\n\n\nBG_TARGET_BOTTOM\n\n\nEnter the numeric value of the bottom of your target BG.\n\n\n\n\n\n\nBG_LOW\n\n\nEnter the numeric value of the BG you\u2019d like as an urgent low alarm.\n\n\n\n\n\n\nPUSHOVER lines\n\n\nCan be left blank for now.   See PUSHOVER section if you want to integrate PUSHOVER notifications with NS later.\n\n\n\n\n\n\nCUSTOM_TITLE\n\n\nThis will be the text displayed in the upper left part of the NS website.\n\n\n\n\n\n\nTHEME\n\n\nchange from default to colors\n\n\n\n\n\n\nBRIDGE_USER_NAME\n\n\nEnter your Dexcom Share Account login name.  This should be the same account name used in the Share2 or G5 Mobile app.\n\n\n\n\n\n\nBRIDGE_PASSWORD\n\n\nEnter your Dexcom Share Account password.\n\n\n\n\n\n\nBG_TARGET TOP\n\n\nEnter the numeric value of the top of your target BG.\n\n\n\n\n\n\nBG_TARGET_BOTTOM\n\n\nEnter the numeric value of the bottom of your target BG.\n\n\n\n\n\n\n\n\n\nThe remaining variables can be left at their default values.\n\n\n\n\nClick the purple \nDeploy\n button at the bottom of screen\n\n\n\n\n\n\n\n\n\n\n\n\n\nWait a little bit while Heroku builds your NS app.  You\u2019ll see some text scroll by in the Build App box, and then finally, you will have a message that the NS app was successfully deployed.\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can verify your site\u2019s successful build by clicking \nView\n (you should see black site with a profile warning).  You will be redirected to a profile set-up page.  (If it doesn't redirect automatically, refresh your webpage).  \n\n\n\n\n\n\n\n\n\n\n\nYou do not have to enter all the information in the profile if you are using Loop (since Loop will be providing the information for IOB and COB rather than letting NS calculate them), but you do have to fill out the \nBasal Profile\n and \nTimeZone\n at a minimum in order to have your temp basals properly display.  Click \nSave\n when you have entered the information.  You will be prompted to authenticate, if it is the first time you\u2019ve used the device to make changes in your profile.  Click on the \nAuthenticate\n link at the bottom of the site, and enter your API_SECRET to complete the authentication.\n\n\n\n\n\n\n\n\n\n\n\nAssuming your previous browser tab is still open for \"Create a new App | Heroku\", let's go back to that tab.  This time instead of choosing the \nView\n option, we are going to select the \nManage App\n button. Then, select the \nSettings\n tab near the top of the screen on your Heroku app.\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on \nReveal Config  Vars\n. Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED is a required line, the others just make Nightscout more useful when Looping.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKEY\n\n\nVALUE\n\n\n\n\n\n\n\n\n\n\nDEVICESTATUS_ADVANCED\n\n\ntrue\n\n\n\n\n\n\nPUMP_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nPUMP_RETRO_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nSHOW_FORECAST\n\n\nloop\n\n\n\n\n\n\nSHOW_PLUGINS\n\n\nloop pump cob iob sage cage careportal\n\n\n\n\n\n\nPUMP_ENABLE_ALERTS\n\n\ntrue\n\n\n\n\n\n\nPUMP_URGENT_BATT_U\n\n\n30\n(This is the pump battery percentage that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_BATT_V\n\n\n1.25\n(This is the pump battery voltage that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_RES\n\n\n10\n(This is the reservoir volume that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_CLOCK\n\n\n30\n\n\n\n\n\n\nLOOP_ENABLE_ALERTS\n\n\ntrue\n\n\n\n\n\n\nLOOP_WARN\n\n\n20\n(This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)\n\n\n\n\n\n\nLOOP_URGENT\n\n\n60\n(Same as the alert above, but will be red in color and have a shorter snooze option.)\n\n\n\n\n\n\n\n\n\n\n\nClick on \nOpen App\n in the top right corner of your Heroku site.\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the settings (those three horizontal lines in upper right corner).  Now check that your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), check the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them), and then press save. Your NIGHTSCOUT site is all set-up.  Congrats!\n\n\n\n\n\n\n\n\n\n\n\nEVENT HISTORY\n\n\nDon't forget to keep you Loop App's Preferred Source set to \nEvent History\n if you want your NS site to smoothly integrate.  Preferred Source set to \nReservoir\n will result in carbs not being uploaded and temp basals not being displayed.", 
            "title": "Setup New Site"
        }, 
        {
            "location": "/nightscout/new_user/#new-nightscout-users", 
            "text": "Two options exist for easy hosting of NS; Azure or Heroku. Both hosting services are free.  However,  Azure has data quotas monthly and shorter term CPU quotas.  If you exceed those quotas, you may be facing a monthly data-use bill or being locked out of NS for about 12 hours until the quotas reset.  As you start to use NS more intensively for alarms, pebble watches, etc\u2026it is possible that you may exceed your monthly data cap on Azure.  Many Loop users have transitioned their old sites from Azure over to Heroku and have found the hosting change to be beneficial.  Heroku also has some memory limits, but those limits have been more than adequate for Loop users.  Therefore, we recommend new users start with Heroku.", 
            "title": "New Nightscout Users"
        }, 
        {
            "location": "/nightscout/new_user/#heroku-nightscout-set-up", 
            "text": "Create an account at  Heroku  and choose the Primary Development Language to be Node.js when you create your account.  You\u2019re going to use a free account, but you will still need to enter credit card information for your account setup.  Don\u2019t forget to check your email to confirm your Heroku account.        Create an account at  GitHub    Go to the  Nightscout cgm-remote-monitor repository    Click the  Fork  button in the upper right corner        Scroll down until you see the purple  Deploy to Heroku  button.  Click that button.        Give your app a name, this will be the prefix of your NS site\u2019s URL. For example,  https://yourappname.herokuapp.com    Fill out the information lines in the  Config Variables  Section of that page, as shown below.  Some of the lines can stay with the default entries already provided.       KEY  VALUE      API_SECRET  Create your own API_SECRET\u2026this is like the password to your NS site.  Please write it down somewhere safe or commit it to memory, you will be using it in the future.  It needs to be at least 12 characters long and should NOT use the `@` symbol.    DISPLAY_UNITS  enter either mg/dl or mmol    ENABLE  bridge loop pump iob cob basal careportal sage cage (Enter all of the words without commas.  Just a single space between each word. Make sure autocorrect does not add space between careportal)    DISABLE  Leave blank    ALARM_TYPES  simple    BG_HIGH  Enter the numeric value of BG you\u2019d like as an urgent high alarm.    BG_TARGET_TOP  Enter the numeric value of the top of your target BG.    BG_TARGET_BOTTOM  Enter the numeric value of the bottom of your target BG.    BG_LOW  Enter the numeric value of the BG you\u2019d like as an urgent low alarm.    PUSHOVER lines  Can be left blank for now.   See PUSHOVER section if you want to integrate PUSHOVER notifications with NS later.    CUSTOM_TITLE  This will be the text displayed in the upper left part of the NS website.    THEME  change from default to colors    BRIDGE_USER_NAME  Enter your Dexcom Share Account login name.  This should be the same account name used in the Share2 or G5 Mobile app.    BRIDGE_PASSWORD  Enter your Dexcom Share Account password.    BG_TARGET TOP  Enter the numeric value of the top of your target BG.    BG_TARGET_BOTTOM  Enter the numeric value of the bottom of your target BG.     The remaining variables can be left at their default values.   Click the purple  Deploy  button at the bottom of screen       Wait a little bit while Heroku builds your NS app.  You\u2019ll see some text scroll by in the Build App box, and then finally, you will have a message that the NS app was successfully deployed.       You can verify your site\u2019s successful build by clicking  View  (you should see black site with a profile warning).  You will be redirected to a profile set-up page.  (If it doesn't redirect automatically, refresh your webpage).        You do not have to enter all the information in the profile if you are using Loop (since Loop will be providing the information for IOB and COB rather than letting NS calculate them), but you do have to fill out the  Basal Profile  and  TimeZone  at a minimum in order to have your temp basals properly display.  Click  Save  when you have entered the information.  You will be prompted to authenticate, if it is the first time you\u2019ve used the device to make changes in your profile.  Click on the  Authenticate  link at the bottom of the site, and enter your API_SECRET to complete the authentication.      Assuming your previous browser tab is still open for \"Create a new App | Heroku\", let's go back to that tab.  This time instead of choosing the  View  option, we are going to select the  Manage App  button. Then, select the  Settings  tab near the top of the screen on your Heroku app.       Click on  Reveal Config  Vars . Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED is a required line, the others just make Nightscout more useful when Looping.         KEY  VALUE      DEVICESTATUS_ADVANCED  true    PUMP_FIELDS  battery reservoir clock status    PUMP_RETRO_FIELDS  battery reservoir clock status    SHOW_FORECAST  loop    SHOW_PLUGINS  loop pump cob iob sage cage careportal    PUMP_ENABLE_ALERTS  true    PUMP_URGENT_BATT_U  30 (This is the pump battery percentage that will trigger a red, urgent alert in NS.)    PUMP_URGENT_BATT_V  1.25 (This is the pump battery voltage that will trigger a red, urgent alert in NS.)    PUMP_URGENT_RES  10 (This is the reservoir volume that will trigger a red, urgent alert in NS.)    PUMP_URGENT_CLOCK  30    LOOP_ENABLE_ALERTS  true    LOOP_WARN  20 (This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)    LOOP_URGENT  60 (Same as the alert above, but will be red in color and have a shorter snooze option.)      Click on  Open App  in the top right corner of your Heroku site.       Click on the settings (those three horizontal lines in upper right corner).  Now check that your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), check the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them), and then press save. Your NIGHTSCOUT site is all set-up.  Congrats!", 
            "title": "HEROKU NIGHTSCOUT SET-UP"
        }, 
        {
            "location": "/nightscout/new_user/#event-history", 
            "text": "Don't forget to keep you Loop App's Preferred Source set to  Event History  if you want your NS site to smoothly integrate.  Preferred Source set to  Reservoir  will result in carbs not being uploaded and temp basals not being displayed.", 
            "title": "EVENT HISTORY"
        }, 
        {
            "location": "/nightscout/update_user/", 
            "text": "UPDATING NIGHTSCOUT SITE\n\n\nIf you are new to Loop and haven\u2019t updated your NS site since before December 1, 2016, you will want to update your NS site.  You can run either the \"master\" or \"dev\" branches of cgm-remote-monitor with Loop.  To check what version your Nightscout site is running, go to your Nightscout site and pull open the site settings by clicking on the three horizontal lines at the top right of the screen.  Scroll down and see if you are running 0.9.2-dev-20161201 or newer for \"dev\" branch.  Notice the \u201cdev\u201d branch is date stamped 0.9.x-dev-YYYMMDD; or you\u2019ll see version 0.9.2 for \"master\" branch deployments.\n\n\nIf you are a current NS user and simply want to update your site, this procedure will work as well.\n\n\nUpdating your repository in GitHub\n\n\n\n\nCopy, paste, and goto the one of the following links depending on which branch of cgm-remote-monitor you are currently running (replace \nyourgithubname\n with your actual GitHub user name)\n\n\n\n\nfor master branch deployments:\n\n\nhttps://github.com/yourgithubname/cgm-remote-monitor/compare/master...nightscout:master\n\n\nFor dev branch deployments:\n\n\nhttps://github.com/yourgithubname/cgm-remote-monitor/compare/dev...nightscout:dev\n\n\n\n\n\n\n\n\n\n\n\nClick the big green \nCreate pull request\n button. Another screen will appear, fill in a title and click button to create the pull request, and then you can \nMerge pull request\n, and finally \nConfirm merge\n.\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\nYour cgm-remote-monitor repository is now up-to-date.  Nice work.\n\n\n\n\n\n\nIf you don\u2019t have your Heroku set-up to automatically update when your repository is updated, you may have to go into your Heroku \nDeploy\n section and manually deploy your branch now that your repository has been updated.  Make sure you are connected to your GitHub cgm-remote-monitor repository.\n\n\n\n\n\n\n\n\n\n\n\n\n\nNew Loopers Variables\n\n\nFor new Loopers (but old Nightscout users), you will need to add some variables to your Heroku site to Loop.  \n\n\n\n\nLogin to your Heroku site, select the \nSettings\n tab near the top of the screen on your Heroku app.\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on \nReveal Config  Vars\n.  Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED and ENABLE lines are required, the others just make Nightscout more useful when Looping.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKEY\n\n\nVALUE\n\n\n\n\n\n\n\n\n\n\nDEVICESTATUS_ADVANCED\n\n\ntrue\n\n\n\n\n\n\nPUMP_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nPUMP_RETRO_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nSHOW_FORECAST\n\n\nloop\n\n\n\n\n\n\nSHOW_PLUGINS\n\n\nloop pump cob iob sage cage careportal\n\n\n\n\n\n\nPUMP_ENABLE_ALERTS\n\n\ntrue\n\n\n\n\n\n\nPUMP_URGENT_BATT_U\n\n\n30\n(This is the pump battery percentage that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_BATT_V\n\n\n1.25\n(This is the pump battery voltage that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_RES\n\n\n10\n(This is the reservoir volume that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_CLOCK\n\n\n30\n\n\n\n\n\n\nLOOP_ENABLE_ALERTS\n\n\ntrue\n\n\n\n\n\n\nLOOP_WARN\n\n\n20\n(This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)\n\n\n\n\n\n\nLOOP_URGENT\n\n\n60\n(Same as the alert above, but will be red in color and have a shorter snooze option.)\n\n\n\n\n\n\n\n\n\n\n\nClick on \nOpen App\n in the top right corner of your Heroku site.\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the settings (those three horizontal lines in upper right corner).  Now check that your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), check the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them), and then press save.  Your NIGHTSCOUT site is all set-up.  Congrats!\n\n\n\n\n\n\n\n\n\n\n\n\n\nDouble check that your NS Profile settings are current and that you have a basal profile entered, if you want to see the temp basals that Loop is setting.\n\n\n\n\nEVENT HISTORY\n\n\nDon't forget to keep you Loop App's Preferred Source set to \nEvent History\n if you want your NS site to smoothly integrate.  Preferred Source set to \nReservoir\n will result in carbs not being uploaded and temp basals not being displayed.", 
            "title": "Update Site"
        }, 
        {
            "location": "/nightscout/update_user/#updating-nightscout-site", 
            "text": "If you are new to Loop and haven\u2019t updated your NS site since before December 1, 2016, you will want to update your NS site.  You can run either the \"master\" or \"dev\" branches of cgm-remote-monitor with Loop.  To check what version your Nightscout site is running, go to your Nightscout site and pull open the site settings by clicking on the three horizontal lines at the top right of the screen.  Scroll down and see if you are running 0.9.2-dev-20161201 or newer for \"dev\" branch.  Notice the \u201cdev\u201d branch is date stamped 0.9.x-dev-YYYMMDD; or you\u2019ll see version 0.9.2 for \"master\" branch deployments.  If you are a current NS user and simply want to update your site, this procedure will work as well.", 
            "title": "UPDATING NIGHTSCOUT SITE"
        }, 
        {
            "location": "/nightscout/update_user/#updating-your-repository-in-github", 
            "text": "Copy, paste, and goto the one of the following links depending on which branch of cgm-remote-monitor you are currently running (replace  yourgithubname  with your actual GitHub user name)   for master branch deployments:  https://github.com/yourgithubname/cgm-remote-monitor/compare/master...nightscout:master  For dev branch deployments:  https://github.com/yourgithubname/cgm-remote-monitor/compare/dev...nightscout:dev      Click the big green  Create pull request  button. Another screen will appear, fill in a title and click button to create the pull request, and then you can  Merge pull request , and finally  Confirm merge .                        Your cgm-remote-monitor repository is now up-to-date.  Nice work.    If you don\u2019t have your Heroku set-up to automatically update when your repository is updated, you may have to go into your Heroku  Deploy  section and manually deploy your branch now that your repository has been updated.  Make sure you are connected to your GitHub cgm-remote-monitor repository.", 
            "title": "Updating your repository in GitHub"
        }, 
        {
            "location": "/nightscout/update_user/#new-loopers-variables", 
            "text": "For new Loopers (but old Nightscout users), you will need to add some variables to your Heroku site to Loop.     Login to your Heroku site, select the  Settings  tab near the top of the screen on your Heroku app.       Click on  Reveal Config  Vars .  Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED and ENABLE lines are required, the others just make Nightscout more useful when Looping.         KEY  VALUE      DEVICESTATUS_ADVANCED  true    PUMP_FIELDS  battery reservoir clock status    PUMP_RETRO_FIELDS  battery reservoir clock status    SHOW_FORECAST  loop    SHOW_PLUGINS  loop pump cob iob sage cage careportal    PUMP_ENABLE_ALERTS  true    PUMP_URGENT_BATT_U  30 (This is the pump battery percentage that will trigger a red, urgent alert in NS.)    PUMP_URGENT_BATT_V  1.25 (This is the pump battery voltage that will trigger a red, urgent alert in NS.)    PUMP_URGENT_RES  10 (This is the reservoir volume that will trigger a red, urgent alert in NS.)    PUMP_URGENT_CLOCK  30    LOOP_ENABLE_ALERTS  true    LOOP_WARN  20 (This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)    LOOP_URGENT  60 (Same as the alert above, but will be red in color and have a shorter snooze option.)      Click on  Open App  in the top right corner of your Heroku site.       Click on the settings (those three horizontal lines in upper right corner).  Now check that your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), check the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them), and then press save.  Your NIGHTSCOUT site is all set-up.  Congrats!       Double check that your NS Profile settings are current and that you have a basal profile entered, if you want to see the temp basals that Loop is setting.", 
            "title": "New Loopers Variables"
        }, 
        {
            "location": "/nightscout/update_user/#event-history", 
            "text": "Don't forget to keep you Loop App's Preferred Source set to  Event History  if you want your NS site to smoothly integrate.  Preferred Source set to  Reservoir  will result in carbs not being uploaded and temp basals not being displayed.", 
            "title": "EVENT HISTORY"
        }, 
        {
            "location": "/nightscout/azure_migration/", 
            "text": "Migrating from Azure to Heroku\n\n\nIf you are a current Azure user who wants to move to Heroku, but not lose all your old NS data, you will need do the following steps:\n\n\n\n\nupdate your repository in GitHub\n\n\ncreate a new heroku nightscout site\n\n\nmigrate your mLab database to new site\n\n\n\n\nUpdating your repository in GitHub\n\n\n\n\nCopy, paste, and goto the one of the following links depending on which branch of cgm-remote-monitor you are currently running (replace \nyourgithubname\n with your actual GitHub user name)\n\n\n\n\nfor \nmaster\n branch deployments:\n\n\nhttps://github.com/yourgithubname/cgm-remote-monitor/compare/master...nightscout:master\n\n\nFor \ndev\n branch deployments:\n\n\nhttps://github.com/yourgithubname/cgm-remote-monitor/compare/dev...nightscout:dev\n\n\n\n\n\n\n\n\n\n\n\nClick the big green \nCreate pull request\n button. Another screen will appear, fill in a title and click button to create the pull request, and then you can \nMerge pull request\n, and finally \nConfirm merge\n.\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\nYour cgm-remote-monitor repository is now up-to-date.  Nice work.\n\n\n\n\nHeroku Nightscout Site Setup\n\n\n\n\nCreate an account at \nHeroku\n and choose the Primary Development Language to be Node.js when you create your account.  You\u2019re going to use a free account, but you will still need to enter credit card information for your account setup.  Don\u2019t forget to check your email to confirm your Heroku account.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGo to your Nightscout cgm-remote-monitor repository in GitHub (https://github.com/yourGitHubname/cgm-remote-monitor)\n\n\n\n\n\n\nScroll down until you see the purple \nDeploy to Heroku\n button.  Click that button.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive your app a name, this will be the prefix of your NS site\u2019s URL. For example, \nhttps://yourappname.herokuapp.com\n\n\n\n\n\n\nFill out the information lines in the \nConfig Variables\n Section of that page, as shown below.  Some of the lines can stay with the default entries already provided.\n\n\n\n\n\n\n\n\n\n\n\n\nKEY\n\n\nVALUE\n\n\n\n\n\n\n\n\n\n\nAPI_SECRET\n\n\nCreate your own API_SECRET\u2026this is like the password to your NS site.  Please write it down somewhere safe or commit it to memory, you will be using it in the future.  It needs to be at least 12 characters long and should NOT use the `@` symbol.\n\n\n\n\n\n\nDISPLAY_UNITS\n\n\nenter either mg/dl or mmol\n\n\n\n\n\n\nENABLE\n\n\nbridge loop pump iob cob basal careportal sage cage\n(Enter all of the words without commas.  Just a single space between each word. Make sure autocorrect does not add space between careportal)\n\n\n\n\n\n\nDISABLE\n\n\nLeave blank\n\n\n\n\n\n\nALARM_TYPES\n\n\nsimple\n\n\n\n\n\n\nBG_HIGH\n\n\nEnter the numeric value of BG you\u2019d like as an urgent high alarm.\n\n\n\n\n\n\nBG_TARGET_TOP\n\n\nEnter the numeric value of the top of your target BG.\n\n\n\n\n\n\nBG_TARGET_BOTTOM\n\n\nEnter the numeric value of the bottom of your target BG.\n\n\n\n\n\n\nBG_LOW\n\n\nEnter the numeric value of the BG you\u2019d like as an urgent low alarm.\n\n\n\n\n\n\nPUSHOVER lines\n\n\nCan be left blank for now.   See PUSHOVER section if you want to integrate PUSHOVER notifications with NS later.\n\n\n\n\n\n\nCUSTOM_TITLE\n\n\nThis will be the text displayed in the upper left part of the NS website.\n\n\n\n\n\n\nTHEME\n\n\nchange from default to colors\n\n\n\n\n\n\nBRIDGE_USER_NAME\n\n\nEnter your Dexcom Share Account login name.  This should be the same account name used in the Share2 or G5 Mobile app.\n\n\n\n\n\n\nBRIDGE_PASSWORD\n\n\nEnter your Dexcom Share Account password.\n\n\n\n\n\n\nBG_TARGET TOP\n\n\nEnter the numeric value of the top of your target BG.\n\n\n\n\n\n\nBG_TARGET_BOTTOM\n\n\nEnter the numeric value of the bottom of your target BG.\n\n\n\n\n\n\n\n\n\nThe remaining variables can be left at their default values.\n\n\n\n\nClick the purple \nDeploy\n button at the bottom of screen\n\n\n\n\n\n\n\n\n\n\n\n\n\nWait a little bit while Heroku builds your NS app.  You\u2019ll see some text scroll by in the Build App box, and then finally, you will have a message that the NS app was successfully deployed.\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can verify your site\u2019s successful build by clicking \nView\n (you should see black site with a profile warning).  You will be redirected to a profile set-up page.  (If it doesn't redirect automatically, refresh your webpage).  \n\n\n\n\n\n\n\n\n\n\n\nYou do not have to enter all the information in the profile if you are using Loop (since Loop will be providing the information for IOB and COB rather than letting NS calculate them), but you do have to fill out the \nBasal Profile\n and \nTimeZone\n at a minimum in order to have your temp basals properly display.  Click \nSave\n when you have entered the information.  You will be prompted to authenticate, if it is the first time you\u2019ve used the device to make changes in your profile.  Click on the \nAuthenticate\n link at the bottom of the site, and enter your API_SECRET to complete the authentication.\n\n\n\n\n\n\n\n\n\n\n\nAssuming your previous browser tab is still open for \"Create a new App | Heroku\", let's go back to that tab.  This time instead of choosing the \nView\n option, we are going to select the \nManage App\n button. Then, select the \nSettings\n tab near the top of the screen on your Heroku app.\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on \nReveal Config  Vars\n. Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED is a required line, the others just make Nightscout more useful when Looping.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKEY\n\n\nVALUE\n\n\n\n\n\n\n\n\n\n\nDEVICESTATUS_ADVANCED\n\n\ntrue\n\n\n\n\n\n\nPUMP_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nPUMP_RETRO_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nSHOW_FORECAST\n\n\nloop\n\n\n\n\n\n\nSHOW_PLUGINS\n\n\nloop pump cob iob sage cage careportal\n\n\n\n\n\n\nPUMP_ENABLE_ALERTS\n\n\ntrue\n\n\n\n\n\n\nPUMP_URGENT_BATT_U\n\n\n30\n(This is the pump battery percentage that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_BATT_V\n\n\n1.25\n(This is the pump battery voltage that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_RES\n\n\n10\n(This is the reservoir volume that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_CLOCK\n\n\n30\n\n\n\n\n\n\nLOOP_ENABLE_ALERTS\n\n\ntrue\n\n\n\n\n\n\nLOOP_WARN\n\n\n20\n(This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)\n\n\n\n\n\n\nLOOP_URGENT\n\n\n60\n(Same as the alert above, but will be red in color and have a shorter snooze option.)\n\n\n\n\n\n\n\n\n\nThe remaining variables can be left at their default values.\n\n\n\n\nClick on \nOpen App\n in the top right corner of your Heroku site.\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the settings (those three horizontal lines in upper right corner).  Now check that your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), check the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them), and then press save. Your new Nightscout site is all set-up.  Congrats!\n\n\n\n\n\n\n\n\n\n\n\nMigrate mLab database\n\n\nIf you\u2019d like to seamlessly keep all your old Azure NS data showing in your new Heroku NS site, you\u2019ll need to copy and paste your old \nMONGODB\n string from your Azure site.  Find it in either Application Settings or Connection strings in your Azure control panel and then go to Heroku\u2019s \nMONGODB_URI\n line.  Replace the content with your copied string from Azure.  Double check that your Azure collection used the \u201centries\u201d name\u2026if it doesn\u2019t, then you will need to update that variable in Heroku to match as well.\n\n\n\n\n\n\n\n\n\nEVENT HISTORY\n\n\nDon't forget to keep you Loop App's Preferred Source set to \nEvent History\n if you want your NS site to smoothly integrate.  Preferred Source set to \nReservoir\n will result in carbs not being uploaded and temp basals not being displayed.", 
            "title": "Azure to Heroku"
        }, 
        {
            "location": "/nightscout/azure_migration/#migrating-from-azure-to-heroku", 
            "text": "If you are a current Azure user who wants to move to Heroku, but not lose all your old NS data, you will need do the following steps:   update your repository in GitHub  create a new heroku nightscout site  migrate your mLab database to new site", 
            "title": "Migrating from Azure to Heroku"
        }, 
        {
            "location": "/nightscout/azure_migration/#updating-your-repository-in-github", 
            "text": "Copy, paste, and goto the one of the following links depending on which branch of cgm-remote-monitor you are currently running (replace  yourgithubname  with your actual GitHub user name)   for  master  branch deployments:  https://github.com/yourgithubname/cgm-remote-monitor/compare/master...nightscout:master  For  dev  branch deployments:  https://github.com/yourgithubname/cgm-remote-monitor/compare/dev...nightscout:dev      Click the big green  Create pull request  button. Another screen will appear, fill in a title and click button to create the pull request, and then you can  Merge pull request , and finally  Confirm merge .                       Your cgm-remote-monitor repository is now up-to-date.  Nice work.", 
            "title": "Updating your repository in GitHub"
        }, 
        {
            "location": "/nightscout/azure_migration/#heroku-nightscout-site-setup", 
            "text": "Create an account at  Heroku  and choose the Primary Development Language to be Node.js when you create your account.  You\u2019re going to use a free account, but you will still need to enter credit card information for your account setup.  Don\u2019t forget to check your email to confirm your Heroku account.        Go to your Nightscout cgm-remote-monitor repository in GitHub (https://github.com/yourGitHubname/cgm-remote-monitor)    Scroll down until you see the purple  Deploy to Heroku  button.  Click that button.         Give your app a name, this will be the prefix of your NS site\u2019s URL. For example,  https://yourappname.herokuapp.com    Fill out the information lines in the  Config Variables  Section of that page, as shown below.  Some of the lines can stay with the default entries already provided.       KEY  VALUE      API_SECRET  Create your own API_SECRET\u2026this is like the password to your NS site.  Please write it down somewhere safe or commit it to memory, you will be using it in the future.  It needs to be at least 12 characters long and should NOT use the `@` symbol.    DISPLAY_UNITS  enter either mg/dl or mmol    ENABLE  bridge loop pump iob cob basal careportal sage cage (Enter all of the words without commas.  Just a single space between each word. Make sure autocorrect does not add space between careportal)    DISABLE  Leave blank    ALARM_TYPES  simple    BG_HIGH  Enter the numeric value of BG you\u2019d like as an urgent high alarm.    BG_TARGET_TOP  Enter the numeric value of the top of your target BG.    BG_TARGET_BOTTOM  Enter the numeric value of the bottom of your target BG.    BG_LOW  Enter the numeric value of the BG you\u2019d like as an urgent low alarm.    PUSHOVER lines  Can be left blank for now.   See PUSHOVER section if you want to integrate PUSHOVER notifications with NS later.    CUSTOM_TITLE  This will be the text displayed in the upper left part of the NS website.    THEME  change from default to colors    BRIDGE_USER_NAME  Enter your Dexcom Share Account login name.  This should be the same account name used in the Share2 or G5 Mobile app.    BRIDGE_PASSWORD  Enter your Dexcom Share Account password.    BG_TARGET TOP  Enter the numeric value of the top of your target BG.    BG_TARGET_BOTTOM  Enter the numeric value of the bottom of your target BG.     The remaining variables can be left at their default values.   Click the purple  Deploy  button at the bottom of screen       Wait a little bit while Heroku builds your NS app.  You\u2019ll see some text scroll by in the Build App box, and then finally, you will have a message that the NS app was successfully deployed.       You can verify your site\u2019s successful build by clicking  View  (you should see black site with a profile warning).  You will be redirected to a profile set-up page.  (If it doesn't redirect automatically, refresh your webpage).        You do not have to enter all the information in the profile if you are using Loop (since Loop will be providing the information for IOB and COB rather than letting NS calculate them), but you do have to fill out the  Basal Profile  and  TimeZone  at a minimum in order to have your temp basals properly display.  Click  Save  when you have entered the information.  You will be prompted to authenticate, if it is the first time you\u2019ve used the device to make changes in your profile.  Click on the  Authenticate  link at the bottom of the site, and enter your API_SECRET to complete the authentication.      Assuming your previous browser tab is still open for \"Create a new App | Heroku\", let's go back to that tab.  This time instead of choosing the  View  option, we are going to select the  Manage App  button. Then, select the  Settings  tab near the top of the screen on your Heroku app.       Click on  Reveal Config  Vars . Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED is a required line, the others just make Nightscout more useful when Looping.         KEY  VALUE      DEVICESTATUS_ADVANCED  true    PUMP_FIELDS  battery reservoir clock status    PUMP_RETRO_FIELDS  battery reservoir clock status    SHOW_FORECAST  loop    SHOW_PLUGINS  loop pump cob iob sage cage careportal    PUMP_ENABLE_ALERTS  true    PUMP_URGENT_BATT_U  30 (This is the pump battery percentage that will trigger a red, urgent alert in NS.)    PUMP_URGENT_BATT_V  1.25 (This is the pump battery voltage that will trigger a red, urgent alert in NS.)    PUMP_URGENT_RES  10 (This is the reservoir volume that will trigger a red, urgent alert in NS.)    PUMP_URGENT_CLOCK  30    LOOP_ENABLE_ALERTS  true    LOOP_WARN  20 (This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)    LOOP_URGENT  60 (Same as the alert above, but will be red in color and have a shorter snooze option.)     The remaining variables can be left at their default values.   Click on  Open App  in the top right corner of your Heroku site.       Click on the settings (those three horizontal lines in upper right corner).  Now check that your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), check the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them), and then press save. Your new Nightscout site is all set-up.  Congrats!", 
            "title": "Heroku Nightscout Site Setup"
        }, 
        {
            "location": "/nightscout/azure_migration/#migrate-mlab-database", 
            "text": "If you\u2019d like to seamlessly keep all your old Azure NS data showing in your new Heroku NS site, you\u2019ll need to copy and paste your old  MONGODB  string from your Azure site.  Find it in either Application Settings or Connection strings in your Azure control panel and then go to Heroku\u2019s  MONGODB_URI  line.  Replace the content with your copied string from Azure.  Double check that your Azure collection used the \u201centries\u201d name\u2026if it doesn\u2019t, then you will need to update that variable in Heroku to match as well.", 
            "title": "Migrate mLab database"
        }, 
        {
            "location": "/nightscout/azure_migration/#event-history", 
            "text": "Don't forget to keep you Loop App's Preferred Source set to  Event History  if you want your NS site to smoothly integrate.  Preferred Source set to  Reservoir  will result in carbs not being uploaded and temp basals not being displayed.", 
            "title": "EVENT HISTORY"
        }, 
        {
            "location": "/nightscout/mlab_cleanup/", 
            "text": "mLab Database Maintenance\n\n\nRegardless of whether you are on Azure or Heroku for Nightscout, you are using an mLab database for storing your Loop data.  mLab allows you to store up to 500 MB for free.  When you hit that data cap, your NS will stop working.  Your Share Bridge will not pull data and your site will be \u201cstale\u201d.  \n\n\nThe good news?  Loop can still run just fine until you cleanout your mLab database.  The bad news?  You just won\u2019t be able to remotely monitor Loop through NS until you clear up some storage space in mLab.\n\n\nThere are two ways to cleanout some space or otherwise get into your mLab database:\n\n\n\n\nmLab direct access\n\n\nNightscout admin tools\n\n\n\n\nmLab Direct Access\n\n\n\n\n\n\nLogin to your mLab database.  \n\n\n\n\n\n\nIf you setup your own Azure site and mLab database, go directly to \nmLab\n and login, or\n\n\n\n\n\n\nIf you setup your own Azure site and mLab database, then setup a Heroku account and pointed back to your old mLab database (i.e., copy and pasted the MONGODB_URI from Azure), go directly to \nmLab\n and login, or\n\n\n\n\n\n\nIf you setup a Heroku site and let Heroku setup an mLab database for you (which is typical for new Heroku sites), you will access mLab through your Heroku account main page.   Login to your Heroku account and click on the mLab logo as shown below.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(Users coming directly from a Heroku click will see the screen below.  If you had to login to mLab with a name and password, you will first see a line with your MongoDB database.  Click on your database name to see the screen below with all the collection names.) \n\n\nYour various collections are shown, similar to the screen shot below.  The amount of data each collection is using is listed to the far right of each collection\u2019s line.  I recommend emptying the \u201cloop\u201d collection first and then \"devicestatus\" to free up database storage.  If you need any of the information in the database, you may want to do a selective delete of data. For example, if you are headed into an endocrinologist appointment and want to print out recent Nightscout reports to take with you. Eventually you may need to empty more collections.  It should be awhile though, as the other collections are significantly smaller and will take a long time to fill.\n\n\nClick on a collection\u2019s name to open it.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the button that says \u201cDelete all documents in collection\u201d and then confirm the deletion.\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can confirm that your cleanout has resolved the problem, by checking that your database size is below 500 MB now.  Click on the \u201cHome\u201d link in top left.  Then review the size of the database as shown.\n\n\n\n\n\n\n\n\n\n\n\nNightscout Admin Tools\n\n\nIf you go to your Nightscout site's settings (the three horizontal bars in the upper right of your Nightscout site), you will be able to access your Admin Tools for the site.  These include some useful quick mLab actions, includig deleting documents from the devicestatus collection similar to the action we took in the steps above.  But, it's worth noting that if you have errant future data in your Nightscout site that is causing problems (usually during time changes or overseas travel), you can clean-out future entries through this portal, too.", 
            "title": "mLab"
        }, 
        {
            "location": "/nightscout/mlab_cleanup/#mlab-database-maintenance", 
            "text": "Regardless of whether you are on Azure or Heroku for Nightscout, you are using an mLab database for storing your Loop data.  mLab allows you to store up to 500 MB for free.  When you hit that data cap, your NS will stop working.  Your Share Bridge will not pull data and your site will be \u201cstale\u201d.    The good news?  Loop can still run just fine until you cleanout your mLab database.  The bad news?  You just won\u2019t be able to remotely monitor Loop through NS until you clear up some storage space in mLab.  There are two ways to cleanout some space or otherwise get into your mLab database:   mLab direct access  Nightscout admin tools", 
            "title": "mLab Database Maintenance"
        }, 
        {
            "location": "/nightscout/mlab_cleanup/#mlab-direct-access", 
            "text": "Login to your mLab database.      If you setup your own Azure site and mLab database, go directly to  mLab  and login, or    If you setup your own Azure site and mLab database, then setup a Heroku account and pointed back to your old mLab database (i.e., copy and pasted the MONGODB_URI from Azure), go directly to  mLab  and login, or    If you setup a Heroku site and let Heroku setup an mLab database for you (which is typical for new Heroku sites), you will access mLab through your Heroku account main page.   Login to your Heroku account and click on the mLab logo as shown below.           (Users coming directly from a Heroku click will see the screen below.  If you had to login to mLab with a name and password, you will first see a line with your MongoDB database.  Click on your database name to see the screen below with all the collection names.)   Your various collections are shown, similar to the screen shot below.  The amount of data each collection is using is listed to the far right of each collection\u2019s line.  I recommend emptying the \u201cloop\u201d collection first and then \"devicestatus\" to free up database storage.  If you need any of the information in the database, you may want to do a selective delete of data. For example, if you are headed into an endocrinologist appointment and want to print out recent Nightscout reports to take with you. Eventually you may need to empty more collections.  It should be awhile though, as the other collections are significantly smaller and will take a long time to fill.  Click on a collection\u2019s name to open it.        Click on the button that says \u201cDelete all documents in collection\u201d and then confirm the deletion.       You can confirm that your cleanout has resolved the problem, by checking that your database size is below 500 MB now.  Click on the \u201cHome\u201d link in top left.  Then review the size of the database as shown.", 
            "title": "mLab Direct Access"
        }, 
        {
            "location": "/nightscout/mlab_cleanup/#nightscout-admin-tools", 
            "text": "If you go to your Nightscout site's settings (the three horizontal bars in the upper right of your Nightscout site), you will be able to access your Admin Tools for the site.  These include some useful quick mLab actions, includig deleting documents from the devicestatus collection similar to the action we took in the steps above.  But, it's worth noting that if you have errant future data in your Nightscout site that is causing problems (usually during time changes or overseas travel), you can clean-out future entries through this portal, too.", 
            "title": "Nightscout Admin Tools"
        }, 
        {
            "location": "/nightscout/pushover/", 
            "text": "Remote notifications\n\n\nWhile Loop app currently sends notifications locally on Loop user's iPhone, parents and caregivers likely want those messages on their phones, too.\n\n\nCurrently we can achieve this via 2 options:\n\n\n\n\nPushover service, or\n\n\nLoop Follow app\n\n\n\n\nPushover\n\n\nPushover is a paid service (but has a free 7-day trial period).  The cost is currently $4.99 flat, one-time fee per platform.  You can use it across all your personal devices (iPhones, iPads, etc) for the one fee per platform .  Android and iPhones and Desktop computers are on separate platforms.  So if your house has both Androids and iPhones that you wanted to receive notifications on, you would have to pay two flat fees.  \n\n\nYou can follow this \nguide\n for general Pushover setup with NS.  You will have to make some specific modifications for Loop-related alarms.\n\n\n\n\n\n\nSignup for a \nPushover Account\n\n\n\n\n\n\nVerify your account from the email they will send you\n\n\n\n\n\n\nDownload the Pushover App to your iPhone or Android and allow notifications from the app\n\n\n\n\n\n\nAdd \npushover\n to your existing ENABLE line on NS connection strings\n\n\n\n\n\n\nAdd any alerts you'd like to your connection strings (Azure) or config vars (Heroku), if you haven't already.\n\n\n\n\n\n\nAdd the \nPUSHOVER_ANNOUNCEMENT_KEY\n and \nPUSHOVER_API_TOKEN\n from your Pushover account to the lines in your connection strings in order to determine what types of notifications you would like to receive.  Screenshot below has a brief description of the various alerts you enable by having the line populated...you can customize as you wish.  The example shows the \nPUSHOVER_USER_KEY\n line as being populated, but for Loop users this means you would get a notification every time a temp basal is set by Loop.  Most Loopers would probably get notification fatigue by that...so if you leave that line blank, you will not get those notifications (and that's a good thing).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoop Follow\n\n\nThe Loop Follow application is a simple iOS app written in Swift that accepts notifications from Loop and is powered by Azure. The setup for the Loop Follow application iOS portion is a little more involved than setting up the Loop application.  \n\n\nFor more background read this \nblog post\n\n\n\n\n\n\nIt's more challenging to setup Loop-Follow due to the nature of using Push notifications and requiring some special provisioning on both the iOS side and the Azure configuration so they talk to each other.\n\n\nFor future releases, the Loop Follow developers are planning to use a shared Push notification service hosted on NightScout Foundation Azure subscription to simplify the process and make it available to Loop users not using Azure and also a free service comparing to Push Over with more flexibility!\n\n\nFor instructions go to \nwiki\n or join the conversation on \ngitter", 
            "title": "Remote Notifications"
        }, 
        {
            "location": "/nightscout/pushover/#remote-notifications", 
            "text": "While Loop app currently sends notifications locally on Loop user's iPhone, parents and caregivers likely want those messages on their phones, too.  Currently we can achieve this via 2 options:   Pushover service, or  Loop Follow app", 
            "title": "Remote notifications"
        }, 
        {
            "location": "/nightscout/pushover/#pushover", 
            "text": "Pushover is a paid service (but has a free 7-day trial period).  The cost is currently $4.99 flat, one-time fee per platform.  You can use it across all your personal devices (iPhones, iPads, etc) for the one fee per platform .  Android and iPhones and Desktop computers are on separate platforms.  So if your house has both Androids and iPhones that you wanted to receive notifications on, you would have to pay two flat fees.    You can follow this  guide  for general Pushover setup with NS.  You will have to make some specific modifications for Loop-related alarms.    Signup for a  Pushover Account    Verify your account from the email they will send you    Download the Pushover App to your iPhone or Android and allow notifications from the app    Add  pushover  to your existing ENABLE line on NS connection strings    Add any alerts you'd like to your connection strings (Azure) or config vars (Heroku), if you haven't already.    Add the  PUSHOVER_ANNOUNCEMENT_KEY  and  PUSHOVER_API_TOKEN  from your Pushover account to the lines in your connection strings in order to determine what types of notifications you would like to receive.  Screenshot below has a brief description of the various alerts you enable by having the line populated...you can customize as you wish.  The example shows the  PUSHOVER_USER_KEY  line as being populated, but for Loop users this means you would get a notification every time a temp basal is set by Loop.  Most Loopers would probably get notification fatigue by that...so if you leave that line blank, you will not get those notifications (and that's a good thing).", 
            "title": "Pushover"
        }, 
        {
            "location": "/nightscout/pushover/#loop-follow", 
            "text": "The Loop Follow application is a simple iOS app written in Swift that accepts notifications from Loop and is powered by Azure. The setup for the Loop Follow application iOS portion is a little more involved than setting up the Loop application.    For more background read this  blog post    It's more challenging to setup Loop-Follow due to the nature of using Push notifications and requiring some special provisioning on both the iOS side and the Azure configuration so they talk to each other.  For future releases, the Loop Follow developers are planning to use a shared Push notification service hosted on NightScout Foundation Azure subscription to simplify the process and make it available to Loop users not using Azure and also a free service comparing to Push Over with more flexibility!  For instructions go to  wiki  or join the conversation on  gitter", 
            "title": "Loop Follow"
        }, 
        {
            "location": "/nightscout/reports/", 
            "text": "Reports\n\n\nNightscout offer some fantastic data-crunching report tools in the settings area (the upper right corner, three horizontal lines).  You can play around with various date ranges, target ranges, and provide reports to your endocrinologist to review.", 
            "title": "Reports"
        }, 
        {
            "location": "/nightscout/reports/#reports", 
            "text": "Nightscout offer some fantastic data-crunching report tools in the settings area (the upper right corner, three horizontal lines).  You can play around with various date ranges, target ranges, and provide reports to your endocrinologist to review.", 
            "title": "Reports"
        }, 
        {
            "location": "/rig/overview/", 
            "text": "Loop Displays\n\n\nThis section of the docs will go over the Loop displays available and what information they offer.  Information about your Loop's actions (or inactions) can often be found simply by looking at the visuals presented in the app.  \n\n\nStatus Screen\n\n\nThe Status Screen is the main root navigation screen in Loop.  It is broken up into 3 main display areas; Heads Up display (HUD), Charts, and Toolbar. The HUD is the top area of the screen.  This shows status of the last time loop ran, current BG Reading, current temp-basal, current insulin reservoir volume remaining, and current pump percentage battery remaining. The next area is the charting area. This includes, glucose trend and prediction, Active Insulin, Insulin Delivery, and Carbohydrates.  The final display area is the toolbar which has buttons for Carbohydrate, Insulin Bolus, Workout Mode, and Settings.\n\n\n\n\nHeads Up Display\n\n\nLoop Status\n\n\nThe Loop Status is the colored circle in the upper left corner of the main Loop display.  There are four colors that are typically displayed.  \n\n\nA grey circle indicates the Loop is warming up and hasn\u2019t yet completed its initial loop.  When the Loop is first activated, it may take about 15-20 minutes to complete the first Loop, and the grey circle will be displayed.  It needs CGM data to be gathered, so be patient.  When it finally completes its first loop, the circle will turn green.  If you can't get the loop to turn grey, try reading the Use guide for Green Loop.\n\n\nA green circle indicates the Loop has been successfully completed within the last 5 minutes.  The time since the loop last completed will be displayed under the circle.\n\n\nA yellow circle indicates the Loop has not completed in the last 5-15 minutes.  It is not unusual to have a few instances of yellow circles throughout a day of looping.  They can be caused by temporarily getting too far away from RileyLink or iPhone (more than about 3-10 feet depending on conditions), CGM failing to read or being in ???, radio frequency \u201cnoise\u201d interference, and such.  Generally, most yellow circles will self-resolve without needing any special troubleshooting. \n\n\nA red circle indicates the Loop has not completed in over 15 minutes.  This is not a typical state, and you should troubleshoot why Loop is not completing.  Please review the Use sections' Green Loop page for troubleshooting tips.   If you have Nightscout integration, you can also use the Loop Pill to help troubleshoot.  Clicking on the red circle will also popup the last error message to help guide your troubleshooting.\n\n\nWhen the circle is notched and not complete, that means the Loop is operating in \u201copen loop\u201d mode.  When the \u201cclosed loop\u201d setting is turned on, the loop status will show a completed circle.\n\n\nThe loop status circle will pulse slightly when RileyLink is giving the pump a new temp basal setting.  The pulsing will stop when the temp basal has been set by the pump.\n\n\nGlucose\n\n\nThe current BG reading from the CGM will display, including trending arrow and time the reading was taken.  If the BG is being read straight from the G5 transmitter or G4 receiver, no special symbols will appear.  \n\n\nIf the BG is being read from the Dexcom Share Servers, a small cloud icon will be in the corner of the BG reading.  Internet access is required to run in this mode.\n\n\nWhen you first start Loop, there may be a small yellow alert next to the BG.  This should go away within a short period of time (around 5 minutes or less).  If the yellow alert remains, something is wrong with fetching BG data.  You can try restarting the Loop app (double tap home button, upswipe on app to close) to see if BG data will resume.  Loop will not work when a yellow BG alert is shown (*note G5 exception below).\n\n\n*For Dexcom G5 users, a yellow alert will appear when a calibration is needed.  The alert will clear once the calibration is given, but typically Loop will work IF the yellow alert is only for a needed G5 calibration. \n\n\nTemp Basal\n\n\nThe temp basal will display the enacted temp basal change relative to the scheduled basal.  So if the scheduled basal was 1.0 units per hour and Loop has set a temp basal of 0.2 units per hour, the temp basal icon will display -0.8 U (as shown in the graphic to the left).\n\n\nReservoir\n\n\nThe reservoir icon will remain grey and plain until insulin volume decreases.  At 25% reservoir volume remaining, the reservoir icon will turn yellow.  At 10% reservoir volume remaining, the reservoir icon will turn red.  The remaining units will be displayed when it gets to these lower thresholds.\n\n\nBattery\n\n\nFor x23, x54 pumps, the battery icon will show 100/75/50/25% increments just as the pump does.  As the battery level decreases, the icon will turn from grey to yellow to red.  For x22 pumps, the battery icon will read discrete % values.  \n\n\nCharts\n\n\nThere are several charts that help you navigate your Loop actions.  Clicking on each of the charts will also open up additional information.\n\n\nGlucose Chart\n\n\n\n\n\n\n\n\n\nThe glucose chart displays BG values in your preferred units. The vertical scale of the chart is calculated on the fly by Loop to be as useful as possible while including the highest and lowest readings in the chart.\n\n\nThe horizontal axis is set to go forward from the current time until your DIA forward (so you can see what Loop eventually thinks BG will be). It then goes back in time as far as it can based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time. If you would like to see further back in time you can use Nightscout or you can modify your Loop Graph hours (see the customizations available when you build your Loop app).\n\n\nThe target BG range is shown as a blue bar on the glucose chart.  If you have a single-value target BG range (such as 100-100 mg/dl), no blue range will appear.\n\n\nThe eventual BG displayed in the right side of the chart does NOT take into account a recently enacted temp basal.  In other words, if you are above BG target and Loop just enacted a high temp basal to help, the eventual BG does not reflect the expected lowering of BGs that would result from that recently enacted temp basal.  Loop waits until the insulin has actually been delivery before it \"uses\" the insulin in its calculations for BG impacts.  If you suspended your pump or had a \"no delivery\" alarm shortly after the temp basal was started, you would want that accurately reflected in the insulin on board and associated eventual BG.\n\n\nIf you tap on the Glucose Chart itself, it will open the Predicted Glucose chart\n\n\nPredicted Glucose Chart\n\n\n\n\n\n\n\n\n\nThe predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual BG. The graph at the top of this view will match your Glucose Chart. Below this chart you will see a very detailed explanation of all of the variables that Loop takes into account in predicting your future BG value. Each of those effects (including Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction) includes details of the calculation use. You can tap on any of the entries to turn them off and on for visualization. The resulting changes can be viewed by the changes in the dashed lines.\n\n\nAdditionally, at the bottom of this screen there is a setting to \u201cEnable Retrospective Correction\u201d. By enabling it, it will more aggressively increase or decrease basal delivery when BG movement doesn\u2019t match the carbohydrates and insulin-based model.  You can read more about this setting in the Algorithm section of these docs.\n\n\nActive Insulin Chart\n\n\n\n\n\n\n\n\n\nThe Active Insulin chart displays the total insulin contribution from both temp basals and boluses.  Active IOB can be either positive and negative IOB.  Negative IOB results from the suspension of normally scheduled basals.  The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered).\n\n\nInsulin Delivery Chart\n\n\n\n\n\n\n\n\n\nThe Insulin Delivery chart displays a history of the temp basals enacted by Loop.  The display is relative to the scheduled basal rates entered in the Loop settings.  So, a rate displayed in this chart as \u201c+0 units\u201d would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate.  Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time).  The total insulin delivered, including all basals and boluses, is given in the upper right corner of the graph.\n\n\nPlease be patient for a bolus delivery to appear.  There is a lag time from when you press the \u201cdeliver\u201d bolus button.  The insulin has to be delivered and then the pump reservoir needs to be read to confirm delivery, before the triangle will appear and IOB will be added.  On large boluses, the time to actually deliver the bolus may be several minutes.\n\n\nReservoir and Event History\n\n\n\n\n\n\n\n\n\nClicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history.  The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight).  There are two viewing options; Reservoir or Event History.  \n\n\nLoop\u2019s default is to use actual reservoir volumes for determining the insulin delivered.  When there is a gap of 30 minutes or more in reservoir history, Loop classifies these readings as \u201cnot continuous\u201d and therefore unreliable for the purposes of determining insulin deliveries.  Therefore in those instances, Loop will rely on the event histories to determine insulin deliveries during the non-continuous times.  \n\n\nThe reservoir volume history can also be intentionally edited to cause a \u201cnot continuous\u201d instance.  Please see the Priming and Site Changes section of these docs for important information regarding IOB considerations during those activities, and how a \u201cnot continuous\u201d edit may help resolve erroneous IOB.\n\n\nCarbohydrate Chart\n\n\n\n\n\n\n\n\n\nThe Carbohydrate chart displays the carbs used by Loop to predict BG changes.  The active COB is displayed in the upper right corner of the chart.  Clicking on the chart will open the Carb Entries history and you can edit any previous entries through that screen.\n\n\nTool Bar\n\n\n\n\n\n\n\n\n\nThe tool bar is where your inputs to the Loop behavior take place.  The individual components of the tool bar are discussed in further detail in separate sections of the docs.", 
            "title": "Overview"
        }, 
        {
            "location": "/rig/overview/#loop-displays", 
            "text": "This section of the docs will go over the Loop displays available and what information they offer.  Information about your Loop's actions (or inactions) can often be found simply by looking at the visuals presented in the app.", 
            "title": "Loop Displays"
        }, 
        {
            "location": "/rig/overview/#status-screen", 
            "text": "The Status Screen is the main root navigation screen in Loop.  It is broken up into 3 main display areas; Heads Up display (HUD), Charts, and Toolbar. The HUD is the top area of the screen.  This shows status of the last time loop ran, current BG Reading, current temp-basal, current insulin reservoir volume remaining, and current pump percentage battery remaining. The next area is the charting area. This includes, glucose trend and prediction, Active Insulin, Insulin Delivery, and Carbohydrates.  The final display area is the toolbar which has buttons for Carbohydrate, Insulin Bolus, Workout Mode, and Settings.", 
            "title": "Status Screen"
        }, 
        {
            "location": "/rig/overview/#heads-up-display", 
            "text": "", 
            "title": "Heads Up Display"
        }, 
        {
            "location": "/rig/overview/#loop-status", 
            "text": "The Loop Status is the colored circle in the upper left corner of the main Loop display.  There are four colors that are typically displayed.    A grey circle indicates the Loop is warming up and hasn\u2019t yet completed its initial loop.  When the Loop is first activated, it may take about 15-20 minutes to complete the first Loop, and the grey circle will be displayed.  It needs CGM data to be gathered, so be patient.  When it finally completes its first loop, the circle will turn green.  If you can't get the loop to turn grey, try reading the Use guide for Green Loop.  A green circle indicates the Loop has been successfully completed within the last 5 minutes.  The time since the loop last completed will be displayed under the circle.  A yellow circle indicates the Loop has not completed in the last 5-15 minutes.  It is not unusual to have a few instances of yellow circles throughout a day of looping.  They can be caused by temporarily getting too far away from RileyLink or iPhone (more than about 3-10 feet depending on conditions), CGM failing to read or being in ???, radio frequency \u201cnoise\u201d interference, and such.  Generally, most yellow circles will self-resolve without needing any special troubleshooting.   A red circle indicates the Loop has not completed in over 15 minutes.  This is not a typical state, and you should troubleshoot why Loop is not completing.  Please review the Use sections' Green Loop page for troubleshooting tips.   If you have Nightscout integration, you can also use the Loop Pill to help troubleshoot.  Clicking on the red circle will also popup the last error message to help guide your troubleshooting.  When the circle is notched and not complete, that means the Loop is operating in \u201copen loop\u201d mode.  When the \u201cclosed loop\u201d setting is turned on, the loop status will show a completed circle.  The loop status circle will pulse slightly when RileyLink is giving the pump a new temp basal setting.  The pulsing will stop when the temp basal has been set by the pump.", 
            "title": "Loop Status"
        }, 
        {
            "location": "/rig/overview/#glucose", 
            "text": "The current BG reading from the CGM will display, including trending arrow and time the reading was taken.  If the BG is being read straight from the G5 transmitter or G4 receiver, no special symbols will appear.    If the BG is being read from the Dexcom Share Servers, a small cloud icon will be in the corner of the BG reading.  Internet access is required to run in this mode.  When you first start Loop, there may be a small yellow alert next to the BG.  This should go away within a short period of time (around 5 minutes or less).  If the yellow alert remains, something is wrong with fetching BG data.  You can try restarting the Loop app (double tap home button, upswipe on app to close) to see if BG data will resume.  Loop will not work when a yellow BG alert is shown (*note G5 exception below).  *For Dexcom G5 users, a yellow alert will appear when a calibration is needed.  The alert will clear once the calibration is given, but typically Loop will work IF the yellow alert is only for a needed G5 calibration.", 
            "title": "Glucose"
        }, 
        {
            "location": "/rig/overview/#temp-basal", 
            "text": "The temp basal will display the enacted temp basal change relative to the scheduled basal.  So if the scheduled basal was 1.0 units per hour and Loop has set a temp basal of 0.2 units per hour, the temp basal icon will display -0.8 U (as shown in the graphic to the left).", 
            "title": "Temp Basal"
        }, 
        {
            "location": "/rig/overview/#reservoir", 
            "text": "The reservoir icon will remain grey and plain until insulin volume decreases.  At 25% reservoir volume remaining, the reservoir icon will turn yellow.  At 10% reservoir volume remaining, the reservoir icon will turn red.  The remaining units will be displayed when it gets to these lower thresholds.", 
            "title": "Reservoir"
        }, 
        {
            "location": "/rig/overview/#battery", 
            "text": "For x23, x54 pumps, the battery icon will show 100/75/50/25% increments just as the pump does.  As the battery level decreases, the icon will turn from grey to yellow to red.  For x22 pumps, the battery icon will read discrete % values.", 
            "title": "Battery"
        }, 
        {
            "location": "/rig/overview/#charts", 
            "text": "There are several charts that help you navigate your Loop actions.  Clicking on each of the charts will also open up additional information.", 
            "title": "Charts"
        }, 
        {
            "location": "/rig/overview/#glucose-chart", 
            "text": "The glucose chart displays BG values in your preferred units. The vertical scale of the chart is calculated on the fly by Loop to be as useful as possible while including the highest and lowest readings in the chart.  The horizontal axis is set to go forward from the current time until your DIA forward (so you can see what Loop eventually thinks BG will be). It then goes back in time as far as it can based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time. If you would like to see further back in time you can use Nightscout or you can modify your Loop Graph hours (see the customizations available when you build your Loop app).  The target BG range is shown as a blue bar on the glucose chart.  If you have a single-value target BG range (such as 100-100 mg/dl), no blue range will appear.  The eventual BG displayed in the right side of the chart does NOT take into account a recently enacted temp basal.  In other words, if you are above BG target and Loop just enacted a high temp basal to help, the eventual BG does not reflect the expected lowering of BGs that would result from that recently enacted temp basal.  Loop waits until the insulin has actually been delivery before it \"uses\" the insulin in its calculations for BG impacts.  If you suspended your pump or had a \"no delivery\" alarm shortly after the temp basal was started, you would want that accurately reflected in the insulin on board and associated eventual BG.  If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart", 
            "title": "Glucose Chart"
        }, 
        {
            "location": "/rig/overview/#predicted-glucose-chart", 
            "text": "The predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual BG. The graph at the top of this view will match your Glucose Chart. Below this chart you will see a very detailed explanation of all of the variables that Loop takes into account in predicting your future BG value. Each of those effects (including Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction) includes details of the calculation use. You can tap on any of the entries to turn them off and on for visualization. The resulting changes can be viewed by the changes in the dashed lines.  Additionally, at the bottom of this screen there is a setting to \u201cEnable Retrospective Correction\u201d. By enabling it, it will more aggressively increase or decrease basal delivery when BG movement doesn\u2019t match the carbohydrates and insulin-based model.  You can read more about this setting in the Algorithm section of these docs.", 
            "title": "Predicted Glucose Chart"
        }, 
        {
            "location": "/rig/overview/#active-insulin-chart", 
            "text": "The Active Insulin chart displays the total insulin contribution from both temp basals and boluses.  Active IOB can be either positive and negative IOB.  Negative IOB results from the suspension of normally scheduled basals.  The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered).", 
            "title": "Active Insulin Chart"
        }, 
        {
            "location": "/rig/overview/#insulin-delivery-chart", 
            "text": "The Insulin Delivery chart displays a history of the temp basals enacted by Loop.  The display is relative to the scheduled basal rates entered in the Loop settings.  So, a rate displayed in this chart as \u201c+0 units\u201d would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate.  Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time).  The total insulin delivered, including all basals and boluses, is given in the upper right corner of the graph.  Please be patient for a bolus delivery to appear.  There is a lag time from when you press the \u201cdeliver\u201d bolus button.  The insulin has to be delivered and then the pump reservoir needs to be read to confirm delivery, before the triangle will appear and IOB will be added.  On large boluses, the time to actually deliver the bolus may be several minutes.", 
            "title": "Insulin Delivery Chart"
        }, 
        {
            "location": "/rig/overview/#reservoir-and-event-history", 
            "text": "Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history.  The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight).  There are two viewing options; Reservoir or Event History.    Loop\u2019s default is to use actual reservoir volumes for determining the insulin delivered.  When there is a gap of 30 minutes or more in reservoir history, Loop classifies these readings as \u201cnot continuous\u201d and therefore unreliable for the purposes of determining insulin deliveries.  Therefore in those instances, Loop will rely on the event histories to determine insulin deliveries during the non-continuous times.    The reservoir volume history can also be intentionally edited to cause a \u201cnot continuous\u201d instance.  Please see the Priming and Site Changes section of these docs for important information regarding IOB considerations during those activities, and how a \u201cnot continuous\u201d edit may help resolve erroneous IOB.", 
            "title": "Reservoir and Event History"
        }, 
        {
            "location": "/rig/overview/#carbohydrate-chart", 
            "text": "The Carbohydrate chart displays the carbs used by Loop to predict BG changes.  The active COB is displayed in the upper right corner of the chart.  Clicking on the chart will open the Carb Entries history and you can edit any previous entries through that screen.", 
            "title": "Carbohydrate Chart"
        }, 
        {
            "location": "/rig/overview/#tool-bar", 
            "text": "The tool bar is where your inputs to the Loop behavior take place.  The individual components of the tool bar are discussed in further detail in separate sections of the docs.", 
            "title": "Tool Bar"
        }, 
        {
            "location": "/rig/assembly/", 
            "text": "Priming and Site Changes\n\n\nLoop uses event history and reservoir levels to determine how much insulin has actually been delivered through the pump, and correspondingly the Insulin On Board (IOB).  \nIf you manually prime your tubing WITHOUT changing reservoirs\n, Loop will detect that prime as an insulin delivery and count it as IOB.  Therefore, here are some suggestions for priming, set changes, and reservoir changes with Loop in mind.\n\n\nSite Changes\n\n\n\n\n\n\nIf you change sites and increase reservoir volume (i.e., start a new reservoir), don't worry. So long as you are putting in a reservoir that has more insulin than the old one, IOB will be accurate in Loop.  When Loop sees a rewind and an increase in reservoir volume, it will not count any tubing primes as IOB.\n\n\n\n\n\n\nIf you change sites but \ndo NOT increase reservoir volume\n (i.e., you keep existing reservoir going), you will need to go into Loop's reservoir history and delete 30 minutes of continuous reservoir history including the prime event.  By deleting 30 minutes of reservoir history, Loop will use Event History to determine insulin deliveries and IOB. If you cannot get the prime to clear from the IOB, operate in Open Loop mode until the insulin action duration time has passed.  Deleting history is done by:\n\n\n(1)  clicking on the Insulin Delivery Chart  \n\n\n(2)  selecting the Reservoir history screen  \n\n\n(3)  swiping to delete individual reservoir readings  \n\n\n(4)  delete at least 30 minutes of reservoir readings, including the readings that involved priming events\n\n\n\n\n\n\nPrime Menu\n\n\nWhen you finish priming on a Medtronic pump, please make sure to complete the priming menu.  In other words, finish all the prompts so that you get back to the (nearly blank) normal Medtronic pump screen.  If you don't finish the priming menu, the pump will not begin basal insulin delivery, nor does it alarm.  It is equivalent to the pump being suspended...but you won't be able to see any indication of that in Nightscout as a remotely monitoring parent.  Loop will not detect the prime screen issue and will keep sending temp basal messages...but the pump won't enact them.  On Loop, you could notice it by the active IOB continually going down and then eventually negative IOB, as the basal is not delivered and the reservoir level remains constant.  However, the temp basal graph will still show the bars from the temp basal commands loop has been sending.\n\n\nSo, remember to finish those prime menu screens through to the end.", 
            "title": "Rig assembly"
        }, 
        {
            "location": "/rig/assembly/#priming-and-site-changes", 
            "text": "Loop uses event history and reservoir levels to determine how much insulin has actually been delivered through the pump, and correspondingly the Insulin On Board (IOB).   If you manually prime your tubing WITHOUT changing reservoirs , Loop will detect that prime as an insulin delivery and count it as IOB.  Therefore, here are some suggestions for priming, set changes, and reservoir changes with Loop in mind.", 
            "title": "Priming and Site Changes"
        }, 
        {
            "location": "/rig/assembly/#site-changes", 
            "text": "If you change sites and increase reservoir volume (i.e., start a new reservoir), don't worry. So long as you are putting in a reservoir that has more insulin than the old one, IOB will be accurate in Loop.  When Loop sees a rewind and an increase in reservoir volume, it will not count any tubing primes as IOB.    If you change sites but  do NOT increase reservoir volume  (i.e., you keep existing reservoir going), you will need to go into Loop's reservoir history and delete 30 minutes of continuous reservoir history including the prime event.  By deleting 30 minutes of reservoir history, Loop will use Event History to determine insulin deliveries and IOB. If you cannot get the prime to clear from the IOB, operate in Open Loop mode until the insulin action duration time has passed.  Deleting history is done by:  (1)  clicking on the Insulin Delivery Chart    (2)  selecting the Reservoir history screen    (3)  swiping to delete individual reservoir readings    (4)  delete at least 30 minutes of reservoir readings, including the readings that involved priming events", 
            "title": "Site Changes"
        }, 
        {
            "location": "/rig/assembly/#prime-menu", 
            "text": "When you finish priming on a Medtronic pump, please make sure to complete the priming menu.  In other words, finish all the prompts so that you get back to the (nearly blank) normal Medtronic pump screen.  If you don't finish the priming menu, the pump will not begin basal insulin delivery, nor does it alarm.  It is equivalent to the pump being suspended...but you won't be able to see any indication of that in Nightscout as a remotely monitoring parent.  Loop will not detect the prime screen issue and will keep sending temp basal messages...but the pump won't enact them.  On Loop, you could notice it by the active IOB continually going down and then eventually negative IOB, as the basal is not delivered and the reservoir level remains constant.  However, the temp basal graph will still show the bars from the temp basal commands loop has been sending.  So, remember to finish those prime menu screens through to the end.", 
            "title": "Prime Menu"
        }, 
        {
            "location": "/rig/flash/", 
            "text": "Bolus\n\n\n\n\n\n\n\n\n\nBolus entries can be made manually through the bolus tool (double orange triangles) in the toolbar, either as part of a meal bolus or as a correction for a high BG.\n\n\nMeal Bolus\n\n\nLoop has a Bolus Wizard, similar to a pump\u2019s bolus wizard.  After a carb entry is made, Loop will provide a bolus screen with a recommended bolus amount.  If you want to deliver the total amount of the recommended bolus, simply tap on the recommended amount of units and the bolus delivery line will automatically be filled-in with the same units.  If you want to give fewer units than the recommended amount, you can manually enter the desired amount to be delivered.   \n\n\nThe Bolus Wizard will not offer a recommended bolus if your BG is below, or predicted to go below, your specified Minimum BG Guard.  A screen will appear letting you know the reason no bolus is being recommended as well as the status of your active COB and IOB.  You can choose to override that warning and give a bolus, or treat the low BG and come back to the bolus tool when your BG has recovered.\n\n\n\n\n\n\n\n\n\nCorrection Bolus\n\n\nOccasionally, a recommended bolus will be offered in the bolus screen unrelated to a recent carb entry.  In those cases, Loop is calculating that it will not be able to stay in target range through the use of max temp basals alone and is offering a \u201ccorrection bolus\u201d.  Correction boluses will not be delivered automatically by Loop, they must be delivered by the user.  Loop will also not give an alert when a correction bolus is being offered, the bolus entry tool must be clicked to check for one.  In a well-run loop with decent carb counting, correction boluses should be infrequently needed.\n\n\nPart of Loop's predictions for future BG changes include a component called BG momentum. Loop looks at the previous three BG readings and calculates a best-fit-straight-line for those three points. In other words, it tries to draw a future trend line using the last three BG data points. Loop extends that line 30 minutes into the future and gives a fair amount of weight to that component of the BG prediction. In instances of rapidly changing BGs, BG momentum may overestimate the rise/fall of BG. Therefore, please be cautious giving corrective boluses using Loop recommendations during times of rapid change.\n\n\nBolus Failure Notifications\n\n\nOn occasion, you will receive notification that a bolus may have failed. In some of these cases, the bolus actually will begin delivery. Therefore, you should always check the pump screen to verify the bolus status before attempting to redeliver a failed bolus.\n\n\nEating Soon\n\n\nYou can modify your Workout Target range to help prebolus for meals.  If you set your Workout Target to 80 mg/dl - 80 mg/dl for an hour before a meal, this will help Loop to deliver additional insulin prior to the meal, and help control post-prandial BGs.  The Loop will account for the amount of insulin it has prebolused when it offers the recommended bolus for the meal.\n\n\nBolus Strategies\n\n\nUnfortunately, Loop cannot enact temp basals while the pump is delivering a square wave or dual wave bolus.  Therefore, we recommend that you find alternate bolusing strategies for situation where you would've previously used those extended bolusing techniques.\n\n\nWhile you adapt to new bolusing techniques, it is important to monitor closely to see what works for you.  It will take some trial and error to get it right.  In particular, pay close attention to what you enter for the carb absorption time for the food.  If you are used to using a square wave or extended bolus, then it is for food that takes a longer than normal period of time to digest so adjust accordingly. \n\n\nMany Loop users use a combination of (1) splitting individual boluses and/or (2) setting carbs in the future before a slower, larger carb meal to help control BG levels that would otherwise rise without an extended bolus.\n\n\nUsing the \nGlucodyn\n model can help you simulate new bolusing strategies.  Glucodyn allows you to simulate your post-prandial BGs based on your particular ISF, carb ratio, and carbs.  You can simulate split boluses and watch their impact on simulated BG responses.  The underlying math of the Glucodyn model is the basis of Loop's insulin/carb calculations.", 
            "title": "Edison flash"
        }, 
        {
            "location": "/rig/flash/#bolus", 
            "text": "Bolus entries can be made manually through the bolus tool (double orange triangles) in the toolbar, either as part of a meal bolus or as a correction for a high BG.", 
            "title": "Bolus"
        }, 
        {
            "location": "/rig/flash/#meal-bolus", 
            "text": "Loop has a Bolus Wizard, similar to a pump\u2019s bolus wizard.  After a carb entry is made, Loop will provide a bolus screen with a recommended bolus amount.  If you want to deliver the total amount of the recommended bolus, simply tap on the recommended amount of units and the bolus delivery line will automatically be filled-in with the same units.  If you want to give fewer units than the recommended amount, you can manually enter the desired amount to be delivered.     The Bolus Wizard will not offer a recommended bolus if your BG is below, or predicted to go below, your specified Minimum BG Guard.  A screen will appear letting you know the reason no bolus is being recommended as well as the status of your active COB and IOB.  You can choose to override that warning and give a bolus, or treat the low BG and come back to the bolus tool when your BG has recovered.", 
            "title": "Meal Bolus"
        }, 
        {
            "location": "/rig/flash/#correction-bolus", 
            "text": "Occasionally, a recommended bolus will be offered in the bolus screen unrelated to a recent carb entry.  In those cases, Loop is calculating that it will not be able to stay in target range through the use of max temp basals alone and is offering a \u201ccorrection bolus\u201d.  Correction boluses will not be delivered automatically by Loop, they must be delivered by the user.  Loop will also not give an alert when a correction bolus is being offered, the bolus entry tool must be clicked to check for one.  In a well-run loop with decent carb counting, correction boluses should be infrequently needed.  Part of Loop's predictions for future BG changes include a component called BG momentum. Loop looks at the previous three BG readings and calculates a best-fit-straight-line for those three points. In other words, it tries to draw a future trend line using the last three BG data points. Loop extends that line 30 minutes into the future and gives a fair amount of weight to that component of the BG prediction. In instances of rapidly changing BGs, BG momentum may overestimate the rise/fall of BG. Therefore, please be cautious giving corrective boluses using Loop recommendations during times of rapid change.", 
            "title": "Correction Bolus"
        }, 
        {
            "location": "/rig/flash/#bolus-failure-notifications", 
            "text": "On occasion, you will receive notification that a bolus may have failed. In some of these cases, the bolus actually will begin delivery. Therefore, you should always check the pump screen to verify the bolus status before attempting to redeliver a failed bolus.", 
            "title": "Bolus Failure Notifications"
        }, 
        {
            "location": "/rig/flash/#eating-soon", 
            "text": "You can modify your Workout Target range to help prebolus for meals.  If you set your Workout Target to 80 mg/dl - 80 mg/dl for an hour before a meal, this will help Loop to deliver additional insulin prior to the meal, and help control post-prandial BGs.  The Loop will account for the amount of insulin it has prebolused when it offers the recommended bolus for the meal.", 
            "title": "Eating Soon"
        }, 
        {
            "location": "/rig/flash/#bolus-strategies", 
            "text": "Unfortunately, Loop cannot enact temp basals while the pump is delivering a square wave or dual wave bolus.  Therefore, we recommend that you find alternate bolusing strategies for situation where you would've previously used those extended bolusing techniques.  While you adapt to new bolusing techniques, it is important to monitor closely to see what works for you.  It will take some trial and error to get it right.  In particular, pay close attention to what you enter for the carb absorption time for the food.  If you are used to using a square wave or extended bolus, then it is for food that takes a longer than normal period of time to digest so adjust accordingly.   Many Loop users use a combination of (1) splitting individual boluses and/or (2) setting carbs in the future before a slower, larger carb meal to help control BG levels that would otherwise rise without an extended bolus.  Using the  Glucodyn  model can help you simulate new bolusing strategies.  Glucodyn allows you to simulate your post-prandial BGs based on your particular ISF, carb ratio, and carbs.  You can simulate split boluses and watch their impact on simulated BG responses.  The underlying math of the Glucodyn model is the basis of Loop's insulin/carb calculations.", 
            "title": "Bolus Strategies"
        }, 
        {
            "location": "/rig/prep/", 
            "text": "Bolus\n\n\n\n\n\n\n\n\n\nBolus entries can be made manually through the bolus tool (double orange triangles) in the toolbar, either as part of a meal bolus or as a correction for a high BG.\n\n\nMeal Bolus\n\n\nLoop has a Bolus Wizard, similar to a pump\u2019s bolus wizard.  After a carb entry is made, Loop will provide a bolus screen with a recommended bolus amount.  If you want to deliver the total amount of the recommended bolus, simply tap on the recommended amount of units and the bolus delivery line will automatically be filled-in with the same units.  If you want to give fewer units than the recommended amount, you can manually enter the desired amount to be delivered.   \n\n\nThe Bolus Wizard will not offer a recommended bolus if your BG is below, or predicted to go below, your specified Minimum BG Guard.  A screen will appear letting you know the reason no bolus is being recommended as well as the status of your active COB and IOB.  You can choose to override that warning and give a bolus, or treat the low BG and come back to the bolus tool when your BG has recovered.\n\n\n\n\n\n\n\n\n\nCorrection Bolus\n\n\nOccasionally, a recommended bolus will be offered in the bolus screen unrelated to a recent carb entry.  In those cases, Loop is calculating that it will not be able to stay in target range through the use of max temp basals alone and is offering a \u201ccorrection bolus\u201d.  Correction boluses will not be delivered automatically by Loop, they must be delivered by the user.  Loop will also not give an alert when a correction bolus is being offered, the bolus entry tool must be clicked to check for one.  In a well-run loop with decent carb counting, correction boluses should be infrequently needed.\n\n\nPart of Loop's predictions for future BG changes include a component called BG momentum. Loop looks at the previous three BG readings and calculates a best-fit-straight-line for those three points. In other words, it tries to draw a future trend line using the last three BG data points. Loop extends that line 30 minutes into the future and gives a fair amount of weight to that component of the BG prediction. In instances of rapidly changing BGs, BG momentum may overestimate the rise/fall of BG. Therefore, please be cautious giving corrective boluses using Loop recommendations during times of rapid change.\n\n\nBolus Failure Notifications\n\n\nOn occasion, you will receive notification that a bolus may have failed. In some of these cases, the bolus actually will begin delivery. Therefore, you should always check the pump screen to verify the bolus status before attempting to redeliver a failed bolus.\n\n\nEating Soon\n\n\nYou can modify your Workout Target range to help prebolus for meals.  If you set your Workout Target to 80 mg/dl - 80 mg/dl for an hour before a meal, this will help Loop to deliver additional insulin prior to the meal, and help control post-prandial BGs.  The Loop will account for the amount of insulin it has prebolused when it offers the recommended bolus for the meal.\n\n\nBolus Strategies\n\n\nUnfortunately, Loop cannot enact temp basals while the pump is delivering a square wave or dual wave bolus.  Therefore, we recommend that you find alternate bolusing strategies for situation where you would've previously used those extended bolusing techniques.\n\n\nWhile you adapt to new bolusing techniques, it is important to monitor closely to see what works for you.  It will take some trial and error to get it right.  In particular, pay close attention to what you enter for the carb absorption time for the food.  If you are used to using a square wave or extended bolus, then it is for food that takes a longer than normal period of time to digest so adjust accordingly. \n\n\nMany Loop users use a combination of (1) splitting individual boluses and/or (2) setting carbs in the future before a slower, larger carb meal to help control BG levels that would otherwise rise without an extended bolus.\n\n\nUsing the \nGlucodyn\n model can help you simulate new bolusing strategies.  Glucodyn allows you to simulate your post-prandial BGs based on your particular ISF, carb ratio, and carbs.  You can simulate split boluses and watch their impact on simulated BG responses.  The underlying math of the Glucodyn model is the basis of Loop's insulin/carb calculations.", 
            "title": "Edison setup"
        }, 
        {
            "location": "/rig/prep/#bolus", 
            "text": "Bolus entries can be made manually through the bolus tool (double orange triangles) in the toolbar, either as part of a meal bolus or as a correction for a high BG.", 
            "title": "Bolus"
        }, 
        {
            "location": "/rig/prep/#meal-bolus", 
            "text": "Loop has a Bolus Wizard, similar to a pump\u2019s bolus wizard.  After a carb entry is made, Loop will provide a bolus screen with a recommended bolus amount.  If you want to deliver the total amount of the recommended bolus, simply tap on the recommended amount of units and the bolus delivery line will automatically be filled-in with the same units.  If you want to give fewer units than the recommended amount, you can manually enter the desired amount to be delivered.     The Bolus Wizard will not offer a recommended bolus if your BG is below, or predicted to go below, your specified Minimum BG Guard.  A screen will appear letting you know the reason no bolus is being recommended as well as the status of your active COB and IOB.  You can choose to override that warning and give a bolus, or treat the low BG and come back to the bolus tool when your BG has recovered.", 
            "title": "Meal Bolus"
        }, 
        {
            "location": "/rig/prep/#correction-bolus", 
            "text": "Occasionally, a recommended bolus will be offered in the bolus screen unrelated to a recent carb entry.  In those cases, Loop is calculating that it will not be able to stay in target range through the use of max temp basals alone and is offering a \u201ccorrection bolus\u201d.  Correction boluses will not be delivered automatically by Loop, they must be delivered by the user.  Loop will also not give an alert when a correction bolus is being offered, the bolus entry tool must be clicked to check for one.  In a well-run loop with decent carb counting, correction boluses should be infrequently needed.  Part of Loop's predictions for future BG changes include a component called BG momentum. Loop looks at the previous three BG readings and calculates a best-fit-straight-line for those three points. In other words, it tries to draw a future trend line using the last three BG data points. Loop extends that line 30 minutes into the future and gives a fair amount of weight to that component of the BG prediction. In instances of rapidly changing BGs, BG momentum may overestimate the rise/fall of BG. Therefore, please be cautious giving corrective boluses using Loop recommendations during times of rapid change.", 
            "title": "Correction Bolus"
        }, 
        {
            "location": "/rig/prep/#bolus-failure-notifications", 
            "text": "On occasion, you will receive notification that a bolus may have failed. In some of these cases, the bolus actually will begin delivery. Therefore, you should always check the pump screen to verify the bolus status before attempting to redeliver a failed bolus.", 
            "title": "Bolus Failure Notifications"
        }, 
        {
            "location": "/rig/prep/#eating-soon", 
            "text": "You can modify your Workout Target range to help prebolus for meals.  If you set your Workout Target to 80 mg/dl - 80 mg/dl for an hour before a meal, this will help Loop to deliver additional insulin prior to the meal, and help control post-prandial BGs.  The Loop will account for the amount of insulin it has prebolused when it offers the recommended bolus for the meal.", 
            "title": "Eating Soon"
        }, 
        {
            "location": "/rig/prep/#bolus-strategies", 
            "text": "Unfortunately, Loop cannot enact temp basals while the pump is delivering a square wave or dual wave bolus.  Therefore, we recommend that you find alternate bolusing strategies for situation where you would've previously used those extended bolusing techniques.  While you adapt to new bolusing techniques, it is important to monitor closely to see what works for you.  It will take some trial and error to get it right.  In particular, pay close attention to what you enter for the carb absorption time for the food.  If you are used to using a square wave or extended bolus, then it is for food that takes a longer than normal period of time to digest so adjust accordingly.   Many Loop users use a combination of (1) splitting individual boluses and/or (2) setting carbs in the future before a slower, larger carb meal to help control BG levels that would otherwise rise without an extended bolus.  Using the  Glucodyn  model can help you simulate new bolusing strategies.  Glucodyn allows you to simulate your post-prandial BGs based on your particular ISF, carb ratio, and carbs.  You can simulate split boluses and watch their impact on simulated BG responses.  The underlying math of the Glucodyn model is the basis of Loop's insulin/carb calculations.", 
            "title": "Bolus Strategies"
        }, 
        {
            "location": "/rig/wifi/", 
            "text": "Priming and Site Changes\n\n\nLoop uses event history and reservoir levels to determine how much insulin has actually been delivered through the pump, and correspondingly the Insulin On Board (IOB).  \nIf you manually prime your tubing WITHOUT changing reservoirs\n, Loop will detect that prime as an insulin delivery and count it as IOB.  Therefore, here are some suggestions for priming, set changes, and reservoir changes with Loop in mind.\n\n\nSite Changes\n\n\n\n\n\n\nIf you change sites and increase reservoir volume (i.e., start a new reservoir), don't worry. So long as you are putting in a reservoir that has more insulin than the old one, IOB will be accurate in Loop.  When Loop sees a rewind and an increase in reservoir volume, it will not count any tubing primes as IOB.\n\n\n\n\n\n\nIf you change sites but \ndo NOT increase reservoir volume\n (i.e., you keep existing reservoir going), you will need to go into Loop's reservoir history and delete 30 minutes of continuous reservoir history including the prime event.  By deleting 30 minutes of reservoir history, Loop will use Event History to determine insulin deliveries and IOB. If you cannot get the prime to clear from the IOB, operate in Open Loop mode until the insulin action duration time has passed.  Deleting history is done by:\n\n\n(1)  clicking on the Insulin Delivery Chart  \n\n\n(2)  selecting the Reservoir history screen  \n\n\n(3)  swiping to delete individual reservoir readings  \n\n\n(4)  delete at least 30 minutes of reservoir readings, including the readings that involved priming events\n\n\n\n\n\n\nPrime Menu\n\n\nWhen you finish priming on a Medtronic pump, please make sure to complete the priming menu.  In other words, finish all the prompts so that you get back to the (nearly blank) normal Medtronic pump screen.  If you don't finish the priming menu, the pump will not begin basal insulin delivery, nor does it alarm.  It is equivalent to the pump being suspended...but you won't be able to see any indication of that in Nightscout as a remotely monitoring parent.  Loop will not detect the prime screen issue and will keep sending temp basal messages...but the pump won't enact them.  On Loop, you could notice it by the active IOB continually going down and then eventually negative IOB, as the basal is not delivered and the reservoir level remains constant.  However, the temp basal graph will still show the bars from the temp basal commands loop has been sending.\n\n\nSo, remember to finish those prime menu screens through to the end.", 
            "title": "Wifi"
        }, 
        {
            "location": "/rig/wifi/#priming-and-site-changes", 
            "text": "Loop uses event history and reservoir levels to determine how much insulin has actually been delivered through the pump, and correspondingly the Insulin On Board (IOB).   If you manually prime your tubing WITHOUT changing reservoirs , Loop will detect that prime as an insulin delivery and count it as IOB.  Therefore, here are some suggestions for priming, set changes, and reservoir changes with Loop in mind.", 
            "title": "Priming and Site Changes"
        }, 
        {
            "location": "/rig/wifi/#site-changes", 
            "text": "If you change sites and increase reservoir volume (i.e., start a new reservoir), don't worry. So long as you are putting in a reservoir that has more insulin than the old one, IOB will be accurate in Loop.  When Loop sees a rewind and an increase in reservoir volume, it will not count any tubing primes as IOB.    If you change sites but  do NOT increase reservoir volume  (i.e., you keep existing reservoir going), you will need to go into Loop's reservoir history and delete 30 minutes of continuous reservoir history including the prime event.  By deleting 30 minutes of reservoir history, Loop will use Event History to determine insulin deliveries and IOB. If you cannot get the prime to clear from the IOB, operate in Open Loop mode until the insulin action duration time has passed.  Deleting history is done by:  (1)  clicking on the Insulin Delivery Chart    (2)  selecting the Reservoir history screen    (3)  swiping to delete individual reservoir readings    (4)  delete at least 30 minutes of reservoir readings, including the readings that involved priming events", 
            "title": "Site Changes"
        }, 
        {
            "location": "/rig/wifi/#prime-menu", 
            "text": "When you finish priming on a Medtronic pump, please make sure to complete the priming menu.  In other words, finish all the prompts so that you get back to the (nearly blank) normal Medtronic pump screen.  If you don't finish the priming menu, the pump will not begin basal insulin delivery, nor does it alarm.  It is equivalent to the pump being suspended...but you won't be able to see any indication of that in Nightscout as a remotely monitoring parent.  Loop will not detect the prime screen issue and will keep sending temp basal messages...but the pump won't enact them.  On Loop, you could notice it by the active IOB continually going down and then eventually negative IOB, as the basal is not delivered and the reservoir level remains constant.  However, the temp basal graph will still show the bars from the temp basal commands loop has been sending.  So, remember to finish those prime menu screens through to the end.", 
            "title": "Prime Menu"
        }, 
        {
            "location": "/rig/troubleshooting/", 
            "text": "Workout mode\n\n\n\n\n\n\n\n\n\nWorkout mode enables an alternate BG target range from what would normally be scheduled at the time. The alternate target can be enabled for 1 hour, 2 hours, or indefinitely. If you want more options for duration, you can customize them during your Loop build.\n\n\nSome people use Workout mode to set temporarily higher targets ahead of exercise that would normally cause BG to drop.  This should give the user less chance of going low during exercise.\n\n\nAnother use for temporary targets is to prebolus for a meal by setting lower targets for an hour before a meal is expected.  Loop will use temp basals matched to the temporary lower target, and then before the meal is entered/bolused, the targets are adjusted back to normal.  This will leave the user with some active IOB going into the meal and help control post-prandial BG spikes.  Loop will account for the IOB when it makes the recommendation for the meal bolus (just remember to have the BG targets set back to normal before entering the meal carbs).\n\n\nFinally, using a lower target for an hour or two (such as 80-80 mg/dl) may help in situations where you are \u201cstuck\u201d on a high BG from some temporary situation such as a bad carb count, slower food absorption, or anxiety from a short-term situation (work meeting, public presentation).", 
            "title": "Troubleshoot"
        }, 
        {
            "location": "/rig/troubleshooting/#workout-mode", 
            "text": "Workout mode enables an alternate BG target range from what would normally be scheduled at the time. The alternate target can be enabled for 1 hour, 2 hours, or indefinitely. If you want more options for duration, you can customize them during your Loop build.  Some people use Workout mode to set temporarily higher targets ahead of exercise that would normally cause BG to drop.  This should give the user less chance of going low during exercise.  Another use for temporary targets is to prebolus for a meal by setting lower targets for an hour before a meal is expected.  Loop will use temp basals matched to the temporary lower target, and then before the meal is entered/bolused, the targets are adjusted back to normal.  This will leave the user with some active IOB going into the meal and help control post-prandial BG spikes.  Loop will account for the IOB when it makes the recommendation for the meal bolus (just remember to have the BG targets set back to normal before entering the meal carbs).  Finally, using a lower target for an hour or two (such as 80-80 mg/dl) may help in situations where you are \u201cstuck\u201d on a high BG from some temporary situation such as a bad carb count, slower food absorption, or anxiety from a short-term situation (work meeting, public presentation).", 
            "title": "Workout mode"
        }, 
        {
            "location": "/myopenaps/overview/", 
            "text": "Building your Loop\n\n\nBuilding your Loop app is actually quite easy.  The harder part will be having the patience to read all the documents you should before starting a closed loop.  New Loop users are so excited to get started that they skip reading all the great info that these docs contain.  So, as you begin the build...please include time to read the documents that follow what happens AFTER you successfully build your Loop app.\n\n\nIf you have any questions, these docs have a nice search feature that may help you find your answers pretty quickly too.", 
            "title": "Overview"
        }, 
        {
            "location": "/myopenaps/overview/#building-your-loop", 
            "text": "Building your Loop app is actually quite easy.  The harder part will be having the patience to read all the documents you should before starting a closed loop.  New Loop users are so excited to get started that they skip reading all the great info that these docs contain.  So, as you begin the build...please include time to read the documents that follow what happens AFTER you successfully build your Loop app.  If you have any questions, these docs have a nice search feature that may help you find your answers pretty quickly too.", 
            "title": "Building your Loop"
        }, 
        {
            "location": "/myopenaps/loop/", 
            "text": "Configuring your Loop\n\n\nNow that you have the Loop app installed on your iPhone, we need to input the settings so that the Loop can work for you.  In this section, we cover the details and provide information about the Loop displays.  Finally, we will cover some extras like Apple Watch and useful external integrations.\n\n\nSettings\n\n\n\n\n\n\n\n\n\n\n\nNormally, we would start by explaining the displays on an application, but your Loop won\u2019t have much showing initially until we get some basic settings input.  So, let\u2019s start by clicking on the Loop Settings button in the tool bar.  It looks like a little sprocket.\n\n\nLoop Version\n\n\n\n\n\n\n\n\n\n\n\nThe first graphic at the top of the Loop settings display shows the version of the software, e.g.,  Loop v1.3 in this example.  This can be helpful when working with other users of the software to know what version you are running.\n\n\nClosed Loop\n\n\nThe Closed Loop switch controls the Loop operation mode for the application. This operation mode determines whether Loop automatically enacts recommendations (i.e., sets temp basals) to the insulin pump.  \n\n\n\n\n\n\n\n\n\nWhen the Closed Loop switch is in the (Off\n   ) position, Loop WILL NOT enact recommended temp basals automatically.  Instead, it will display Recommended Temp Basals on the main status display, just above the Glucose graph.  This is called \u201cOpen Loop\u201d, and is a good way to understand how Loop will function, and what type of recommendations it would make.  \n\n\n\n\n\n\n\n\n\nWhen the Closed Loop switch is in the (\n   On) position, Loop WILL automatically enact recommended temp basals on the configured insulin pump. This is known as a \u201cClosed Loop\u201d.  Typically, Loop will show the recommended temp basal just above the Glucose graph prior to automatically enacting it.  It may take a minute or so for the Loop to enact the recommended basal.  Once the temp basal has been enacted successfully on the pump, the recommended temp basal will disappear from the screen and the new temp basal will be represented in the insulin delivery graphics.\n\n\nPreferred Data Source\n\n\n\n\n\n\n\n\n\nIf Preferred Data Source is set to \u201cEvent History\u201d, then the pump will periodically be polled for treatment events.  This will cause your battery to be used at a faster rate, but will allow Loop to upload \u201ctreatments\u201d to Nightscout.  \nEvent History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop.\n\n\nEven with Preferred Data Source set to \u201cEvent History\u201d, the reservoir volume will still be used to determine IOB, except in a few cases, such as when reservoir volumes have increased (in other words, reservoir was changed or refilled), or when the reservoir history is missing at least 30 minutes of continuous readings.\n\n\nEvent History = More Accurate Treatment Data, and Upload of Treatments to Nightscout\n\n\nReservoir = Improved pump battery economy by using MySentry data for Reservoir Readings (x23 and x54 pumps only) \n\n\nIssue Report\n\n\nIf you run into problems or errors with your Loop, the Issue Report can be used to help identify where the problem is occurring.  The Issue Report is automatically generated and you can share it via email.  Frequently, if you go to Gitter or Facebook for help with a technical problem, an Issue Report will provide insight to what the potential problem is.\n\n\nDevices\n\n\nIf your RileyLink is turned on and nearby, you will see a RileyLink in this area of the settings (like the first screenshot on this page).  We are going to take care of the RileyLink settings later in this page...for now we are going to skip the RileyLink line.\n\n\nPump ID\n\n\nFairly self-explanatory.  You need to enter your pump\u2019s six-digit ID here.  To find your pump ID, press ESC button on the pump, scroll down.  You will find a the six-digit ID as the \u201cS/N#\u201d.  You will also find the same ID on the back of the pump as six numbers beneath the pump\u2019s model number.  There are also explanations so you can identify the pump\u2019s region.  This makes a difference for how the RileyLink will tune its frequency for pump communications.\n\n\nPump Battery Type\n\n\nAgain fairly self-explanatory.  Click which battery type you are using so that the battery percentages are more accurately displayed in your HUD.  The battery displays are designed to give you approximately 8-10 hours notice before looping would fail.  However, every battery manufacturer has its own decay curve for its specific batteries.  Typically, low battery levels will cause looping failures prior to the actual pump failing to delivery insulin. \n\n\nCGM Selection\n\n\nSelect one of the options from the menu:\n\n\n\n\nFetch Enlite Data\n\n\nG4 Share Receiver\n\n\nG5 Transmitter\n\n\n\n\nIf you select the G5 Transmitter, you will be prompted to enter the transmitter ID number.  Don't forget to update your transmitter ID when you change transmitters, otherwise your loop will not work.\n\n\nTarget Range\n\n\nThis is where you set your target blood glucose range.  This is the low and high BG values that Loop will attempt to keep you between.  Click the + in the upper right corner to add target BG range(s).  You can have multiple targets based on time of day, but for safety purposes the first setting of the day should begin at midnight to be consistent with your Medtronic pump.  \n\n\nTargets will be entered in mg/dl or mmoL automatically based upon how your BG values appear your BG chart. By default they are set to mg/dl, however once BG values arrive in mmoL these settings can be entered in mmoL. If you are planning to use mmoL, be sure to wait to set your target range up until after you have started to receive BG values. If you do these in the wrong order, then your chart may have incorrect Y axis. If you come across this issue, you can also remove all of your target ranges and enter them again. Once you are receiving BG values in mmoL, you can add your Target Range in mmoL.\n\n\nYou can also set the \u201coverride\u201d targets here to temporarily use alternate BG targets.  These override targets will only be enacted when you specifically activate \u201cWorkout Mode\u201d. \n\n\nTarget range can be a single number, such as 100-100 mg/dL, but is not necessarily advised or \u201cbetter\u201d.\n\n\nMinimum BG Guard\n\n\nMinimum BG Guard is a required data entry for successful configuration of Loop. \nYour Loop will not turn green without setting this value.\n  \n\n\nMinimum BG Guard allows a user to bolus when their BG is below their target range but not below the value of the Minimum BG Guard.  To help users understand how this setting is affecting their usage of Loop, users will see a new notification icon and details of why there is no recommended bolus if the predicted BG is below the Minimum BG Guard.  \n\n\nInsulin Action Duration (DIA)\n\n\nEnter your insulin action duration here in hours.  This is also called Duration of Insulin Action (DIA).  Typically, close-loopers use between 3-4 hours with good success.  However, your diabetes may vary.  This number is a real number so decimals work here for fractions of hours. Like (2.5) = 2hrs 30 mins\n\n\nBasal Rates\n\n\nEnter your basal rates here.  These should match the values entered in your pump. Entering them here will not override your pump\u2019s values, so make sure they match. This is fairly standard stuff that most T1Ds are already familiar with.  However, if you are new to Medtronic pumps...keep in mind that your insulin needs may change slightly when changing pump systems.  If in doubt, try some basal testing to see if your old basal rates may need adjustments with the switch to Medtronic pumps and infusion sets.\n\n\nOnly one basal pattern may be set in each Loop app.  If you are accustomed to switching between two or more basal patterns frequently, you have two options:\n\n\n\n\nmanually editing the basal profiles in this area each time you change basals, or\n\n\ninstalling a duplicate Loop app for each basal pattern and switching when needed.\n\n\n\n\nIf you choose to have duplicate Loop apps, you will need to use different MAIN_APP_BUNDLE_IDENTIFIERs for each app.  Additionally, you must remember to close  the unused Loop app (double-click iPhone home button and up-swipe Loop app).  Only one Loop app can run successfully at a time.  When you switch to the new Loop app, it may take 5-15 minutes for the Loop to turn green.  The good news is that all your carb entries, insulin doses and such will automatically populate in the new Loop within a relatively short amount of time and the transition is therefore seamless for Loop functionality.  \n\n\nCarb Ratios\n\n\nClick the + in the upper right to add carb ratios for various times of day. Loop works best if you have tested and optimized your carb ratio settings for accuracy.\n\n\nInsulin Sensitivities\n\n\nClick the + in the upper right to add insulin sensitivities for various times of day. Loop works best if you have tested and optimized your ISF settings for accuracy.  Insulin sensitivities can change for many reasons including waiting too long to change your infusion set.  Loop will not auto-detect changes in ISF.\n\n\nMaximum Basal Rate\n\n\nMaximum basal rate is the maximum temporary basal rate that the Loop is allowed to enact to correct to your target BG range.  See the Use section discussion for Close Loop for some suggestions regarding appropriate Maximum Basal Rate.\n\n\nNOTE:  A frequent error for new Loop users is when they set their maximum basal rate here to a value HIGHER than the corresponding setting on the pump.  This will result in an error message that the temp basal failed to enact.  For example, Loop cannot successfully tell the pump to deliver 4 units per hour if the pump\u2019s maximum is set to only 3.8 units per hour.  If you are seeing failures of the Loop to set a high temp basal, check to see if your pump\u2019s maximum basal is at greater than or equal to the Loop\u2019s maximum basal.\n\n\nMaximum Bolus\n\n\nEnter your desired single bolus maximum here.\n\n\nServices\n\n\nThe services listed in this section are \nOPTIONAL\n.  You can choose to leave them empty and your Loop will still work.  \n\n\nDexcom Share\n\n\nAdding your Dexcom Share account information here will allow Loop to pull CGM data from the Dexcom servers in the event the Loop is not able to pull the data directly from the G4 receiver or G5 transmitter.  When Loop is receiving CGM data using this option, a little cloud icon will appear on the CGM reading in the Loop\u2019s mainscreen.  Use your same dexcom account info as you use in the Share2 or G5 Mobile apps.\n\n\nNightscout\n\n\nIf you have an existing Nightscout site, add the Site URL and API Secret to have your Loop data transmitted to your Nightscout site. If you can\u2019t remember your API Secret, it can be found under Settings, Reveal Config Vars for Heroku sites (or Application Settings, Connection Strings for Azure sites). \n\n\nmLab\n\n\nmLab is a cloud-hosted Mongo Database service.  mLab is used by Loop as a remote repository of Loop status data.  This data is very helpful if you having issues with Loop and need to see remotely what Loop is doing and get diagnostics. If you already have a Nightscout site, you can use your existing mLab database.  As the screen shot below shows, this integration will log the errors from your Loop app and help you troubleshoot if you notice a pattern of problems.\n\n\n\n\n\n\n\n\n\nTo get your database name:\n\n\nIf you have Nightscout, access your mLab.  If you manually built your mLab database, you can login to mLab \nhere\n.  If you had Heroku automatically deploy your site, you can access mLab from your Heroku dashboard. Find the screen, like shown below, to get your database name.  The database name is the part after the \u201cdsXXXXXXX/\u201d.  In this case, \u201cannat1d\u201d  \n\n\n\n\n\n\n\n\n\nTo obtain your API Key:\n\n\n1) Click your username (not the account name) in the upper right-hand corner to open your account user profile\n\n\n2) If you are already in the account details page, then click on the row with your username in the Account Users section\n\n\n3) If the status is showing as \u201cData API Access: Disabled\u201d in the \u201cAPI Key\u201d section, click the \u201cEnable Data API access\u201d button\n\n\n4) Once Data API access is enabled, your current API key will be displayed in the \u201cAPI key\u201d\n\n\nIf you have any problems with integration, you can try regenerating the API key and that should solve the problem.\n\n\n\n\n\n\n\n\n\nAmplitude\n\n\nAmplitude\n is a remote event monitoring service and can be used to quickly identify errors and events with Loop.  Amplitude stores the events and allows you to view those events as points in time.  To retrieve the details of the events you will need to look at corresponding mLab data entries to get a complete picture of the issues.  If you sign up for a free account with Amplitude, you will be given an API Key that you can enter here to have Loop integration setup.\n\n\n\n\n\n\n\n\n\nRileyLink\n\n\nRileyLink is turned on with a little switch on the side of the circuit board (little blue lights will flash briefly and then turn off).  The \u201con\u201d position is with the switch towards the battery plug.  Now that you have it turned on, go back to your Loop settings and under \u201cDevices\u201d, there will be a connection to turn on.  Turn it on (slide to green) and then click on the arrow to the right of the green slider to open the RileyLink settings area.  Your RileyLink will now have a solid green light showing.  The solid green light indicates a working bluetooth connection with your iPhone. \n\n\nDevice\n\n\nThe settings under the Device section are mostly for your information only.  However, you can rename your RileyLink to something more unique.  This is a good idea if you own more than one or are ever in the presence of more than one RileyLink...you will be able to pick out your connection easier amongst a crowd of \u201cRileyLinks\u201d.\n\n\nThe \nSignal Strength\n showing under this area of the menu is the signal strength of the BT with the iPhone.  It is \nnot\n the signal strength of the radio communications with the pump.\n\n\nPump\n\n\nThe Pump ID should be automatically filled in from the setting you have already entered previously.  The pump model will say unknown until we proceed with \u201cTune Radio Frequency.\u201d \n\n\nCommands\n\n\n\n\nTune Radio Frequency: Choose \u201cTune Radio Frequency\u201d.  It may take about a minute, but soon you will see a list of frequencies and you can exit back to the main RileyLink settings.  The Command line will now show the frequency (916.xx MHz) in the first command line and the timestamp of the tune.  Now your pump and RileyLink are tuned to talk to each other.\n\n\n\n\n(Note: for the rest of these items you may first need to set a Remote ID as discussed in the Pump Setup below.)\n\n\n\n\n\n\nChange Time:  Choose \u201cchange time\u201d so that pump and Loop times will match exactly.  \nYou should never use the pump itself to set the pump\u2019s time.\n  Always use the RileyLink to set pump time.\n\n\n\n\n\n\nMySentry Pair:  MySentry Pairing is for x23 and x54 pumps.  Follow the directions as shown in the RileyLink command screen for MySentry.  You do not have to worry about this command if you are using an x15 or x22 model pump, as they do not have MySentry.  If you do not perform a MySentry pairing and have an x23 or x54 pump, your loop will only turn green every 15 minutes.\n\n\n\n\n\n\nFetch Recent History, Fetch Recent Glucose, Write Glucose History Timestamp, Get Pump Model, and Send Button Press, Read Pump Status are all ways of asking the pump for information you might be interested in.  They are not part of setting up the Loop.  Send Button Press can be useful to see if the communication between the RileyLink and pump is working.  If successful, the screen on the pump will light up and Loop will confirm the button press with a \u201csuccess\u201d message.  Read Pump Status is also nice quick pump read for reservoir volume, pump battery voltage, and pump status (bolusing or suspending).\n\n\n\n\n\n\nPump Setup\n\n\nNow that you are done with your Loop app settings, you need to finish setting up your pump for Loop use.  Generally, the setup of the pump is similar to setting up any pump for non-looping use.  One notable exception: you will need to change those batteries more often with Looping.  Loop will drain pump batteries much faster than regular pump regimes, and Loop failures will increase in frequency as the pump battery gets low.}\n\n\nWhile not every setting NEEDS to match between Loop and pump, it is safer to have them match in case your Loop fails and you revert back to normal pump use.  You should program the pump settings to match for:\n\n\n\n\nBasal program(s)\n\n\nCarb ratio\n\n\nISF\n\n\nMax bolus\n\n\nInsulin action duration\n\n\nBG targets\n\n\n\n\nThree settings in particular need to be done, OR ELSE YOUR LOOP WON'T WORK:\n\n\n\n\n\n\nSet \u201cmax temp basal\u201d in pump to at least equal to (or slightly greater) than the Loop\u2019s max basal\n\n\n\n\n\n\nSet \u201ctemp basal type\u201d to \u201cinsulin rate (u/h)\u201d\n\n\n\n\n\n\nSet Remote ID to \"on\" and enter any random ID (000000 will work). This is found in the pump's Utilities (for x23 continue to Connect Devices, Remotes) and turn ON the Remote Options.\n\n\n\n\n\n\nCONGRATS...your Loop is ready for use.  But are you?  Have you read through the algorithm?  Have you watched the pump in open loop mode?  Have you read about how to safely do site changes and priming?  Do you know how to troubleshoot your Loop?  Please take the time to read the other sections of this guide as they will help you navigate safe looping practices.", 
            "title": "Install openaps"
        }, 
        {
            "location": "/myopenaps/loop/#configuring-your-loop", 
            "text": "Now that you have the Loop app installed on your iPhone, we need to input the settings so that the Loop can work for you.  In this section, we cover the details and provide information about the Loop displays.  Finally, we will cover some extras like Apple Watch and useful external integrations.", 
            "title": "Configuring your Loop"
        }, 
        {
            "location": "/myopenaps/loop/#settings", 
            "text": "Normally, we would start by explaining the displays on an application, but your Loop won\u2019t have much showing initially until we get some basic settings input.  So, let\u2019s start by clicking on the Loop Settings button in the tool bar.  It looks like a little sprocket.", 
            "title": "Settings"
        }, 
        {
            "location": "/myopenaps/loop/#loop-version", 
            "text": "The first graphic at the top of the Loop settings display shows the version of the software, e.g.,  Loop v1.3 in this example.  This can be helpful when working with other users of the software to know what version you are running.", 
            "title": "Loop Version"
        }, 
        {
            "location": "/myopenaps/loop/#closed-loop", 
            "text": "The Closed Loop switch controls the Loop operation mode for the application. This operation mode determines whether Loop automatically enacts recommendations (i.e., sets temp basals) to the insulin pump.       When the Closed Loop switch is in the (Off    ) position, Loop WILL NOT enact recommended temp basals automatically.  Instead, it will display Recommended Temp Basals on the main status display, just above the Glucose graph.  This is called \u201cOpen Loop\u201d, and is a good way to understand how Loop will function, and what type of recommendations it would make.       When the Closed Loop switch is in the (    On) position, Loop WILL automatically enact recommended temp basals on the configured insulin pump. This is known as a \u201cClosed Loop\u201d.  Typically, Loop will show the recommended temp basal just above the Glucose graph prior to automatically enacting it.  It may take a minute or so for the Loop to enact the recommended basal.  Once the temp basal has been enacted successfully on the pump, the recommended temp basal will disappear from the screen and the new temp basal will be represented in the insulin delivery graphics.", 
            "title": "Closed Loop"
        }, 
        {
            "location": "/myopenaps/loop/#preferred-data-source", 
            "text": "If Preferred Data Source is set to \u201cEvent History\u201d, then the pump will periodically be polled for treatment events.  This will cause your battery to be used at a faster rate, but will allow Loop to upload \u201ctreatments\u201d to Nightscout.   Event History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop.  Even with Preferred Data Source set to \u201cEvent History\u201d, the reservoir volume will still be used to determine IOB, except in a few cases, such as when reservoir volumes have increased (in other words, reservoir was changed or refilled), or when the reservoir history is missing at least 30 minutes of continuous readings.  Event History = More Accurate Treatment Data, and Upload of Treatments to Nightscout  Reservoir = Improved pump battery economy by using MySentry data for Reservoir Readings (x23 and x54 pumps only)", 
            "title": "Preferred Data Source"
        }, 
        {
            "location": "/myopenaps/loop/#issue-report", 
            "text": "If you run into problems or errors with your Loop, the Issue Report can be used to help identify where the problem is occurring.  The Issue Report is automatically generated and you can share it via email.  Frequently, if you go to Gitter or Facebook for help with a technical problem, an Issue Report will provide insight to what the potential problem is.", 
            "title": "Issue Report"
        }, 
        {
            "location": "/myopenaps/loop/#devices", 
            "text": "If your RileyLink is turned on and nearby, you will see a RileyLink in this area of the settings (like the first screenshot on this page).  We are going to take care of the RileyLink settings later in this page...for now we are going to skip the RileyLink line.", 
            "title": "Devices"
        }, 
        {
            "location": "/myopenaps/loop/#pump-id", 
            "text": "Fairly self-explanatory.  You need to enter your pump\u2019s six-digit ID here.  To find your pump ID, press ESC button on the pump, scroll down.  You will find a the six-digit ID as the \u201cS/N#\u201d.  You will also find the same ID on the back of the pump as six numbers beneath the pump\u2019s model number.  There are also explanations so you can identify the pump\u2019s region.  This makes a difference for how the RileyLink will tune its frequency for pump communications.", 
            "title": "Pump ID"
        }, 
        {
            "location": "/myopenaps/loop/#pump-battery-type", 
            "text": "Again fairly self-explanatory.  Click which battery type you are using so that the battery percentages are more accurately displayed in your HUD.  The battery displays are designed to give you approximately 8-10 hours notice before looping would fail.  However, every battery manufacturer has its own decay curve for its specific batteries.  Typically, low battery levels will cause looping failures prior to the actual pump failing to delivery insulin.", 
            "title": "Pump Battery Type"
        }, 
        {
            "location": "/myopenaps/loop/#cgm-selection", 
            "text": "Select one of the options from the menu:   Fetch Enlite Data  G4 Share Receiver  G5 Transmitter   If you select the G5 Transmitter, you will be prompted to enter the transmitter ID number.  Don't forget to update your transmitter ID when you change transmitters, otherwise your loop will not work.", 
            "title": "CGM Selection"
        }, 
        {
            "location": "/myopenaps/loop/#target-range", 
            "text": "This is where you set your target blood glucose range.  This is the low and high BG values that Loop will attempt to keep you between.  Click the + in the upper right corner to add target BG range(s).  You can have multiple targets based on time of day, but for safety purposes the first setting of the day should begin at midnight to be consistent with your Medtronic pump.    Targets will be entered in mg/dl or mmoL automatically based upon how your BG values appear your BG chart. By default they are set to mg/dl, however once BG values arrive in mmoL these settings can be entered in mmoL. If you are planning to use mmoL, be sure to wait to set your target range up until after you have started to receive BG values. If you do these in the wrong order, then your chart may have incorrect Y axis. If you come across this issue, you can also remove all of your target ranges and enter them again. Once you are receiving BG values in mmoL, you can add your Target Range in mmoL.  You can also set the \u201coverride\u201d targets here to temporarily use alternate BG targets.  These override targets will only be enacted when you specifically activate \u201cWorkout Mode\u201d.   Target range can be a single number, such as 100-100 mg/dL, but is not necessarily advised or \u201cbetter\u201d.", 
            "title": "Target Range"
        }, 
        {
            "location": "/myopenaps/loop/#minimum-bg-guard", 
            "text": "Minimum BG Guard is a required data entry for successful configuration of Loop.  Your Loop will not turn green without setting this value.     Minimum BG Guard allows a user to bolus when their BG is below their target range but not below the value of the Minimum BG Guard.  To help users understand how this setting is affecting their usage of Loop, users will see a new notification icon and details of why there is no recommended bolus if the predicted BG is below the Minimum BG Guard.", 
            "title": "Minimum BG Guard"
        }, 
        {
            "location": "/myopenaps/loop/#insulin-action-duration-dia", 
            "text": "Enter your insulin action duration here in hours.  This is also called Duration of Insulin Action (DIA).  Typically, close-loopers use between 3-4 hours with good success.  However, your diabetes may vary.  This number is a real number so decimals work here for fractions of hours. Like (2.5) = 2hrs 30 mins", 
            "title": "Insulin Action Duration (DIA)"
        }, 
        {
            "location": "/myopenaps/loop/#basal-rates", 
            "text": "Enter your basal rates here.  These should match the values entered in your pump. Entering them here will not override your pump\u2019s values, so make sure they match. This is fairly standard stuff that most T1Ds are already familiar with.  However, if you are new to Medtronic pumps...keep in mind that your insulin needs may change slightly when changing pump systems.  If in doubt, try some basal testing to see if your old basal rates may need adjustments with the switch to Medtronic pumps and infusion sets.  Only one basal pattern may be set in each Loop app.  If you are accustomed to switching between two or more basal patterns frequently, you have two options:   manually editing the basal profiles in this area each time you change basals, or  installing a duplicate Loop app for each basal pattern and switching when needed.   If you choose to have duplicate Loop apps, you will need to use different MAIN_APP_BUNDLE_IDENTIFIERs for each app.  Additionally, you must remember to close  the unused Loop app (double-click iPhone home button and up-swipe Loop app).  Only one Loop app can run successfully at a time.  When you switch to the new Loop app, it may take 5-15 minutes for the Loop to turn green.  The good news is that all your carb entries, insulin doses and such will automatically populate in the new Loop within a relatively short amount of time and the transition is therefore seamless for Loop functionality.", 
            "title": "Basal Rates"
        }, 
        {
            "location": "/myopenaps/loop/#carb-ratios", 
            "text": "Click the + in the upper right to add carb ratios for various times of day. Loop works best if you have tested and optimized your carb ratio settings for accuracy.", 
            "title": "Carb Ratios"
        }, 
        {
            "location": "/myopenaps/loop/#insulin-sensitivities", 
            "text": "Click the + in the upper right to add insulin sensitivities for various times of day. Loop works best if you have tested and optimized your ISF settings for accuracy.  Insulin sensitivities can change for many reasons including waiting too long to change your infusion set.  Loop will not auto-detect changes in ISF.", 
            "title": "Insulin Sensitivities"
        }, 
        {
            "location": "/myopenaps/loop/#maximum-basal-rate", 
            "text": "Maximum basal rate is the maximum temporary basal rate that the Loop is allowed to enact to correct to your target BG range.  See the Use section discussion for Close Loop for some suggestions regarding appropriate Maximum Basal Rate.  NOTE:  A frequent error for new Loop users is when they set their maximum basal rate here to a value HIGHER than the corresponding setting on the pump.  This will result in an error message that the temp basal failed to enact.  For example, Loop cannot successfully tell the pump to deliver 4 units per hour if the pump\u2019s maximum is set to only 3.8 units per hour.  If you are seeing failures of the Loop to set a high temp basal, check to see if your pump\u2019s maximum basal is at greater than or equal to the Loop\u2019s maximum basal.", 
            "title": "Maximum Basal Rate"
        }, 
        {
            "location": "/myopenaps/loop/#maximum-bolus", 
            "text": "Enter your desired single bolus maximum here.", 
            "title": "Maximum Bolus"
        }, 
        {
            "location": "/myopenaps/loop/#services", 
            "text": "The services listed in this section are  OPTIONAL .  You can choose to leave them empty and your Loop will still work.", 
            "title": "Services"
        }, 
        {
            "location": "/myopenaps/loop/#dexcom-share", 
            "text": "Adding your Dexcom Share account information here will allow Loop to pull CGM data from the Dexcom servers in the event the Loop is not able to pull the data directly from the G4 receiver or G5 transmitter.  When Loop is receiving CGM data using this option, a little cloud icon will appear on the CGM reading in the Loop\u2019s mainscreen.  Use your same dexcom account info as you use in the Share2 or G5 Mobile apps.", 
            "title": "Dexcom Share"
        }, 
        {
            "location": "/myopenaps/loop/#nightscout", 
            "text": "If you have an existing Nightscout site, add the Site URL and API Secret to have your Loop data transmitted to your Nightscout site. If you can\u2019t remember your API Secret, it can be found under Settings, Reveal Config Vars for Heroku sites (or Application Settings, Connection Strings for Azure sites).", 
            "title": "Nightscout"
        }, 
        {
            "location": "/myopenaps/loop/#mlab", 
            "text": "mLab is a cloud-hosted Mongo Database service.  mLab is used by Loop as a remote repository of Loop status data.  This data is very helpful if you having issues with Loop and need to see remotely what Loop is doing and get diagnostics. If you already have a Nightscout site, you can use your existing mLab database.  As the screen shot below shows, this integration will log the errors from your Loop app and help you troubleshoot if you notice a pattern of problems.     To get your database name:  If you have Nightscout, access your mLab.  If you manually built your mLab database, you can login to mLab  here .  If you had Heroku automatically deploy your site, you can access mLab from your Heroku dashboard. Find the screen, like shown below, to get your database name.  The database name is the part after the \u201cdsXXXXXXX/\u201d.  In this case, \u201cannat1d\u201d       To obtain your API Key:  1) Click your username (not the account name) in the upper right-hand corner to open your account user profile  2) If you are already in the account details page, then click on the row with your username in the Account Users section  3) If the status is showing as \u201cData API Access: Disabled\u201d in the \u201cAPI Key\u201d section, click the \u201cEnable Data API access\u201d button  4) Once Data API access is enabled, your current API key will be displayed in the \u201cAPI key\u201d  If you have any problems with integration, you can try regenerating the API key and that should solve the problem.", 
            "title": "mLab"
        }, 
        {
            "location": "/myopenaps/loop/#amplitude", 
            "text": "Amplitude  is a remote event monitoring service and can be used to quickly identify errors and events with Loop.  Amplitude stores the events and allows you to view those events as points in time.  To retrieve the details of the events you will need to look at corresponding mLab data entries to get a complete picture of the issues.  If you sign up for a free account with Amplitude, you will be given an API Key that you can enter here to have Loop integration setup.", 
            "title": "Amplitude"
        }, 
        {
            "location": "/myopenaps/loop/#rileylink", 
            "text": "RileyLink is turned on with a little switch on the side of the circuit board (little blue lights will flash briefly and then turn off).  The \u201con\u201d position is with the switch towards the battery plug.  Now that you have it turned on, go back to your Loop settings and under \u201cDevices\u201d, there will be a connection to turn on.  Turn it on (slide to green) and then click on the arrow to the right of the green slider to open the RileyLink settings area.  Your RileyLink will now have a solid green light showing.  The solid green light indicates a working bluetooth connection with your iPhone.", 
            "title": "RileyLink"
        }, 
        {
            "location": "/myopenaps/loop/#device", 
            "text": "The settings under the Device section are mostly for your information only.  However, you can rename your RileyLink to something more unique.  This is a good idea if you own more than one or are ever in the presence of more than one RileyLink...you will be able to pick out your connection easier amongst a crowd of \u201cRileyLinks\u201d.  The  Signal Strength  showing under this area of the menu is the signal strength of the BT with the iPhone.  It is  not  the signal strength of the radio communications with the pump.", 
            "title": "Device"
        }, 
        {
            "location": "/myopenaps/loop/#pump", 
            "text": "The Pump ID should be automatically filled in from the setting you have already entered previously.  The pump model will say unknown until we proceed with \u201cTune Radio Frequency.\u201d", 
            "title": "Pump"
        }, 
        {
            "location": "/myopenaps/loop/#commands", 
            "text": "Tune Radio Frequency: Choose \u201cTune Radio Frequency\u201d.  It may take about a minute, but soon you will see a list of frequencies and you can exit back to the main RileyLink settings.  The Command line will now show the frequency (916.xx MHz) in the first command line and the timestamp of the tune.  Now your pump and RileyLink are tuned to talk to each other.   (Note: for the rest of these items you may first need to set a Remote ID as discussed in the Pump Setup below.)    Change Time:  Choose \u201cchange time\u201d so that pump and Loop times will match exactly.   You should never use the pump itself to set the pump\u2019s time.   Always use the RileyLink to set pump time.    MySentry Pair:  MySentry Pairing is for x23 and x54 pumps.  Follow the directions as shown in the RileyLink command screen for MySentry.  You do not have to worry about this command if you are using an x15 or x22 model pump, as they do not have MySentry.  If you do not perform a MySentry pairing and have an x23 or x54 pump, your loop will only turn green every 15 minutes.    Fetch Recent History, Fetch Recent Glucose, Write Glucose History Timestamp, Get Pump Model, and Send Button Press, Read Pump Status are all ways of asking the pump for information you might be interested in.  They are not part of setting up the Loop.  Send Button Press can be useful to see if the communication between the RileyLink and pump is working.  If successful, the screen on the pump will light up and Loop will confirm the button press with a \u201csuccess\u201d message.  Read Pump Status is also nice quick pump read for reservoir volume, pump battery voltage, and pump status (bolusing or suspending).", 
            "title": "Commands"
        }, 
        {
            "location": "/myopenaps/loop/#pump-setup", 
            "text": "Now that you are done with your Loop app settings, you need to finish setting up your pump for Loop use.  Generally, the setup of the pump is similar to setting up any pump for non-looping use.  One notable exception: you will need to change those batteries more often with Looping.  Loop will drain pump batteries much faster than regular pump regimes, and Loop failures will increase in frequency as the pump battery gets low.}  While not every setting NEEDS to match between Loop and pump, it is safer to have them match in case your Loop fails and you revert back to normal pump use.  You should program the pump settings to match for:   Basal program(s)  Carb ratio  ISF  Max bolus  Insulin action duration  BG targets   Three settings in particular need to be done, OR ELSE YOUR LOOP WON'T WORK:    Set \u201cmax temp basal\u201d in pump to at least equal to (or slightly greater) than the Loop\u2019s max basal    Set \u201ctemp basal type\u201d to \u201cinsulin rate (u/h)\u201d    Set Remote ID to \"on\" and enter any random ID (000000 will work). This is found in the pump's Utilities (for x23 continue to Connect Devices, Remotes) and turn ON the Remote Options.    CONGRATS...your Loop is ready for use.  But are you?  Have you read through the algorithm?  Have you watched the pump in open loop mode?  Have you read about how to safely do site changes and priming?  Do you know how to troubleshoot your Loop?  Please take the time to read the other sections of this guide as they will help you navigate safe looping practices.", 
            "title": "Pump Setup"
        }, 
        {
            "location": "/myopenaps/preferences/", 
            "text": "Bolus\n\n\n\n\n\n\n\n\n\nBolus entries can be made manually through the bolus tool (double orange triangles) in the toolbar, either as part of a meal bolus or as a correction for a high BG.\n\n\nMeal Bolus\n\n\nLoop has a Bolus Wizard, similar to a pump\u2019s bolus wizard.  After a carb entry is made, Loop will provide a bolus screen with a recommended bolus amount.  If you want to deliver the total amount of the recommended bolus, simply tap on the recommended amount of units and the bolus delivery line will automatically be filled-in with the same units.  If you want to give fewer units than the recommended amount, you can manually enter the desired amount to be delivered.   \n\n\nThe Bolus Wizard will not offer a recommended bolus if your BG is below, or predicted to go below, your specified Minimum BG Guard.  A screen will appear letting you know the reason no bolus is being recommended as well as the status of your active COB and IOB.  You can choose to override that warning and give a bolus, or treat the low BG and come back to the bolus tool when your BG has recovered.\n\n\n\n\n\n\n\n\n\nCorrection Bolus\n\n\nOccasionally, a recommended bolus will be offered in the bolus screen unrelated to a recent carb entry.  In those cases, Loop is calculating that it will not be able to stay in target range through the use of max temp basals alone and is offering a \u201ccorrection bolus\u201d.  Correction boluses will not be delivered automatically by Loop, they must be delivered by the user.  Loop will also not give an alert when a correction bolus is being offered, the bolus entry tool must be clicked to check for one.  In a well-run loop with decent carb counting, correction boluses should be infrequently needed.\n\n\nPart of Loop's predictions for future BG changes include a component called BG momentum. Loop looks at the previous three BG readings and calculates a best-fit-straight-line for those three points. In other words, it tries to draw a future trend line using the last three BG data points. Loop extends that line 30 minutes into the future and gives a fair amount of weight to that component of the BG prediction. In instances of rapidly changing BGs, BG momentum may overestimate the rise/fall of BG. Therefore, please be cautious giving corrective boluses using Loop recommendations during times of rapid change.\n\n\nBolus Failure Notifications\n\n\nOn occasion, you will receive notification that a bolus may have failed. In some of these cases, the bolus actually will begin delivery. Therefore, you should always check the pump screen to verify the bolus status before attempting to redeliver a failed bolus.\n\n\nEating Soon\n\n\nYou can modify your Workout Target range to help prebolus for meals.  If you set your Workout Target to 80 mg/dl - 80 mg/dl for an hour before a meal, this will help Loop to deliver additional insulin prior to the meal, and help control post-prandial BGs.  The Loop will account for the amount of insulin it has prebolused when it offers the recommended bolus for the meal.\n\n\nBolus Strategies\n\n\nUnfortunately, Loop cannot enact temp basals while the pump is delivering a square wave or dual wave bolus.  Therefore, we recommend that you find alternate bolusing strategies for situation where you would've previously used those extended bolusing techniques.\n\n\nWhile you adapt to new bolusing techniques, it is important to monitor closely to see what works for you.  It will take some trial and error to get it right.  In particular, pay close attention to what you enter for the carb absorption time for the food.  If you are used to using a square wave or extended bolus, then it is for food that takes a longer than normal period of time to digest so adjust accordingly. \n\n\nMany Loop users use a combination of (1) splitting individual boluses and/or (2) setting carbs in the future before a slower, larger carb meal to help control BG levels that would otherwise rise without an extended bolus.\n\n\nUsing the \nGlucodyn\n model can help you simulate new bolusing strategies.  Glucodyn allows you to simulate your post-prandial BGs based on your particular ISF, carb ratio, and carbs.  You can simulate split boluses and watch their impact on simulated BG responses.  The underlying math of the Glucodyn model is the basis of Loop's insulin/carb calculations.", 
            "title": "Preferences"
        }, 
        {
            "location": "/myopenaps/preferences/#bolus", 
            "text": "Bolus entries can be made manually through the bolus tool (double orange triangles) in the toolbar, either as part of a meal bolus or as a correction for a high BG.", 
            "title": "Bolus"
        }, 
        {
            "location": "/myopenaps/preferences/#meal-bolus", 
            "text": "Loop has a Bolus Wizard, similar to a pump\u2019s bolus wizard.  After a carb entry is made, Loop will provide a bolus screen with a recommended bolus amount.  If you want to deliver the total amount of the recommended bolus, simply tap on the recommended amount of units and the bolus delivery line will automatically be filled-in with the same units.  If you want to give fewer units than the recommended amount, you can manually enter the desired amount to be delivered.     The Bolus Wizard will not offer a recommended bolus if your BG is below, or predicted to go below, your specified Minimum BG Guard.  A screen will appear letting you know the reason no bolus is being recommended as well as the status of your active COB and IOB.  You can choose to override that warning and give a bolus, or treat the low BG and come back to the bolus tool when your BG has recovered.", 
            "title": "Meal Bolus"
        }, 
        {
            "location": "/myopenaps/preferences/#correction-bolus", 
            "text": "Occasionally, a recommended bolus will be offered in the bolus screen unrelated to a recent carb entry.  In those cases, Loop is calculating that it will not be able to stay in target range through the use of max temp basals alone and is offering a \u201ccorrection bolus\u201d.  Correction boluses will not be delivered automatically by Loop, they must be delivered by the user.  Loop will also not give an alert when a correction bolus is being offered, the bolus entry tool must be clicked to check for one.  In a well-run loop with decent carb counting, correction boluses should be infrequently needed.  Part of Loop's predictions for future BG changes include a component called BG momentum. Loop looks at the previous three BG readings and calculates a best-fit-straight-line for those three points. In other words, it tries to draw a future trend line using the last three BG data points. Loop extends that line 30 minutes into the future and gives a fair amount of weight to that component of the BG prediction. In instances of rapidly changing BGs, BG momentum may overestimate the rise/fall of BG. Therefore, please be cautious giving corrective boluses using Loop recommendations during times of rapid change.", 
            "title": "Correction Bolus"
        }, 
        {
            "location": "/myopenaps/preferences/#bolus-failure-notifications", 
            "text": "On occasion, you will receive notification that a bolus may have failed. In some of these cases, the bolus actually will begin delivery. Therefore, you should always check the pump screen to verify the bolus status before attempting to redeliver a failed bolus.", 
            "title": "Bolus Failure Notifications"
        }, 
        {
            "location": "/myopenaps/preferences/#eating-soon", 
            "text": "You can modify your Workout Target range to help prebolus for meals.  If you set your Workout Target to 80 mg/dl - 80 mg/dl for an hour before a meal, this will help Loop to deliver additional insulin prior to the meal, and help control post-prandial BGs.  The Loop will account for the amount of insulin it has prebolused when it offers the recommended bolus for the meal.", 
            "title": "Eating Soon"
        }, 
        {
            "location": "/myopenaps/preferences/#bolus-strategies", 
            "text": "Unfortunately, Loop cannot enact temp basals while the pump is delivering a square wave or dual wave bolus.  Therefore, we recommend that you find alternate bolusing strategies for situation where you would've previously used those extended bolusing techniques.  While you adapt to new bolusing techniques, it is important to monitor closely to see what works for you.  It will take some trial and error to get it right.  In particular, pay close attention to what you enter for the carb absorption time for the food.  If you are used to using a square wave or extended bolus, then it is for food that takes a longer than normal period of time to digest so adjust accordingly.   Many Loop users use a combination of (1) splitting individual boluses and/or (2) setting carbs in the future before a slower, larger carb meal to help control BG levels that would otherwise rise without an extended bolus.  Using the  Glucodyn  model can help you simulate new bolusing strategies.  Glucodyn allows you to simulate your post-prandial BGs based on your particular ISF, carb ratio, and carbs.  You can simulate split boluses and watch their impact on simulated BG responses.  The underlying math of the Glucodyn model is the basis of Loop's insulin/carb calculations.", 
            "title": "Bolus Strategies"
        }, 
        {
            "location": "/myopenaps/bt-tether/", 
            "text": "RileyLink\n\n\nTuning the Radio\n\n\nThe RileyLink communicates with the pump through radio frequency communications.  Numerous factors can influence how well those communications can function...interferences from other devices, temperature, physical blocking, etc.\n\n\nKnowing a little about the strength of the radio communications will help you troubleshoot Loop errors.  When you \nTune Radio Frequency\n in the Riley Link menu, it is testing for the strongest frequency to communicate with the pump.  Usually this frequency is pretty constant, but during temperature changes it may be that the best frequency is not the one currently set.  The tuning results also show which frequency is the strongest. \n\n\nFor example, in the screenshot below, the strength of the radio communications with the pump is shown by the last number of the tune.  Frequencies with tuning results of -99 means NO communications were established at that frequency.  RileyLink will use the strongest frequency tune for its pump communications.  In the screenshot, the best frequency returned a result of \n-37\n at a frequency of \n916.60 MHz\n, so RileyLink will set that \n916.60 MHz\n for its pump communications.\n\n\n\n\n\n\n\n\n\nGenerally, if you have tuning in the -90s, your RileyLink-pump communications will not work.  If you have tuning in the -80s, you may have periodic communication failures.  If your tuning is in the -70s or better, your communications should be pretty stable.  \n\n\nExperiment with your RileyLink by moving it closer and farther away from the pump.  Try putting it on the other side of your body, or put it in a purse.  Test the tuning results in real world situations that you think you'd be encountering, such as where you will have the RileyLink placed during overnight charging. Perform tunes at the various distances and situations.  This will help you understand how far from the pump your RileyLink can get before it will affect Loop performance.  \n\n\nBluetooth\n\n\nRileyLink communicates with your iPhone and Loop app through Bluetooth.  If your iPhone has BT issues, your Loop will have failures.  There have been reports of BT audio devices (such as BT pairings in your car or home audio BT speakers) interferring with the Loop.  If you are finding Loop failures frequently happening at a particular location, you may try to troubleshoot if there are BT problems in the area.\n\n\nYour BT signal strength can be seen in the Loop settings, under the RileyLink menu, on the \nSignal Strength\n line.  As you move closer and further away from your phone, you can watch that number dynamically change. This line is \nnot\n displaying the signal strength of your pump communications discussed above (those are shown in the tuning results screen).\n\n\nLights\n\n\nRileyLink has several lights that you may notice from time to time.  Depending on the model of RileyLink that you have, you may see lights more or less frequently.  The older models of RileyLink have more lights on typically.\n\n\n\n\n\n\nRed light: Charging light.  The red light will remain on while RileyLink is charging, and it will turn off when charging is complete.  You may notice the red light turn on periodically even after charging is complete...it's just \"topping off\".\n\n\n\n\n\n\nGreen light: BT light.  The green light will remain on while you have BT connection with your iPhone.  If that green light fails to stay on, you should troubleshoot your BT connections.  Try restarting BT on your iPhone and/or turning the RileyLink off/on by its power switch.\n\n\n\n\n\n\nBlue light: Pump communications.  The blue light will flash periodically as it is communicating with the pump.  It's just letting you know that it is busy talking and collecting info.  You will see the blue light flash especially when you do a \nFetch History\n command as that pulls a lot of information from the pump.\n\n\n\n\n\n\nCharging\n\n\nThe battery that comes with RileyLink will easily last a full day of constant Loop use.  Typically, it can go into the 30-hour range without problem.  Most people charge their RileyLink each night when they are sleeping.  You don't have to worry about leaving the RileyLink plugged in \"too long\" for charging.  It will automatically stop charging the battery when it is fully charged.\n\n\nRange\n\n\nThe range that your RileyLink will function is \nheavily\n dependent on the environment that you are in. Read the section about Tuning to help determine how far your RileyLink can dependably maintain an adequate signal strength in your particular environment.  Most people wear the RileyLink in a pocket or carry a belt holster during the day.  Typically, RileyLink will need to be closer to the pump than the iPhone.  The radio frequency communications will have a shorter range than the BT communications.\n\n\nLipo Battery\n\n\nIf you ordered your RileyLink preassembled, you should plug in the battery cable.  Please make sure your RileyLink\u2019s battery cable is securely pushed all the way into the socket.  Poor battery cable connection can make the Loop communications fail.\n\n\n\n\nRileyLink with loose battery cable.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRileyLink with properly secured battery cable.\n\n\n\n\n\n\n\n\n\n\n\n\nKeep your RileyLink and lipo battery protected from damage.  Lipo batteries are unsafe when damaged or punctured, so the case is an important part of safe Looping.", 
            "title": "BT tether"
        }, 
        {
            "location": "/myopenaps/bt-tether/#rileylink", 
            "text": "", 
            "title": "RileyLink"
        }, 
        {
            "location": "/myopenaps/bt-tether/#tuning-the-radio", 
            "text": "The RileyLink communicates with the pump through radio frequency communications.  Numerous factors can influence how well those communications can function...interferences from other devices, temperature, physical blocking, etc.  Knowing a little about the strength of the radio communications will help you troubleshoot Loop errors.  When you  Tune Radio Frequency  in the Riley Link menu, it is testing for the strongest frequency to communicate with the pump.  Usually this frequency is pretty constant, but during temperature changes it may be that the best frequency is not the one currently set.  The tuning results also show which frequency is the strongest.   For example, in the screenshot below, the strength of the radio communications with the pump is shown by the last number of the tune.  Frequencies with tuning results of -99 means NO communications were established at that frequency.  RileyLink will use the strongest frequency tune for its pump communications.  In the screenshot, the best frequency returned a result of  -37  at a frequency of  916.60 MHz , so RileyLink will set that  916.60 MHz  for its pump communications.     Generally, if you have tuning in the -90s, your RileyLink-pump communications will not work.  If you have tuning in the -80s, you may have periodic communication failures.  If your tuning is in the -70s or better, your communications should be pretty stable.    Experiment with your RileyLink by moving it closer and farther away from the pump.  Try putting it on the other side of your body, or put it in a purse.  Test the tuning results in real world situations that you think you'd be encountering, such as where you will have the RileyLink placed during overnight charging. Perform tunes at the various distances and situations.  This will help you understand how far from the pump your RileyLink can get before it will affect Loop performance.", 
            "title": "Tuning the Radio"
        }, 
        {
            "location": "/myopenaps/bt-tether/#bluetooth", 
            "text": "RileyLink communicates with your iPhone and Loop app through Bluetooth.  If your iPhone has BT issues, your Loop will have failures.  There have been reports of BT audio devices (such as BT pairings in your car or home audio BT speakers) interferring with the Loop.  If you are finding Loop failures frequently happening at a particular location, you may try to troubleshoot if there are BT problems in the area.  Your BT signal strength can be seen in the Loop settings, under the RileyLink menu, on the  Signal Strength  line.  As you move closer and further away from your phone, you can watch that number dynamically change. This line is  not  displaying the signal strength of your pump communications discussed above (those are shown in the tuning results screen).", 
            "title": "Bluetooth"
        }, 
        {
            "location": "/myopenaps/bt-tether/#lights", 
            "text": "RileyLink has several lights that you may notice from time to time.  Depending on the model of RileyLink that you have, you may see lights more or less frequently.  The older models of RileyLink have more lights on typically.    Red light: Charging light.  The red light will remain on while RileyLink is charging, and it will turn off when charging is complete.  You may notice the red light turn on periodically even after charging is complete...it's just \"topping off\".    Green light: BT light.  The green light will remain on while you have BT connection with your iPhone.  If that green light fails to stay on, you should troubleshoot your BT connections.  Try restarting BT on your iPhone and/or turning the RileyLink off/on by its power switch.    Blue light: Pump communications.  The blue light will flash periodically as it is communicating with the pump.  It's just letting you know that it is busy talking and collecting info.  You will see the blue light flash especially when you do a  Fetch History  command as that pulls a lot of information from the pump.", 
            "title": "Lights"
        }, 
        {
            "location": "/myopenaps/bt-tether/#charging", 
            "text": "The battery that comes with RileyLink will easily last a full day of constant Loop use.  Typically, it can go into the 30-hour range without problem.  Most people charge their RileyLink each night when they are sleeping.  You don't have to worry about leaving the RileyLink plugged in \"too long\" for charging.  It will automatically stop charging the battery when it is fully charged.", 
            "title": "Charging"
        }, 
        {
            "location": "/myopenaps/bt-tether/#range", 
            "text": "The range that your RileyLink will function is  heavily  dependent on the environment that you are in. Read the section about Tuning to help determine how far your RileyLink can dependably maintain an adequate signal strength in your particular environment.  Most people wear the RileyLink in a pocket or carry a belt holster during the day.  Typically, RileyLink will need to be closer to the pump than the iPhone.  The radio frequency communications will have a shorter range than the BT communications.", 
            "title": "Range"
        }, 
        {
            "location": "/myopenaps/bt-tether/#lipo-battery", 
            "text": "If you ordered your RileyLink preassembled, you should plug in the battery cable.  Please make sure your RileyLink\u2019s battery cable is securely pushed all the way into the socket.  Poor battery cable connection can make the Loop communications fail.   RileyLink with loose battery cable.       RileyLink with properly secured battery cable.      Keep your RileyLink and lipo battery protected from damage.  Lipo batteries are unsafe when damaged or punctured, so the case is an important part of safe Looping.", 
            "title": "Lipo Battery"
        }, 
        {
            "location": "/myopenaps/papertrail/", 
            "text": "Carb Entry\n\n\n\n\n\n\n\n\n\nNew Carbs\n\n\n\n\n\n\n\n\n\nNew carb entries can be made by using the carb tool (green fork) in the toolbar at the bottom of the status screen.  Simply enter the number of carbs to be eaten in the \namount consumed\n line.  By default, the carb absorption time for a new carb entry will correspond to the taco icon.  If you haven't made any customizations to this during your Loop build, then the default carb absorption time will display as 180 mins.  The default time entry is for the current time and date.  Clicking on the \nabsorption time\n will bring up the three carb icons and allow you to edit the carb absorption time.\n\n\nYou do not have to enter all carbs for a meal at the same absoption or eating time.  If you want to enter some of the meal's carbs as faster, and some slower, you can log the meal over several individual carb entries.\n\n\nPressing the \nSave\n button in the top right corner will save the carbs into the Loop app and bring up the bolus wizard (if you are above your Minimum BG guard).\n\n\nCarb Absorption Time\n\n\n\n\n\n\n\n\n\nThese default carb absorption times are average representations for high, medium, and low glycemic index foods.  Your diabetes may vary, so please adjust if you suspect your carb absorption times might need changing.  Typically, if you find Loop is behaving differently than you\u2019d expect around meals (lots of early or late high temp basals/suspensions leading to unexpected post-meal lows/highs), you may need to change carb absorption time.  Many kids have faster carb absorption times than adults.  Find what works for you.\n\n\nPrebolus\n\n\nYou can let Loop know you are going to prebolus a meal by adjusting the time of the carb entry on the \u201cdate\u201d line of the carb entry.  If you are prebolusing by 20 minutes, simply add 20 minutes to the carb entry time.  \n\n\nEdit Carbs\n\n\n\n\n\n\n\n\n\nClicking on the Carbohydrate chart in the Loop's main status screen will open the carb entry history and previous entries can be modified or deleted through this screen.  If you need to change a prebolus time, add carbs, adjust carb absorption times (even mid-meal), just go into that edit screen and tap on the carb entry you'd like to edit.  Pretty straight-forward.\n\n\nThird Party Apps\n\n\nIf you use a 3rd party app, such as My Fitness Pal, to enter and track carbs and that app also stores the carb values in HealthKit, Loop will read those values from Apple HealthKit and display and use them in calculating temp basal rates. Entries from 3rd party apps can not be removed from within Loop.  You will have to edit them in the third party app, or from the Health app. Because of this potential for confusion, it is recommended to turn off Loop's ability to read other apps' carbohydrate data from HealthKit. You are asked if you want to enable this when Loop is first installed. After installation, you can also go to the Settings App -\n Privacy -\n Health -\n Loop and turn off \nRead Data for Carbohydrates\n.\n\n\nAvoid Double Carb Entries\n\n\nWhen you press \nSave\n for a carb entry, Loop will consider that carb entry saved and use it for calculating temp basals and recommended boluses.  Be cautious about repeated attempts to enter the same meal...Loop will continue to save the carb entries UNLESS you push cancel.  Simply not bolusing for the meal does not cancel the carb entry.", 
            "title": "Papertrail"
        }, 
        {
            "location": "/myopenaps/papertrail/#carb-entry", 
            "text": "", 
            "title": "Carb Entry"
        }, 
        {
            "location": "/myopenaps/papertrail/#new-carbs", 
            "text": "New carb entries can be made by using the carb tool (green fork) in the toolbar at the bottom of the status screen.  Simply enter the number of carbs to be eaten in the  amount consumed  line.  By default, the carb absorption time for a new carb entry will correspond to the taco icon.  If you haven't made any customizations to this during your Loop build, then the default carb absorption time will display as 180 mins.  The default time entry is for the current time and date.  Clicking on the  absorption time  will bring up the three carb icons and allow you to edit the carb absorption time.  You do not have to enter all carbs for a meal at the same absoption or eating time.  If you want to enter some of the meal's carbs as faster, and some slower, you can log the meal over several individual carb entries.  Pressing the  Save  button in the top right corner will save the carbs into the Loop app and bring up the bolus wizard (if you are above your Minimum BG guard).", 
            "title": "New Carbs"
        }, 
        {
            "location": "/myopenaps/papertrail/#carb-absorption-time", 
            "text": "These default carb absorption times are average representations for high, medium, and low glycemic index foods.  Your diabetes may vary, so please adjust if you suspect your carb absorption times might need changing.  Typically, if you find Loop is behaving differently than you\u2019d expect around meals (lots of early or late high temp basals/suspensions leading to unexpected post-meal lows/highs), you may need to change carb absorption time.  Many kids have faster carb absorption times than adults.  Find what works for you.", 
            "title": "Carb Absorption Time"
        }, 
        {
            "location": "/myopenaps/papertrail/#prebolus", 
            "text": "You can let Loop know you are going to prebolus a meal by adjusting the time of the carb entry on the \u201cdate\u201d line of the carb entry.  If you are prebolusing by 20 minutes, simply add 20 minutes to the carb entry time.", 
            "title": "Prebolus"
        }, 
        {
            "location": "/myopenaps/papertrail/#edit-carbs", 
            "text": "Clicking on the Carbohydrate chart in the Loop's main status screen will open the carb entry history and previous entries can be modified or deleted through this screen.  If you need to change a prebolus time, add carbs, adjust carb absorption times (even mid-meal), just go into that edit screen and tap on the carb entry you'd like to edit.  Pretty straight-forward.", 
            "title": "Edit Carbs"
        }, 
        {
            "location": "/myopenaps/papertrail/#third-party-apps", 
            "text": "If you use a 3rd party app, such as My Fitness Pal, to enter and track carbs and that app also stores the carb values in HealthKit, Loop will read those values from Apple HealthKit and display and use them in calculating temp basal rates. Entries from 3rd party apps can not be removed from within Loop.  You will have to edit them in the third party app, or from the Health app. Because of this potential for confusion, it is recommended to turn off Loop's ability to read other apps' carbohydrate data from HealthKit. You are asked if you want to enable this when Loop is first installed. After installation, you can also go to the Settings App -  Privacy -  Health -  Loop and turn off  Read Data for Carbohydrates .", 
            "title": "Third Party Apps"
        }, 
        {
            "location": "/myopenaps/papertrail/#avoid-double-carb-entries", 
            "text": "When you press  Save  for a carb entry, Loop will consider that carb entry saved and use it for calculating temp basals and recommended boluses.  Be cautious about repeated attempts to enter the same meal...Loop will continue to save the carb entries UNLESS you push cancel.  Simply not bolusing for the meal does not cancel the carb entry.", 
            "title": "Avoid Double Carb Entries"
        }, 
        {
            "location": "/myopenaps/IFTTT/", 
            "text": "Close Loop\n\n\nWhen you feel like you have learned what you need from open loop, you should be ready to switch to close loop.  There are several ways you can help make that transition as smooth as possible.  \n\n\nTiming\n\n\nMany people choose to transition to close loop in a step-wise fashion.  Starting close loop on weekends is an easier starting point so that you can minimize distractions (let's face it...you'll probably be staring at the Loop a lot for those first few days). Typically, people have an easier time transitioning to close loop for parts of their day that don't involve food...so nighttimes tend to be easier than daytimes to start.\n\n\nMaximum Basal Rate\n\n\nWhen you are first beginning to close loop, it is important to be conservative (low) in setting your maximum basal rate.  If your settings are incorrect in other areas (basal rates, carb absorption time, carb ratio, etc), Loop may enact incorrectly aggressive high temp basals.  Gradually increase your maximum basal rate as your comfort and confidence in Loop increase.  Typically, experienced closed loop users set their max basal rate no more than 3-4 times their average basal rate.  \n\n\nBG targets\n\n\nIf your basals, ISF, or carb ratios aren't set correctly, Loop may overshoot and leave you lower than expected (or with more IOB than you are comfortable with).  Setting your low BG target slightly higher can help prevent unexpected lows or high IOB as you adjust your settings.\n\n\nWatch the IOB\n\n\nWatch whether Loop accumulates positive or negative IOB while holding your BG steady when no food is present.  If you find that you are \"carrying\" positive or negative IOB consistently, you should review your settings to see if perhaps your basal or ISF needs adjusting.\n\n\nMeals\n\n\nMeals will likely be the hardest part of transitioning to close loop.  Starting with foods that you have a high comfort level with is a great idea.  If you have favorite meals that you know well (how high BGs usually go, how much to bolus, how to prebolus, etc), these would be a good starting point.  Watching when the Loop high temps or suspends basals (early vs late in meal) will really help you adjust to find your typical carb absorption times.  As a general idea, \nassuming other settings are accurate\n:\n\n\n\n\nearly high temps in a meal that leave you low after, you may need to shorten carb absorption time\n\n\nearly suspensions in a meal that leave you high after, you may need to lengthen carb absorption time\n\n\n\n\nThis is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.", 
            "title": "IFTTT"
        }, 
        {
            "location": "/myopenaps/IFTTT/#close-loop", 
            "text": "When you feel like you have learned what you need from open loop, you should be ready to switch to close loop.  There are several ways you can help make that transition as smooth as possible.", 
            "title": "Close Loop"
        }, 
        {
            "location": "/myopenaps/IFTTT/#timing", 
            "text": "Many people choose to transition to close loop in a step-wise fashion.  Starting close loop on weekends is an easier starting point so that you can minimize distractions (let's face it...you'll probably be staring at the Loop a lot for those first few days). Typically, people have an easier time transitioning to close loop for parts of their day that don't involve food...so nighttimes tend to be easier than daytimes to start.", 
            "title": "Timing"
        }, 
        {
            "location": "/myopenaps/IFTTT/#maximum-basal-rate", 
            "text": "When you are first beginning to close loop, it is important to be conservative (low) in setting your maximum basal rate.  If your settings are incorrect in other areas (basal rates, carb absorption time, carb ratio, etc), Loop may enact incorrectly aggressive high temp basals.  Gradually increase your maximum basal rate as your comfort and confidence in Loop increase.  Typically, experienced closed loop users set their max basal rate no more than 3-4 times their average basal rate.", 
            "title": "Maximum Basal Rate"
        }, 
        {
            "location": "/myopenaps/IFTTT/#bg-targets", 
            "text": "If your basals, ISF, or carb ratios aren't set correctly, Loop may overshoot and leave you lower than expected (or with more IOB than you are comfortable with).  Setting your low BG target slightly higher can help prevent unexpected lows or high IOB as you adjust your settings.", 
            "title": "BG targets"
        }, 
        {
            "location": "/myopenaps/IFTTT/#watch-the-iob", 
            "text": "Watch whether Loop accumulates positive or negative IOB while holding your BG steady when no food is present.  If you find that you are \"carrying\" positive or negative IOB consistently, you should review your settings to see if perhaps your basal or ISF needs adjusting.", 
            "title": "Watch the IOB"
        }, 
        {
            "location": "/myopenaps/IFTTT/#meals", 
            "text": "Meals will likely be the hardest part of transitioning to close loop.  Starting with foods that you have a high comfort level with is a great idea.  If you have favorite meals that you know well (how high BGs usually go, how much to bolus, how to prebolus, etc), these would be a good starting point.  Watching when the Loop high temps or suspends basals (early vs late in meal) will really help you adjust to find your typical carb absorption times.  As a general idea,  assuming other settings are accurate :   early high temps in a meal that leave you low after, you may need to shorten carb absorption time  early suspensions in a meal that leave you high after, you may need to lengthen carb absorption time   This is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.", 
            "title": "Meals"
        }, 
        {
            "location": "/myopenaps/alias/", 
            "text": "Priming and Site Changes\n\n\nLoop uses event history and reservoir levels to determine how much insulin has actually been delivered through the pump, and correspondingly the Insulin On Board (IOB).  \nIf you manually prime your tubing WITHOUT changing reservoirs\n, Loop will detect that prime as an insulin delivery and count it as IOB.  Therefore, here are some suggestions for priming, set changes, and reservoir changes with Loop in mind.\n\n\nSite Changes\n\n\n\n\n\n\nIf you change sites and increase reservoir volume (i.e., start a new reservoir), don't worry. So long as you are putting in a reservoir that has more insulin than the old one, IOB will be accurate in Loop.  When Loop sees a rewind and an increase in reservoir volume, it will not count any tubing primes as IOB.\n\n\n\n\n\n\nIf you change sites but \ndo NOT increase reservoir volume\n (i.e., you keep existing reservoir going), you will need to go into Loop's reservoir history and delete 30 minutes of continuous reservoir history including the prime event.  By deleting 30 minutes of reservoir history, Loop will use Event History to determine insulin deliveries and IOB. If you cannot get the prime to clear from the IOB, operate in Open Loop mode until the insulin action duration time has passed.  Deleting history is done by:\n\n\n(1)  clicking on the Insulin Delivery Chart  \n\n\n(2)  selecting the Reservoir history screen  \n\n\n(3)  swiping to delete individual reservoir readings  \n\n\n(4)  delete at least 30 minutes of reservoir readings, including the readings that involved priming events\n\n\n\n\n\n\nPrime Menu\n\n\nWhen you finish priming on a Medtronic pump, please make sure to complete the priming menu.  In other words, finish all the prompts so that you get back to the (nearly blank) normal Medtronic pump screen.  If you don't finish the priming menu, the pump will not begin basal insulin delivery, nor does it alarm.  It is equivalent to the pump being suspended...but you won't be able to see any indication of that in Nightscout as a remotely monitoring parent.  Loop will not detect the prime screen issue and will keep sending temp basal messages...but the pump won't enact them.  On Loop, you could notice it by the active IOB continually going down and then eventually negative IOB, as the basal is not delivered and the reservoir level remains constant.  However, the temp basal graph will still show the bars from the temp basal commands loop has been sending.\n\n\nSo, remember to finish those prime menu screens through to the end.", 
            "title": "Aliases"
        }, 
        {
            "location": "/myopenaps/alias/#priming-and-site-changes", 
            "text": "Loop uses event history and reservoir levels to determine how much insulin has actually been delivered through the pump, and correspondingly the Insulin On Board (IOB).   If you manually prime your tubing WITHOUT changing reservoirs , Loop will detect that prime as an insulin delivery and count it as IOB.  Therefore, here are some suggestions for priming, set changes, and reservoir changes with Loop in mind.", 
            "title": "Priming and Site Changes"
        }, 
        {
            "location": "/myopenaps/alias/#site-changes", 
            "text": "If you change sites and increase reservoir volume (i.e., start a new reservoir), don't worry. So long as you are putting in a reservoir that has more insulin than the old one, IOB will be accurate in Loop.  When Loop sees a rewind and an increase in reservoir volume, it will not count any tubing primes as IOB.    If you change sites but  do NOT increase reservoir volume  (i.e., you keep existing reservoir going), you will need to go into Loop's reservoir history and delete 30 minutes of continuous reservoir history including the prime event.  By deleting 30 minutes of reservoir history, Loop will use Event History to determine insulin deliveries and IOB. If you cannot get the prime to clear from the IOB, operate in Open Loop mode until the insulin action duration time has passed.  Deleting history is done by:  (1)  clicking on the Insulin Delivery Chart    (2)  selecting the Reservoir history screen    (3)  swiping to delete individual reservoir readings    (4)  delete at least 30 minutes of reservoir readings, including the readings that involved priming events", 
            "title": "Site Changes"
        }, 
        {
            "location": "/myopenaps/alias/#prime-menu", 
            "text": "When you finish priming on a Medtronic pump, please make sure to complete the priming menu.  In other words, finish all the prompts so that you get back to the (nearly blank) normal Medtronic pump screen.  If you don't finish the priming menu, the pump will not begin basal insulin delivery, nor does it alarm.  It is equivalent to the pump being suspended...but you won't be able to see any indication of that in Nightscout as a remotely monitoring parent.  Loop will not detect the prime screen issue and will keep sending temp basal messages...but the pump won't enact them.  On Loop, you could notice it by the active IOB continually going down and then eventually negative IOB, as the basal is not delivered and the reservoir level remains constant.  However, the temp basal graph will still show the bars from the temp basal commands loop has been sending.  So, remember to finish those prime menu screens through to the end.", 
            "title": "Prime Menu"
        }, 
        {
            "location": "/myopenaps/troubleshooting/", 
            "text": "Apple Watch\n\n\n\n\n\n\n\n\n\nIf you add an Apple Watch after building Loop, you will need to pair your watch to your iPhone and then rebuild Loop to enable the Loop watch app to show up as an available watch app.\n\n\nLoop is currently supported with all released versions of the Apple Watch and Apple Watch OS3.  Cool factor is increased since the Loop user can directly enter carbs and boluses straight from the watch, without needing to access the iPhone.\n\n\nThe carb and bolus screen on the watch can be accessed by force touching the watch (hard press).   A loop complication exists to show BG on the watchface but the update rate is limited to ~30mins due to limitations imposed by apple to increase battery life. If constant, real-time monitoring is desired, you should use the Loop app as the main screen. This can be achieved by setting the watch to always show last opened app on wake. Loop will always have to be the last app opened for this to work.", 
            "title": "Troubleshoot"
        }, 
        {
            "location": "/myopenaps/troubleshooting/#apple-watch", 
            "text": "If you add an Apple Watch after building Loop, you will need to pair your watch to your iPhone and then rebuild Loop to enable the Loop watch app to show up as an available watch app.  Loop is currently supported with all released versions of the Apple Watch and Apple Watch OS3.  Cool factor is increased since the Loop user can directly enter carbs and boluses straight from the watch, without needing to access the iPhone.  The carb and bolus screen on the watch can be accessed by force touching the watch (hard press).   A loop complication exists to show BG on the watchface but the update rate is limited to ~30mins due to limitations imposed by apple to increase battery life. If constant, real-time monitoring is desired, you should use the Loop app as the main screen. This can be achieved by setting the watch to always show last opened app on wake. Loop will always have to be the last app opened for this to work.", 
            "title": "Apple Watch"
        }, 
        {
            "location": "/use/overview/", 
            "text": "Loop Displays\n\n\nThis section of the docs will go over the Loop displays available and what information they offer.  Information about your Loop's actions (or inactions) can often be found simply by looking at the visuals presented in the app.  \n\n\nStatus Screen\n\n\nThe Status Screen is the main root navigation screen in Loop.  It is broken up into 3 main display areas; Heads Up display (HUD), Charts, and Toolbar. The HUD is the top area of the screen.  This shows status of the last time loop ran, current BG Reading, current temp-basal, current insulin reservoir volume remaining, and current pump percentage battery remaining. The next area is the charting area. This includes, glucose trend and prediction, Active Insulin, Insulin Delivery, and Carbohydrates.  The final display area is the toolbar which has buttons for Carbohydrate, Insulin Bolus, Workout Mode, and Settings.\n\n\n\n\nHeads Up Display\n\n\nLoop Status\n\n\nThe Loop Status is the colored circle in the upper left corner of the main Loop display.  There are four colors that are typically displayed.  \n\n\nA grey circle indicates the Loop is warming up and hasn\u2019t yet completed its initial loop.  When the Loop is first activated, it may take about 15-20 minutes to complete the first Loop, and the grey circle will be displayed.  It needs CGM data to be gathered, so be patient.  When it finally completes its first loop, the circle will turn green.  If you can't get the loop to turn grey, try reading the Use guide for Green Loop.\n\n\nA green circle indicates the Loop has been successfully completed within the last 5 minutes.  The time since the loop last completed will be displayed under the circle.\n\n\nA yellow circle indicates the Loop has not completed in the last 5-15 minutes.  It is not unusual to have a few instances of yellow circles throughout a day of looping.  They can be caused by temporarily getting too far away from RileyLink or iPhone (more than about 3-10 feet depending on conditions), CGM failing to read or being in ???, radio frequency \u201cnoise\u201d interference, and such.  Generally, most yellow circles will self-resolve without needing any special troubleshooting. \n\n\nA red circle indicates the Loop has not completed in over 15 minutes.  This is not a typical state, and you should troubleshoot why Loop is not completing.  Please review the Use sections' Green Loop page for troubleshooting tips.   If you have Nightscout integration, you can also use the Loop Pill to help troubleshoot.  Clicking on the red circle will also popup the last error message to help guide your troubleshooting.\n\n\nWhen the circle is notched and not complete, that means the Loop is operating in \u201copen loop\u201d mode.  When the \u201cclosed loop\u201d setting is turned on, the loop status will show a completed circle.\n\n\nThe loop status circle will pulse slightly when RileyLink is giving the pump a new temp basal setting.  The pulsing will stop when the temp basal has been set by the pump.\n\n\nGlucose\n\n\nThe current BG reading from the CGM will display, including trending arrow and time the reading was taken.  If the BG is being read straight from the G5 transmitter or G4 receiver, no special symbols will appear.  \n\n\nIf the BG is being read from the Dexcom Share Servers, a small cloud icon will be in the corner of the BG reading.  Internet access is required to run in this mode.\n\n\nWhen you first start Loop, there may be a small yellow alert next to the BG.  This should go away within a short period of time (around 5 minutes or less).  If the yellow alert remains, something is wrong with fetching BG data.  You can try restarting the Loop app (double tap home button, upswipe on app to close) to see if BG data will resume.  Loop will not work when a yellow BG alert is shown (*note G5 exception below).\n\n\n*For Dexcom G5 users, a yellow alert will appear when a calibration is needed.  The alert will clear once the calibration is given, but typically Loop will work IF the yellow alert is only for a needed G5 calibration. \n\n\nTemp Basal\n\n\nThe temp basal will display the enacted temp basal change relative to the scheduled basal.  So if the scheduled basal was 1.0 units per hour and Loop has set a temp basal of 0.2 units per hour, the temp basal icon will display -0.8 U (as shown in the graphic to the left).\n\n\nReservoir\n\n\nThe reservoir icon will remain grey and plain until insulin volume decreases.  At 25% reservoir volume remaining, the reservoir icon will turn yellow.  At 10% reservoir volume remaining, the reservoir icon will turn red.  The remaining units will be displayed when it gets to these lower thresholds.\n\n\nBattery\n\n\nFor x23, x54 pumps, the battery icon will show 100/75/50/25% increments just as the pump does.  As the battery level decreases, the icon will turn from grey to yellow to red.  For x22 pumps, the battery icon will read discrete % values.  \n\n\nCharts\n\n\nThere are several charts that help you navigate your Loop actions.  Clicking on each of the charts will also open up additional information.\n\n\nGlucose Chart\n\n\n\n\n\n\n\n\n\nThe glucose chart displays BG values in your preferred units. The vertical scale of the chart is calculated on the fly by Loop to be as useful as possible while including the highest and lowest readings in the chart.\n\n\nThe horizontal axis is set to go forward from the current time until your DIA forward (so you can see what Loop eventually thinks BG will be). It then goes back in time as far as it can based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time. If you would like to see further back in time you can use Nightscout or you can modify your Loop Graph hours (see the customizations available when you build your Loop app).\n\n\nThe target BG range is shown as a blue bar on the glucose chart.  If you have a single-value target BG range (such as 100-100 mg/dl), no blue range will appear.\n\n\nThe eventual BG displayed in the right side of the chart does NOT take into account a recently enacted temp basal.  In other words, if you are above BG target and Loop just enacted a high temp basal to help, the eventual BG does not reflect the expected lowering of BGs that would result from that recently enacted temp basal.  Loop waits until the insulin has actually been delivery before it \"uses\" the insulin in its calculations for BG impacts.  If you suspended your pump or had a \"no delivery\" alarm shortly after the temp basal was started, you would want that accurately reflected in the insulin on board and associated eventual BG.\n\n\nIf you tap on the Glucose Chart itself, it will open the Predicted Glucose chart\n\n\nPredicted Glucose Chart\n\n\n\n\n\n\n\n\n\nThe predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual BG. The graph at the top of this view will match your Glucose Chart. Below this chart you will see a very detailed explanation of all of the variables that Loop takes into account in predicting your future BG value. Each of those effects (including Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction) includes details of the calculation use. You can tap on any of the entries to turn them off and on for visualization. The resulting changes can be viewed by the changes in the dashed lines.\n\n\nAdditionally, at the bottom of this screen there is a setting to \u201cEnable Retrospective Correction\u201d. By enabling it, it will more aggressively increase or decrease basal delivery when BG movement doesn\u2019t match the carbohydrates and insulin-based model.  You can read more about this setting in the Algorithm section of these docs.\n\n\nActive Insulin Chart\n\n\n\n\n\n\n\n\n\nThe Active Insulin chart displays the total insulin contribution from both temp basals and boluses.  Active IOB can be either positive and negative IOB.  Negative IOB results from the suspension of normally scheduled basals.  The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered).\n\n\nInsulin Delivery Chart\n\n\n\n\n\n\n\n\n\nThe Insulin Delivery chart displays a history of the temp basals enacted by Loop.  The display is relative to the scheduled basal rates entered in the Loop settings.  So, a rate displayed in this chart as \u201c+0 units\u201d would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate.  Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time).  The total insulin delivered, including all basals and boluses, is given in the upper right corner of the graph.\n\n\nPlease be patient for a bolus delivery to appear.  There is a lag time from when you press the \u201cdeliver\u201d bolus button.  The insulin has to be delivered and then the pump reservoir needs to be read to confirm delivery, before the triangle will appear and IOB will be added.  On large boluses, the time to actually deliver the bolus may be several minutes.\n\n\nReservoir and Event History\n\n\n\n\n\n\n\n\n\nClicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history.  The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight).  There are two viewing options; Reservoir or Event History.  \n\n\nLoop\u2019s default is to use actual reservoir volumes for determining the insulin delivered.  When there is a gap of 30 minutes or more in reservoir history, Loop classifies these readings as \u201cnot continuous\u201d and therefore unreliable for the purposes of determining insulin deliveries.  Therefore in those instances, Loop will rely on the event histories to determine insulin deliveries during the non-continuous times.  \n\n\nThe reservoir volume history can also be intentionally edited to cause a \u201cnot continuous\u201d instance.  Please see the Priming and Site Changes section of these docs for important information regarding IOB considerations during those activities, and how a \u201cnot continuous\u201d edit may help resolve erroneous IOB.\n\n\nCarbohydrate Chart\n\n\n\n\n\n\n\n\n\nThe Carbohydrate chart displays the carbs used by Loop to predict BG changes.  The active COB is displayed in the upper right corner of the chart.  Clicking on the chart will open the Carb Entries history and you can edit any previous entries through that screen.\n\n\nTool Bar\n\n\n\n\n\n\n\n\n\nThe tool bar is where your inputs to the Loop behavior take place.  The individual components of the tool bar are discussed in further detail in separate sections of the docs.", 
            "title": "Overview"
        }, 
        {
            "location": "/use/overview/#loop-displays", 
            "text": "This section of the docs will go over the Loop displays available and what information they offer.  Information about your Loop's actions (or inactions) can often be found simply by looking at the visuals presented in the app.", 
            "title": "Loop Displays"
        }, 
        {
            "location": "/use/overview/#status-screen", 
            "text": "The Status Screen is the main root navigation screen in Loop.  It is broken up into 3 main display areas; Heads Up display (HUD), Charts, and Toolbar. The HUD is the top area of the screen.  This shows status of the last time loop ran, current BG Reading, current temp-basal, current insulin reservoir volume remaining, and current pump percentage battery remaining. The next area is the charting area. This includes, glucose trend and prediction, Active Insulin, Insulin Delivery, and Carbohydrates.  The final display area is the toolbar which has buttons for Carbohydrate, Insulin Bolus, Workout Mode, and Settings.", 
            "title": "Status Screen"
        }, 
        {
            "location": "/use/overview/#heads-up-display", 
            "text": "", 
            "title": "Heads Up Display"
        }, 
        {
            "location": "/use/overview/#loop-status", 
            "text": "The Loop Status is the colored circle in the upper left corner of the main Loop display.  There are four colors that are typically displayed.    A grey circle indicates the Loop is warming up and hasn\u2019t yet completed its initial loop.  When the Loop is first activated, it may take about 15-20 minutes to complete the first Loop, and the grey circle will be displayed.  It needs CGM data to be gathered, so be patient.  When it finally completes its first loop, the circle will turn green.  If you can't get the loop to turn grey, try reading the Use guide for Green Loop.  A green circle indicates the Loop has been successfully completed within the last 5 minutes.  The time since the loop last completed will be displayed under the circle.  A yellow circle indicates the Loop has not completed in the last 5-15 minutes.  It is not unusual to have a few instances of yellow circles throughout a day of looping.  They can be caused by temporarily getting too far away from RileyLink or iPhone (more than about 3-10 feet depending on conditions), CGM failing to read or being in ???, radio frequency \u201cnoise\u201d interference, and such.  Generally, most yellow circles will self-resolve without needing any special troubleshooting.   A red circle indicates the Loop has not completed in over 15 minutes.  This is not a typical state, and you should troubleshoot why Loop is not completing.  Please review the Use sections' Green Loop page for troubleshooting tips.   If you have Nightscout integration, you can also use the Loop Pill to help troubleshoot.  Clicking on the red circle will also popup the last error message to help guide your troubleshooting.  When the circle is notched and not complete, that means the Loop is operating in \u201copen loop\u201d mode.  When the \u201cclosed loop\u201d setting is turned on, the loop status will show a completed circle.  The loop status circle will pulse slightly when RileyLink is giving the pump a new temp basal setting.  The pulsing will stop when the temp basal has been set by the pump.", 
            "title": "Loop Status"
        }, 
        {
            "location": "/use/overview/#glucose", 
            "text": "The current BG reading from the CGM will display, including trending arrow and time the reading was taken.  If the BG is being read straight from the G5 transmitter or G4 receiver, no special symbols will appear.    If the BG is being read from the Dexcom Share Servers, a small cloud icon will be in the corner of the BG reading.  Internet access is required to run in this mode.  When you first start Loop, there may be a small yellow alert next to the BG.  This should go away within a short period of time (around 5 minutes or less).  If the yellow alert remains, something is wrong with fetching BG data.  You can try restarting the Loop app (double tap home button, upswipe on app to close) to see if BG data will resume.  Loop will not work when a yellow BG alert is shown (*note G5 exception below).  *For Dexcom G5 users, a yellow alert will appear when a calibration is needed.  The alert will clear once the calibration is given, but typically Loop will work IF the yellow alert is only for a needed G5 calibration.", 
            "title": "Glucose"
        }, 
        {
            "location": "/use/overview/#temp-basal", 
            "text": "The temp basal will display the enacted temp basal change relative to the scheduled basal.  So if the scheduled basal was 1.0 units per hour and Loop has set a temp basal of 0.2 units per hour, the temp basal icon will display -0.8 U (as shown in the graphic to the left).", 
            "title": "Temp Basal"
        }, 
        {
            "location": "/use/overview/#reservoir", 
            "text": "The reservoir icon will remain grey and plain until insulin volume decreases.  At 25% reservoir volume remaining, the reservoir icon will turn yellow.  At 10% reservoir volume remaining, the reservoir icon will turn red.  The remaining units will be displayed when it gets to these lower thresholds.", 
            "title": "Reservoir"
        }, 
        {
            "location": "/use/overview/#battery", 
            "text": "For x23, x54 pumps, the battery icon will show 100/75/50/25% increments just as the pump does.  As the battery level decreases, the icon will turn from grey to yellow to red.  For x22 pumps, the battery icon will read discrete % values.", 
            "title": "Battery"
        }, 
        {
            "location": "/use/overview/#charts", 
            "text": "There are several charts that help you navigate your Loop actions.  Clicking on each of the charts will also open up additional information.", 
            "title": "Charts"
        }, 
        {
            "location": "/use/overview/#glucose-chart", 
            "text": "The glucose chart displays BG values in your preferred units. The vertical scale of the chart is calculated on the fly by Loop to be as useful as possible while including the highest and lowest readings in the chart.  The horizontal axis is set to go forward from the current time until your DIA forward (so you can see what Loop eventually thinks BG will be). It then goes back in time as far as it can based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time. If you would like to see further back in time you can use Nightscout or you can modify your Loop Graph hours (see the customizations available when you build your Loop app).  The target BG range is shown as a blue bar on the glucose chart.  If you have a single-value target BG range (such as 100-100 mg/dl), no blue range will appear.  The eventual BG displayed in the right side of the chart does NOT take into account a recently enacted temp basal.  In other words, if you are above BG target and Loop just enacted a high temp basal to help, the eventual BG does not reflect the expected lowering of BGs that would result from that recently enacted temp basal.  Loop waits until the insulin has actually been delivery before it \"uses\" the insulin in its calculations for BG impacts.  If you suspended your pump or had a \"no delivery\" alarm shortly after the temp basal was started, you would want that accurately reflected in the insulin on board and associated eventual BG.  If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart", 
            "title": "Glucose Chart"
        }, 
        {
            "location": "/use/overview/#predicted-glucose-chart", 
            "text": "The predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual BG. The graph at the top of this view will match your Glucose Chart. Below this chart you will see a very detailed explanation of all of the variables that Loop takes into account in predicting your future BG value. Each of those effects (including Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction) includes details of the calculation use. You can tap on any of the entries to turn them off and on for visualization. The resulting changes can be viewed by the changes in the dashed lines.  Additionally, at the bottom of this screen there is a setting to \u201cEnable Retrospective Correction\u201d. By enabling it, it will more aggressively increase or decrease basal delivery when BG movement doesn\u2019t match the carbohydrates and insulin-based model.  You can read more about this setting in the Algorithm section of these docs.", 
            "title": "Predicted Glucose Chart"
        }, 
        {
            "location": "/use/overview/#active-insulin-chart", 
            "text": "The Active Insulin chart displays the total insulin contribution from both temp basals and boluses.  Active IOB can be either positive and negative IOB.  Negative IOB results from the suspension of normally scheduled basals.  The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered).", 
            "title": "Active Insulin Chart"
        }, 
        {
            "location": "/use/overview/#insulin-delivery-chart", 
            "text": "The Insulin Delivery chart displays a history of the temp basals enacted by Loop.  The display is relative to the scheduled basal rates entered in the Loop settings.  So, a rate displayed in this chart as \u201c+0 units\u201d would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate.  Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time).  The total insulin delivered, including all basals and boluses, is given in the upper right corner of the graph.  Please be patient for a bolus delivery to appear.  There is a lag time from when you press the \u201cdeliver\u201d bolus button.  The insulin has to be delivered and then the pump reservoir needs to be read to confirm delivery, before the triangle will appear and IOB will be added.  On large boluses, the time to actually deliver the bolus may be several minutes.", 
            "title": "Insulin Delivery Chart"
        }, 
        {
            "location": "/use/overview/#reservoir-and-event-history", 
            "text": "Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history.  The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight).  There are two viewing options; Reservoir or Event History.    Loop\u2019s default is to use actual reservoir volumes for determining the insulin delivered.  When there is a gap of 30 minutes or more in reservoir history, Loop classifies these readings as \u201cnot continuous\u201d and therefore unreliable for the purposes of determining insulin deliveries.  Therefore in those instances, Loop will rely on the event histories to determine insulin deliveries during the non-continuous times.    The reservoir volume history can also be intentionally edited to cause a \u201cnot continuous\u201d instance.  Please see the Priming and Site Changes section of these docs for important information regarding IOB considerations during those activities, and how a \u201cnot continuous\u201d edit may help resolve erroneous IOB.", 
            "title": "Reservoir and Event History"
        }, 
        {
            "location": "/use/overview/#carbohydrate-chart", 
            "text": "The Carbohydrate chart displays the carbs used by Loop to predict BG changes.  The active COB is displayed in the upper right corner of the chart.  Clicking on the chart will open the Carb Entries history and you can edit any previous entries through that screen.", 
            "title": "Carbohydrate Chart"
        }, 
        {
            "location": "/use/overview/#tool-bar", 
            "text": "The tool bar is where your inputs to the Loop behavior take place.  The individual components of the tool bar are discussed in further detail in separate sections of the docs.", 
            "title": "Tool Bar"
        }, 
        {
            "location": "/use/access/", 
            "text": "Time Changes with Loop\n\n\nLoop is built to fully work across time zone and daylight savings time changes as long as a few basic instructions are followed.\n\n\niPhone\n\n\nLoop will assume your iPhone's time (UTC, not time zone) is always correct. This theoretically may not be the case if a nearby cell tower is improperly configured (though there are likely resilience mechanisms in iOS to handle this). Automatic time setting can always be disabled in Settings.\n\n\nMinimed Pump and CGM\n\n\nThe Minimed pump doesn't expose a universal clock, instead it exposes the components of a date (YMDHIS). It has no concept of political time zones, and just continues to increment its components on schedule. Therefore, Loop assumes that the pump's date, until changed, remains at a fixed offset from UTC.\n\n\nThat offset is stored by Loop the first time the pump ID is changed, and every time the pump's time is changed from the RileyLink Settings screen.\n\n\nDo not change the pump's time directly on the pump.\n Instead, always use Loop's RileyLink \"Change Pump Time\".\n\n\n\n\n\n\n\n\n\nDexcom CGM\n\n\nNo particular input is needed on your part for Loop to work with Dexcom CGM data. All times are UTC.  However, at time changes you may want to manually change your G4 receiver time setting just so the time visually appears correct when you are viewing the screen.\n\n\nTraveling across time zones and daylight savings\n\n\nWhen traveling, there is no urgency to update the pump's time to match the wall-clocks in your geography. Configuration schedules\u2014basal rates, target ranges, carb ratios, and insulin sensitivities\u2014will all remain in the pump's time zone. The app's graphs and status will always display in the time zone of the iPhone, and Loop will understand the difference in offset between the two, highlighting it when attempting to change configuration schedules.\n\n\nWhen you're ready to update the pump's time, simply use the Loop's RileyLink \"Change Pump Time\". This will also shift your configuration schedules to the current time zone.", 
            "title": "Login to rig"
        }, 
        {
            "location": "/use/access/#time-changes-with-loop", 
            "text": "Loop is built to fully work across time zone and daylight savings time changes as long as a few basic instructions are followed.", 
            "title": "Time Changes with Loop"
        }, 
        {
            "location": "/use/access/#iphone", 
            "text": "Loop will assume your iPhone's time (UTC, not time zone) is always correct. This theoretically may not be the case if a nearby cell tower is improperly configured (though there are likely resilience mechanisms in iOS to handle this). Automatic time setting can always be disabled in Settings.", 
            "title": "iPhone"
        }, 
        {
            "location": "/use/access/#minimed-pump-and-cgm", 
            "text": "The Minimed pump doesn't expose a universal clock, instead it exposes the components of a date (YMDHIS). It has no concept of political time zones, and just continues to increment its components on schedule. Therefore, Loop assumes that the pump's date, until changed, remains at a fixed offset from UTC.  That offset is stored by Loop the first time the pump ID is changed, and every time the pump's time is changed from the RileyLink Settings screen.  Do not change the pump's time directly on the pump.  Instead, always use Loop's RileyLink \"Change Pump Time\".", 
            "title": "Minimed Pump and CGM"
        }, 
        {
            "location": "/use/access/#dexcom-cgm", 
            "text": "No particular input is needed on your part for Loop to work with Dexcom CGM data. All times are UTC.  However, at time changes you may want to manually change your G4 receiver time setting just so the time visually appears correct when you are viewing the screen.", 
            "title": "Dexcom CGM"
        }, 
        {
            "location": "/use/access/#traveling-across-time-zones-and-daylight-savings", 
            "text": "When traveling, there is no urgency to update the pump's time to match the wall-clocks in your geography. Configuration schedules\u2014basal rates, target ranges, carb ratios, and insulin sensitivities\u2014will all remain in the pump's time zone. The app's graphs and status will always display in the time zone of the iPhone, and Loop will understand the difference in offset between the two, highlighting it when attempting to change configuration schedules.  When you're ready to update the pump's time, simply use the Loop's RileyLink \"Change Pump Time\". This will also shift your configuration schedules to the current time zone.", 
            "title": "Traveling across time zones and daylight savings"
        }, 
        {
            "location": "/use/openaps-pill/", 
            "text": "Temp Basal Adjustments\n\n\nIf blood glucose is predicted to stray outside of the desired target range, Loop will adjust the basal rate temporarily in an attempt to keep actual blood glucose in range.  To illustrate how it does this, we\u2019ll go through a few examples.\n\n\nEventual BG Above Target Range\n\n\n\n\nWhen eventual BG is predicted to go above the current target range, Loop will calculate a delta from eventual bg to the midpoint of the target range.  Using the currently scheduled insulin sensitivity factor, loop calculates a temporary basal rate above your currently scheduled basal rate that would deliver, over 30 minutes, enough insulin to bring glucose levels back into range, capped at the max basal rate.\n\n\nEventual BG Below Target Range\n\n\n\n\nWhen eventual BG is predicted to go below the current target range, Loop will calculate a delta from eventual bg to the midpoint of the target range.  Using the currently scheduled insulin sensitivity factor, loop calculates a temporary basal rate below your currently scheduled basal rate that would reduce insulin delivery, over 30 minutes, enough to bring glucose levels back into range.  It will reduce delivery to zero if needed.\n\n\nTemporary Excursion Below Range\n\n\n\n\nIf the prediction has a temporary excursion below range, but Eventual BG is in range, Loop will revert to using your normal basal schedule, as long as Minimum BG is above the guard.\n\n\nMinimum BG Below Minimum BG Guard\n\n\n\n\nIf Minimum BG drops below Minimum BG Guard, Loop will zero temp your pump regardless of where Eventual BG is.", 
            "title": "OpenAPS pill"
        }, 
        {
            "location": "/use/openaps-pill/#temp-basal-adjustments", 
            "text": "If blood glucose is predicted to stray outside of the desired target range, Loop will adjust the basal rate temporarily in an attempt to keep actual blood glucose in range.  To illustrate how it does this, we\u2019ll go through a few examples.", 
            "title": "Temp Basal Adjustments"
        }, 
        {
            "location": "/use/openaps-pill/#eventual-bg-above-target-range", 
            "text": "When eventual BG is predicted to go above the current target range, Loop will calculate a delta from eventual bg to the midpoint of the target range.  Using the currently scheduled insulin sensitivity factor, loop calculates a temporary basal rate above your currently scheduled basal rate that would deliver, over 30 minutes, enough insulin to bring glucose levels back into range, capped at the max basal rate.", 
            "title": "Eventual BG Above Target Range"
        }, 
        {
            "location": "/use/openaps-pill/#eventual-bg-below-target-range", 
            "text": "When eventual BG is predicted to go below the current target range, Loop will calculate a delta from eventual bg to the midpoint of the target range.  Using the currently scheduled insulin sensitivity factor, loop calculates a temporary basal rate below your currently scheduled basal rate that would reduce insulin delivery, over 30 minutes, enough to bring glucose levels back into range.  It will reduce delivery to zero if needed.", 
            "title": "Eventual BG Below Target Range"
        }, 
        {
            "location": "/use/openaps-pill/#temporary-excursion-below-range", 
            "text": "If the prediction has a temporary excursion below range, but Eventual BG is in range, Loop will revert to using your normal basal schedule, as long as Minimum BG is above the guard.", 
            "title": "Temporary Excursion Below Range"
        }, 
        {
            "location": "/use/openaps-pill/#minimum-bg-below-minimum-bg-guard", 
            "text": "If Minimum BG drops below Minimum BG Guard, Loop will zero temp your pump regardless of where Eventual BG is.", 
            "title": "Minimum BG Below Minimum BG Guard"
        }, 
        {
            "location": "/use/papertrail/", 
            "text": "Bolus Recommendations\n\n\nLoop also uses the forecast to generate recommendations for bolus amounts. Carbs are not directly used in bolus calculations, but rather indirectly through the forecast. After carbs are entered, the forecast is updated using the carb amounts, and then a recommendation is generated using the forecast.\n\n\nThe forecast used for bolusing is slightly different than the forecast used for adjust temp basals in that positive BG momentum is not included.\n\n\nEventual BG Above Target Range\n\n\n\n\nA bolus recommendation is given if Eventual BG is above Target Range.  The delta between Eventual BG and the top of the Target Range is used, along with your current Insulin Sensitivity to calculate the recommendation.", 
            "title": "Papertrail"
        }, 
        {
            "location": "/use/papertrail/#bolus-recommendations", 
            "text": "Loop also uses the forecast to generate recommendations for bolus amounts. Carbs are not directly used in bolus calculations, but rather indirectly through the forecast. After carbs are entered, the forecast is updated using the carb amounts, and then a recommendation is generated using the forecast.  The forecast used for bolusing is slightly different than the forecast used for adjust temp basals in that positive BG momentum is not included.", 
            "title": "Bolus Recommendations"
        }, 
        {
            "location": "/use/papertrail/#eventual-bg-above-target-range", 
            "text": "A bolus recommendation is given if Eventual BG is above Target Range.  The delta between Eventual BG and the top of the Target Range is used, along with your current Insulin Sensitivity to calculate the recommendation.", 
            "title": "Eventual BG Above Target Range"
        }, 
        {
            "location": "/use/carbs/", 
            "text": "Carb Entry\n\n\n\n\n\n\n\n\n\nNew Carbs\n\n\n\n\n\n\n\n\n\nNew carb entries can be made by using the carb tool (green fork) in the toolbar at the bottom of the status screen.  Simply enter the number of carbs to be eaten in the \namount consumed\n line.  By default, the carb absorption time for a new carb entry will correspond to the taco icon.  If you haven't made any customizations to this during your Loop build, then the default carb absorption time will display as 180 mins.  The default time entry is for the current time and date.  Clicking on the \nabsorption time\n will bring up the three carb icons and allow you to edit the carb absorption time.\n\n\nYou do not have to enter all carbs for a meal at the same absoption or eating time.  If you want to enter some of the meal's carbs as faster, and some slower, you can log the meal over several individual carb entries.\n\n\nPressing the \nSave\n button in the top right corner will save the carbs into the Loop app and bring up the bolus wizard (if you are above your Minimum BG guard).\n\n\nCarb Absorption Time\n\n\n\n\n\n\n\n\n\nThese default carb absorption times are average representations for high, medium, and low glycemic index foods.  Your diabetes may vary, so please adjust if you suspect your carb absorption times might need changing.  Typically, if you find Loop is behaving differently than you\u2019d expect around meals (lots of early or late high temp basals/suspensions leading to unexpected post-meal lows/highs), you may need to change carb absorption time.  Many kids have faster carb absorption times than adults.  Find what works for you.\n\n\nPrebolus\n\n\nYou can let Loop know you are going to prebolus a meal by adjusting the time of the carb entry on the \u201cdate\u201d line of the carb entry.  If you are prebolusing by 20 minutes, simply add 20 minutes to the carb entry time.  \n\n\nEdit Carbs\n\n\n\n\n\n\n\n\n\nClicking on the Carbohydrate chart in the Loop's main status screen will open the carb entry history and previous entries can be modified or deleted through this screen.  If you need to change a prebolus time, add carbs, adjust carb absorption times (even mid-meal), just go into that edit screen and tap on the carb entry you'd like to edit.  Pretty straight-forward.\n\n\nThird Party Apps\n\n\nIf you use a 3rd party app, such as My Fitness Pal, to enter and track carbs and that app also stores the carb values in HealthKit, Loop will read those values from Apple HealthKit and display and use them in calculating temp basal rates. Entries from 3rd party apps can not be removed from within Loop.  You will have to edit them in the third party app, or from the Health app. Because of this potential for confusion, it is recommended to turn off Loop's ability to read other apps' carbohydrate data from HealthKit. You are asked if you want to enable this when Loop is first installed. After installation, you can also go to the Settings App -\n Privacy -\n Health -\n Loop and turn off \nRead Data for Carbohydrates\n.\n\n\nAvoid Double Carb Entries\n\n\nWhen you press \nSave\n for a carb entry, Loop will consider that carb entry saved and use it for calculating temp basals and recommended boluses.  Be cautious about repeated attempts to enter the same meal...Loop will continue to save the carb entries UNLESS you push cancel.  Simply not bolusing for the meal does not cancel the carb entry.", 
            "title": "Carb & Bolus"
        }, 
        {
            "location": "/use/carbs/#carb-entry", 
            "text": "", 
            "title": "Carb Entry"
        }, 
        {
            "location": "/use/carbs/#new-carbs", 
            "text": "New carb entries can be made by using the carb tool (green fork) in the toolbar at the bottom of the status screen.  Simply enter the number of carbs to be eaten in the  amount consumed  line.  By default, the carb absorption time for a new carb entry will correspond to the taco icon.  If you haven't made any customizations to this during your Loop build, then the default carb absorption time will display as 180 mins.  The default time entry is for the current time and date.  Clicking on the  absorption time  will bring up the three carb icons and allow you to edit the carb absorption time.  You do not have to enter all carbs for a meal at the same absoption or eating time.  If you want to enter some of the meal's carbs as faster, and some slower, you can log the meal over several individual carb entries.  Pressing the  Save  button in the top right corner will save the carbs into the Loop app and bring up the bolus wizard (if you are above your Minimum BG guard).", 
            "title": "New Carbs"
        }, 
        {
            "location": "/use/carbs/#carb-absorption-time", 
            "text": "These default carb absorption times are average representations for high, medium, and low glycemic index foods.  Your diabetes may vary, so please adjust if you suspect your carb absorption times might need changing.  Typically, if you find Loop is behaving differently than you\u2019d expect around meals (lots of early or late high temp basals/suspensions leading to unexpected post-meal lows/highs), you may need to change carb absorption time.  Many kids have faster carb absorption times than adults.  Find what works for you.", 
            "title": "Carb Absorption Time"
        }, 
        {
            "location": "/use/carbs/#prebolus", 
            "text": "You can let Loop know you are going to prebolus a meal by adjusting the time of the carb entry on the \u201cdate\u201d line of the carb entry.  If you are prebolusing by 20 minutes, simply add 20 minutes to the carb entry time.", 
            "title": "Prebolus"
        }, 
        {
            "location": "/use/carbs/#edit-carbs", 
            "text": "Clicking on the Carbohydrate chart in the Loop's main status screen will open the carb entry history and previous entries can be modified or deleted through this screen.  If you need to change a prebolus time, add carbs, adjust carb absorption times (even mid-meal), just go into that edit screen and tap on the carb entry you'd like to edit.  Pretty straight-forward.", 
            "title": "Edit Carbs"
        }, 
        {
            "location": "/use/carbs/#third-party-apps", 
            "text": "If you use a 3rd party app, such as My Fitness Pal, to enter and track carbs and that app also stores the carb values in HealthKit, Loop will read those values from Apple HealthKit and display and use them in calculating temp basal rates. Entries from 3rd party apps can not be removed from within Loop.  You will have to edit them in the third party app, or from the Health app. Because of this potential for confusion, it is recommended to turn off Loop's ability to read other apps' carbohydrate data from HealthKit. You are asked if you want to enable this when Loop is first installed. After installation, you can also go to the Settings App -  Privacy -  Health -  Loop and turn off  Read Data for Carbohydrates .", 
            "title": "Third Party Apps"
        }, 
        {
            "location": "/use/carbs/#avoid-double-carb-entries", 
            "text": "When you press  Save  for a carb entry, Loop will consider that carb entry saved and use it for calculating temp basals and recommended boluses.  Be cautious about repeated attempts to enter the same meal...Loop will continue to save the carb entries UNLESS you push cancel.  Simply not bolusing for the meal does not cancel the carb entry.", 
            "title": "Avoid Double Carb Entries"
        }, 
        {
            "location": "/use/priming/", 
            "text": "Priming and Site Changes\n\n\nLoop uses event history and reservoir levels to determine how much insulin has actually been delivered through the pump, and correspondingly the Insulin On Board (IOB).  \nIf you manually prime your tubing WITHOUT changing reservoirs\n, Loop will detect that prime as an insulin delivery and count it as IOB.  Therefore, here are some suggestions for priming, set changes, and reservoir changes with Loop in mind.\n\n\nSite Changes\n\n\n\n\n\n\nIf you change sites and increase reservoir volume (i.e., start a new reservoir), don't worry. So long as you are putting in a reservoir that has more insulin than the old one, IOB will be accurate in Loop.  When Loop sees a rewind and an increase in reservoir volume, it will not count any tubing primes as IOB.\n\n\n\n\n\n\nIf you change sites but \ndo NOT increase reservoir volume\n (i.e., you keep existing reservoir going), you will need to go into Loop's reservoir history and delete 30 minutes of continuous reservoir history including the prime event.  By deleting 30 minutes of reservoir history, Loop will use Event History to determine insulin deliveries and IOB. If you cannot get the prime to clear from the IOB, operate in Open Loop mode until the insulin action duration time has passed.  Deleting history is done by:\n\n\n(1)  clicking on the Insulin Delivery Chart  \n\n\n(2)  selecting the Reservoir history screen  \n\n\n(3)  swiping to delete individual reservoir readings  \n\n\n(4)  delete at least 30 minutes of reservoir readings, including the readings that involved priming events\n\n\n\n\n\n\nPrime Menu\n\n\nWhen you finish priming on a Medtronic pump, please make sure to complete the priming menu.  In other words, finish all the prompts so that you get back to the (nearly blank) normal Medtronic pump screen.  If you don't finish the priming menu, the pump will not begin basal insulin delivery, nor does it alarm.  It is equivalent to the pump being suspended...but you won't be able to see any indication of that in Nightscout as a remotely monitoring parent.  Loop will not detect the prime screen issue and will keep sending temp basal messages...but the pump won't enact them.  On Loop, you could notice it by the active IOB continually going down and then eventually negative IOB, as the basal is not delivered and the reservoir level remains constant.  However, the temp basal graph will still show the bars from the temp basal commands loop has been sending.\n\n\nSo, remember to finish those prime menu screens through to the end.", 
            "title": "Priming and Sites"
        }, 
        {
            "location": "/use/priming/#priming-and-site-changes", 
            "text": "Loop uses event history and reservoir levels to determine how much insulin has actually been delivered through the pump, and correspondingly the Insulin On Board (IOB).   If you manually prime your tubing WITHOUT changing reservoirs , Loop will detect that prime as an insulin delivery and count it as IOB.  Therefore, here are some suggestions for priming, set changes, and reservoir changes with Loop in mind.", 
            "title": "Priming and Site Changes"
        }, 
        {
            "location": "/use/priming/#site-changes", 
            "text": "If you change sites and increase reservoir volume (i.e., start a new reservoir), don't worry. So long as you are putting in a reservoir that has more insulin than the old one, IOB will be accurate in Loop.  When Loop sees a rewind and an increase in reservoir volume, it will not count any tubing primes as IOB.    If you change sites but  do NOT increase reservoir volume  (i.e., you keep existing reservoir going), you will need to go into Loop's reservoir history and delete 30 minutes of continuous reservoir history including the prime event.  By deleting 30 minutes of reservoir history, Loop will use Event History to determine insulin deliveries and IOB. If you cannot get the prime to clear from the IOB, operate in Open Loop mode until the insulin action duration time has passed.  Deleting history is done by:  (1)  clicking on the Insulin Delivery Chart    (2)  selecting the Reservoir history screen    (3)  swiping to delete individual reservoir readings    (4)  delete at least 30 minutes of reservoir readings, including the readings that involved priming events", 
            "title": "Site Changes"
        }, 
        {
            "location": "/use/priming/#prime-menu", 
            "text": "When you finish priming on a Medtronic pump, please make sure to complete the priming menu.  In other words, finish all the prompts so that you get back to the (nearly blank) normal Medtronic pump screen.  If you don't finish the priming menu, the pump will not begin basal insulin delivery, nor does it alarm.  It is equivalent to the pump being suspended...but you won't be able to see any indication of that in Nightscout as a remotely monitoring parent.  Loop will not detect the prime screen issue and will keep sending temp basal messages...but the pump won't enact them.  On Loop, you could notice it by the active IOB continually going down and then eventually negative IOB, as the basal is not delivered and the reservoir level remains constant.  However, the temp basal graph will still show the bars from the temp basal commands loop has been sending.  So, remember to finish those prime menu screens through to the end.", 
            "title": "Prime Menu"
        }, 
        {
            "location": "/use/exercise/", 
            "text": "Close Loop\n\n\nWhen you feel like you have learned what you need from open loop, you should be ready to switch to close loop.  There are several ways you can help make that transition as smooth as possible.  \n\n\nTiming\n\n\nMany people choose to transition to close loop in a step-wise fashion.  Starting close loop on weekends is an easier starting point so that you can minimize distractions (let's face it...you'll probably be staring at the Loop a lot for those first few days). Typically, people have an easier time transitioning to close loop for parts of their day that don't involve food...so nighttimes tend to be easier than daytimes to start.\n\n\nMaximum Basal Rate\n\n\nWhen you are first beginning to close loop, it is important to be conservative (low) in setting your maximum basal rate.  If your settings are incorrect in other areas (basal rates, carb absorption time, carb ratio, etc), Loop may enact incorrectly aggressive high temp basals.  Gradually increase your maximum basal rate as your comfort and confidence in Loop increase.  Typically, experienced closed loop users set their max basal rate no more than 3-4 times their average basal rate.  \n\n\nBG targets\n\n\nIf your basals, ISF, or carb ratios aren't set correctly, Loop may overshoot and leave you lower than expected (or with more IOB than you are comfortable with).  Setting your low BG target slightly higher can help prevent unexpected lows or high IOB as you adjust your settings.\n\n\nWatch the IOB\n\n\nWatch whether Loop accumulates positive or negative IOB while holding your BG steady when no food is present.  If you find that you are \"carrying\" positive or negative IOB consistently, you should review your settings to see if perhaps your basal or ISF needs adjusting.\n\n\nMeals\n\n\nMeals will likely be the hardest part of transitioning to close loop.  Starting with foods that you have a high comfort level with is a great idea.  If you have favorite meals that you know well (how high BGs usually go, how much to bolus, how to prebolus, etc), these would be a good starting point.  Watching when the Loop high temps or suspends basals (early vs late in meal) will really help you adjust to find your typical carb absorption times.  As a general idea, \nassuming other settings are accurate\n:\n\n\n\n\nearly high temps in a meal that leave you low after, you may need to shorten carb absorption time\n\n\nearly suspensions in a meal that leave you high after, you may need to lengthen carb absorption time\n\n\n\n\nThis is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.", 
            "title": "Exercise"
        }, 
        {
            "location": "/use/exercise/#close-loop", 
            "text": "When you feel like you have learned what you need from open loop, you should be ready to switch to close loop.  There are several ways you can help make that transition as smooth as possible.", 
            "title": "Close Loop"
        }, 
        {
            "location": "/use/exercise/#timing", 
            "text": "Many people choose to transition to close loop in a step-wise fashion.  Starting close loop on weekends is an easier starting point so that you can minimize distractions (let's face it...you'll probably be staring at the Loop a lot for those first few days). Typically, people have an easier time transitioning to close loop for parts of their day that don't involve food...so nighttimes tend to be easier than daytimes to start.", 
            "title": "Timing"
        }, 
        {
            "location": "/use/exercise/#maximum-basal-rate", 
            "text": "When you are first beginning to close loop, it is important to be conservative (low) in setting your maximum basal rate.  If your settings are incorrect in other areas (basal rates, carb absorption time, carb ratio, etc), Loop may enact incorrectly aggressive high temp basals.  Gradually increase your maximum basal rate as your comfort and confidence in Loop increase.  Typically, experienced closed loop users set their max basal rate no more than 3-4 times their average basal rate.", 
            "title": "Maximum Basal Rate"
        }, 
        {
            "location": "/use/exercise/#bg-targets", 
            "text": "If your basals, ISF, or carb ratios aren't set correctly, Loop may overshoot and leave you lower than expected (or with more IOB than you are comfortable with).  Setting your low BG target slightly higher can help prevent unexpected lows or high IOB as you adjust your settings.", 
            "title": "BG targets"
        }, 
        {
            "location": "/use/exercise/#watch-the-iob", 
            "text": "Watch whether Loop accumulates positive or negative IOB while holding your BG steady when no food is present.  If you find that you are \"carrying\" positive or negative IOB consistently, you should review your settings to see if perhaps your basal or ISF needs adjusting.", 
            "title": "Watch the IOB"
        }, 
        {
            "location": "/use/exercise/#meals", 
            "text": "Meals will likely be the hardest part of transitioning to close loop.  Starting with foods that you have a high comfort level with is a great idea.  If you have favorite meals that you know well (how high BGs usually go, how much to bolus, how to prebolus, etc), these would be a good starting point.  Watching when the Loop high temps or suspends basals (early vs late in meal) will really help you adjust to find your typical carb absorption times.  As a general idea,  assuming other settings are accurate :   early high temps in a meal that leave you low after, you may need to shorten carb absorption time  early suspensions in a meal that leave you high after, you may need to lengthen carb absorption time   This is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.", 
            "title": "Meals"
        }, 
        {
            "location": "/use/cgm/", 
            "text": "Close Loop\n\n\nWhen you feel like you have learned what you need from open loop, you should be ready to switch to close loop.  There are several ways you can help make that transition as smooth as possible.  \n\n\nTiming\n\n\nMany people choose to transition to close loop in a step-wise fashion.  Starting close loop on weekends is an easier starting point so that you can minimize distractions (let's face it...you'll probably be staring at the Loop a lot for those first few days). Typically, people have an easier time transitioning to close loop for parts of their day that don't involve food...so nighttimes tend to be easier than daytimes to start.\n\n\nMaximum Basal Rate\n\n\nWhen you are first beginning to close loop, it is important to be conservative (low) in setting your maximum basal rate.  If your settings are incorrect in other areas (basal rates, carb absorption time, carb ratio, etc), Loop may enact incorrectly aggressive high temp basals.  Gradually increase your maximum basal rate as your comfort and confidence in Loop increase.  Typically, experienced closed loop users set their max basal rate no more than 3-4 times their average basal rate.  \n\n\nBG targets\n\n\nIf your basals, ISF, or carb ratios aren't set correctly, Loop may overshoot and leave you lower than expected (or with more IOB than you are comfortable with).  Setting your low BG target slightly higher can help prevent unexpected lows or high IOB as you adjust your settings.\n\n\nWatch the IOB\n\n\nWatch whether Loop accumulates positive or negative IOB while holding your BG steady when no food is present.  If you find that you are \"carrying\" positive or negative IOB consistently, you should review your settings to see if perhaps your basal or ISF needs adjusting.\n\n\nMeals\n\n\nMeals will likely be the hardest part of transitioning to close loop.  Starting with foods that you have a high comfort level with is a great idea.  If you have favorite meals that you know well (how high BGs usually go, how much to bolus, how to prebolus, etc), these would be a good starting point.  Watching when the Loop high temps or suspends basals (early vs late in meal) will really help you adjust to find your typical carb absorption times.  As a general idea, \nassuming other settings are accurate\n:\n\n\n\n\nearly high temps in a meal that leave you low after, you may need to shorten carb absorption time\n\n\nearly suspensions in a meal that leave you high after, you may need to lengthen carb absorption time\n\n\n\n\nThis is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.", 
            "title": "CGM Tips"
        }, 
        {
            "location": "/use/cgm/#close-loop", 
            "text": "When you feel like you have learned what you need from open loop, you should be ready to switch to close loop.  There are several ways you can help make that transition as smooth as possible.", 
            "title": "Close Loop"
        }, 
        {
            "location": "/use/cgm/#timing", 
            "text": "Many people choose to transition to close loop in a step-wise fashion.  Starting close loop on weekends is an easier starting point so that you can minimize distractions (let's face it...you'll probably be staring at the Loop a lot for those first few days). Typically, people have an easier time transitioning to close loop for parts of their day that don't involve food...so nighttimes tend to be easier than daytimes to start.", 
            "title": "Timing"
        }, 
        {
            "location": "/use/cgm/#maximum-basal-rate", 
            "text": "When you are first beginning to close loop, it is important to be conservative (low) in setting your maximum basal rate.  If your settings are incorrect in other areas (basal rates, carb absorption time, carb ratio, etc), Loop may enact incorrectly aggressive high temp basals.  Gradually increase your maximum basal rate as your comfort and confidence in Loop increase.  Typically, experienced closed loop users set their max basal rate no more than 3-4 times their average basal rate.", 
            "title": "Maximum Basal Rate"
        }, 
        {
            "location": "/use/cgm/#bg-targets", 
            "text": "If your basals, ISF, or carb ratios aren't set correctly, Loop may overshoot and leave you lower than expected (or with more IOB than you are comfortable with).  Setting your low BG target slightly higher can help prevent unexpected lows or high IOB as you adjust your settings.", 
            "title": "BG targets"
        }, 
        {
            "location": "/use/cgm/#watch-the-iob", 
            "text": "Watch whether Loop accumulates positive or negative IOB while holding your BG steady when no food is present.  If you find that you are \"carrying\" positive or negative IOB consistently, you should review your settings to see if perhaps your basal or ISF needs adjusting.", 
            "title": "Watch the IOB"
        }, 
        {
            "location": "/use/cgm/#meals", 
            "text": "Meals will likely be the hardest part of transitioning to close loop.  Starting with foods that you have a high comfort level with is a great idea.  If you have favorite meals that you know well (how high BGs usually go, how much to bolus, how to prebolus, etc), these would be a good starting point.  Watching when the Loop high temps or suspends basals (early vs late in meal) will really help you adjust to find your typical carb absorption times.  As a general idea,  assuming other settings are accurate :   early high temps in a meal that leave you low after, you may need to shorten carb absorption time  early suspensions in a meal that leave you high after, you may need to lengthen carb absorption time   This is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.", 
            "title": "Meals"
        }, 
        {
            "location": "/use/offline/", 
            "text": "RileyLink\n\n\nTuning the Radio\n\n\nThe RileyLink communicates with the pump through radio frequency communications.  Numerous factors can influence how well those communications can function...interferences from other devices, temperature, physical blocking, etc.\n\n\nKnowing a little about the strength of the radio communications will help you troubleshoot Loop errors.  When you \nTune Radio Frequency\n in the Riley Link menu, it is testing for the strongest frequency to communicate with the pump.  Usually this frequency is pretty constant, but during temperature changes it may be that the best frequency is not the one currently set.  The tuning results also show which frequency is the strongest. \n\n\nFor example, in the screenshot below, the strength of the radio communications with the pump is shown by the last number of the tune.  Frequencies with tuning results of -99 means NO communications were established at that frequency.  RileyLink will use the strongest frequency tune for its pump communications.  In the screenshot, the best frequency returned a result of \n-37\n at a frequency of \n916.60 MHz\n, so RileyLink will set that \n916.60 MHz\n for its pump communications.\n\n\n\n\n\n\n\n\n\nGenerally, if you have tuning in the -90s, your RileyLink-pump communications will not work.  If you have tuning in the -80s, you may have periodic communication failures.  If your tuning is in the -70s or better, your communications should be pretty stable.  \n\n\nExperiment with your RileyLink by moving it closer and farther away from the pump.  Try putting it on the other side of your body, or put it in a purse.  Test the tuning results in real world situations that you think you'd be encountering, such as where you will have the RileyLink placed during overnight charging. Perform tunes at the various distances and situations.  This will help you understand how far from the pump your RileyLink can get before it will affect Loop performance.  \n\n\nBluetooth\n\n\nRileyLink communicates with your iPhone and Loop app through Bluetooth.  If your iPhone has BT issues, your Loop will have failures.  There have been reports of BT audio devices (such as BT pairings in your car or home audio BT speakers) interferring with the Loop.  If you are finding Loop failures frequently happening at a particular location, you may try to troubleshoot if there are BT problems in the area.\n\n\nYour BT signal strength can be seen in the Loop settings, under the RileyLink menu, on the \nSignal Strength\n line.  As you move closer and further away from your phone, you can watch that number dynamically change. This line is \nnot\n displaying the signal strength of your pump communications discussed above (those are shown in the tuning results screen).\n\n\nLights\n\n\nRileyLink has several lights that you may notice from time to time.  Depending on the model of RileyLink that you have, you may see lights more or less frequently.  The older models of RileyLink have more lights on typically.\n\n\n\n\n\n\nRed light: Charging light.  The red light will remain on while RileyLink is charging, and it will turn off when charging is complete.  You may notice the red light turn on periodically even after charging is complete...it's just \"topping off\".\n\n\n\n\n\n\nGreen light: BT light.  The green light will remain on while you have BT connection with your iPhone.  If that green light fails to stay on, you should troubleshoot your BT connections.  Try restarting BT on your iPhone and/or turning the RileyLink off/on by its power switch.\n\n\n\n\n\n\nBlue light: Pump communications.  The blue light will flash periodically as it is communicating with the pump.  It's just letting you know that it is busy talking and collecting info.  You will see the blue light flash especially when you do a \nFetch History\n command as that pulls a lot of information from the pump.\n\n\n\n\n\n\nCharging\n\n\nThe battery that comes with RileyLink will easily last a full day of constant Loop use.  Typically, it can go into the 30-hour range without problem.  Most people charge their RileyLink each night when they are sleeping.  You don't have to worry about leaving the RileyLink plugged in \"too long\" for charging.  It will automatically stop charging the battery when it is fully charged.\n\n\nRange\n\n\nThe range that your RileyLink will function is \nheavily\n dependent on the environment that you are in. Read the section about Tuning to help determine how far your RileyLink can dependably maintain an adequate signal strength in your particular environment.  Most people wear the RileyLink in a pocket or carry a belt holster during the day.  Typically, RileyLink will need to be closer to the pump than the iPhone.  The radio frequency communications will have a shorter range than the BT communications.\n\n\nLipo Battery\n\n\nIf you ordered your RileyLink preassembled, you should plug in the battery cable.  Please make sure your RileyLink\u2019s battery cable is securely pushed all the way into the socket.  Poor battery cable connection can make the Loop communications fail.\n\n\n\n\nRileyLink with loose battery cable.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRileyLink with properly secured battery cable.\n\n\n\n\n\n\n\n\n\n\n\n\nKeep your RileyLink and lipo battery protected from damage.  Lipo batteries are unsafe when damaged or punctured, so the case is an important part of safe Looping.", 
            "title": "Offline Looping"
        }, 
        {
            "location": "/use/offline/#rileylink", 
            "text": "", 
            "title": "RileyLink"
        }, 
        {
            "location": "/use/offline/#tuning-the-radio", 
            "text": "The RileyLink communicates with the pump through radio frequency communications.  Numerous factors can influence how well those communications can function...interferences from other devices, temperature, physical blocking, etc.  Knowing a little about the strength of the radio communications will help you troubleshoot Loop errors.  When you  Tune Radio Frequency  in the Riley Link menu, it is testing for the strongest frequency to communicate with the pump.  Usually this frequency is pretty constant, but during temperature changes it may be that the best frequency is not the one currently set.  The tuning results also show which frequency is the strongest.   For example, in the screenshot below, the strength of the radio communications with the pump is shown by the last number of the tune.  Frequencies with tuning results of -99 means NO communications were established at that frequency.  RileyLink will use the strongest frequency tune for its pump communications.  In the screenshot, the best frequency returned a result of  -37  at a frequency of  916.60 MHz , so RileyLink will set that  916.60 MHz  for its pump communications.     Generally, if you have tuning in the -90s, your RileyLink-pump communications will not work.  If you have tuning in the -80s, you may have periodic communication failures.  If your tuning is in the -70s or better, your communications should be pretty stable.    Experiment with your RileyLink by moving it closer and farther away from the pump.  Try putting it on the other side of your body, or put it in a purse.  Test the tuning results in real world situations that you think you'd be encountering, such as where you will have the RileyLink placed during overnight charging. Perform tunes at the various distances and situations.  This will help you understand how far from the pump your RileyLink can get before it will affect Loop performance.", 
            "title": "Tuning the Radio"
        }, 
        {
            "location": "/use/offline/#bluetooth", 
            "text": "RileyLink communicates with your iPhone and Loop app through Bluetooth.  If your iPhone has BT issues, your Loop will have failures.  There have been reports of BT audio devices (such as BT pairings in your car or home audio BT speakers) interferring with the Loop.  If you are finding Loop failures frequently happening at a particular location, you may try to troubleshoot if there are BT problems in the area.  Your BT signal strength can be seen in the Loop settings, under the RileyLink menu, on the  Signal Strength  line.  As you move closer and further away from your phone, you can watch that number dynamically change. This line is  not  displaying the signal strength of your pump communications discussed above (those are shown in the tuning results screen).", 
            "title": "Bluetooth"
        }, 
        {
            "location": "/use/offline/#lights", 
            "text": "RileyLink has several lights that you may notice from time to time.  Depending on the model of RileyLink that you have, you may see lights more or less frequently.  The older models of RileyLink have more lights on typically.    Red light: Charging light.  The red light will remain on while RileyLink is charging, and it will turn off when charging is complete.  You may notice the red light turn on periodically even after charging is complete...it's just \"topping off\".    Green light: BT light.  The green light will remain on while you have BT connection with your iPhone.  If that green light fails to stay on, you should troubleshoot your BT connections.  Try restarting BT on your iPhone and/or turning the RileyLink off/on by its power switch.    Blue light: Pump communications.  The blue light will flash periodically as it is communicating with the pump.  It's just letting you know that it is busy talking and collecting info.  You will see the blue light flash especially when you do a  Fetch History  command as that pulls a lot of information from the pump.", 
            "title": "Lights"
        }, 
        {
            "location": "/use/offline/#charging", 
            "text": "The battery that comes with RileyLink will easily last a full day of constant Loop use.  Typically, it can go into the 30-hour range without problem.  Most people charge their RileyLink each night when they are sleeping.  You don't have to worry about leaving the RileyLink plugged in \"too long\" for charging.  It will automatically stop charging the battery when it is fully charged.", 
            "title": "Charging"
        }, 
        {
            "location": "/use/offline/#range", 
            "text": "The range that your RileyLink will function is  heavily  dependent on the environment that you are in. Read the section about Tuning to help determine how far your RileyLink can dependably maintain an adequate signal strength in your particular environment.  Most people wear the RileyLink in a pocket or carry a belt holster during the day.  Typically, RileyLink will need to be closer to the pump than the iPhone.  The radio frequency communications will have a shorter range than the BT communications.", 
            "title": "Range"
        }, 
        {
            "location": "/use/offline/#lipo-battery", 
            "text": "If you ordered your RileyLink preassembled, you should plug in the battery cable.  Please make sure your RileyLink\u2019s battery cable is securely pushed all the way into the socket.  Poor battery cable connection can make the Loop communications fail.   RileyLink with loose battery cable.       RileyLink with properly secured battery cable.      Keep your RileyLink and lipo battery protected from damage.  Lipo batteries are unsafe when damaged or punctured, so the case is an important part of safe Looping.", 
            "title": "Lipo Battery"
        }, 
        {
            "location": "/use/travel/", 
            "text": "Time Changes with Loop\n\n\nLoop is built to fully work across time zone and daylight savings time changes as long as a few basic instructions are followed.\n\n\niPhone\n\n\nLoop will assume your iPhone's time (UTC, not time zone) is always correct. This theoretically may not be the case if a nearby cell tower is improperly configured (though there are likely resilience mechanisms in iOS to handle this). Automatic time setting can always be disabled in Settings.\n\n\nMinimed Pump and CGM\n\n\nThe Minimed pump doesn't expose a universal clock, instead it exposes the components of a date (YMDHIS). It has no concept of political time zones, and just continues to increment its components on schedule. Therefore, Loop assumes that the pump's date, until changed, remains at a fixed offset from UTC.\n\n\nThat offset is stored by Loop the first time the pump ID is changed, and every time the pump's time is changed from the RileyLink Settings screen.\n\n\nDo not change the pump's time directly on the pump.\n Instead, always use Loop's RileyLink \"Change Pump Time\".\n\n\n\n\n\n\n\n\n\nDexcom CGM\n\n\nNo particular input is needed on your part for Loop to work with Dexcom CGM data. All times are UTC.  However, at time changes you may want to manually change your G4 receiver time setting just so the time visually appears correct when you are viewing the screen.\n\n\nTraveling across time zones and daylight savings\n\n\nWhen traveling, there is no urgency to update the pump's time to match the wall-clocks in your geography. Configuration schedules\u2014basal rates, target ranges, carb ratios, and insulin sensitivities\u2014will all remain in the pump's time zone. The app's graphs and status will always display in the time zone of the iPhone, and Loop will understand the difference in offset between the two, highlighting it when attempting to change configuration schedules.\n\n\nWhen you're ready to update the pump's time, simply use the Loop's RileyLink \"Change Pump Time\". This will also shift your configuration schedules to the current time zone.", 
            "title": "Travel & Time Changes"
        }, 
        {
            "location": "/use/travel/#time-changes-with-loop", 
            "text": "Loop is built to fully work across time zone and daylight savings time changes as long as a few basic instructions are followed.", 
            "title": "Time Changes with Loop"
        }, 
        {
            "location": "/use/travel/#iphone", 
            "text": "Loop will assume your iPhone's time (UTC, not time zone) is always correct. This theoretically may not be the case if a nearby cell tower is improperly configured (though there are likely resilience mechanisms in iOS to handle this). Automatic time setting can always be disabled in Settings.", 
            "title": "iPhone"
        }, 
        {
            "location": "/use/travel/#minimed-pump-and-cgm", 
            "text": "The Minimed pump doesn't expose a universal clock, instead it exposes the components of a date (YMDHIS). It has no concept of political time zones, and just continues to increment its components on schedule. Therefore, Loop assumes that the pump's date, until changed, remains at a fixed offset from UTC.  That offset is stored by Loop the first time the pump ID is changed, and every time the pump's time is changed from the RileyLink Settings screen.  Do not change the pump's time directly on the pump.  Instead, always use Loop's RileyLink \"Change Pump Time\".", 
            "title": "Minimed Pump and CGM"
        }, 
        {
            "location": "/use/travel/#dexcom-cgm", 
            "text": "No particular input is needed on your part for Loop to work with Dexcom CGM data. All times are UTC.  However, at time changes you may want to manually change your G4 receiver time setting just so the time visually appears correct when you are viewing the screen.", 
            "title": "Dexcom CGM"
        }, 
        {
            "location": "/use/travel/#traveling-across-time-zones-and-daylight-savings", 
            "text": "When traveling, there is no urgency to update the pump's time to match the wall-clocks in your geography. Configuration schedules\u2014basal rates, target ranges, carb ratios, and insulin sensitivities\u2014will all remain in the pump's time zone. The app's graphs and status will always display in the time zone of the iPhone, and Loop will understand the difference in offset between the two, highlighting it when attempting to change configuration schedules.  When you're ready to update the pump's time, simply use the Loop's RileyLink \"Change Pump Time\". This will also shift your configuration schedules to the current time zone.", 
            "title": "Traveling across time zones and daylight savings"
        }, 
        {
            "location": "/use/update/", 
            "text": "Workout mode\n\n\n\n\n\n\n\n\n\nWorkout mode enables an alternate BG target range from what would normally be scheduled at the time. The alternate target can be enabled for 1 hour, 2 hours, or indefinitely. If you want more options for duration, you can customize them during your Loop build.\n\n\nSome people use Workout mode to set temporarily higher targets ahead of exercise that would normally cause BG to drop.  This should give the user less chance of going low during exercise.\n\n\nAnother use for temporary targets is to prebolus for a meal by setting lower targets for an hour before a meal is expected.  Loop will use temp basals matched to the temporary lower target, and then before the meal is entered/bolused, the targets are adjusted back to normal.  This will leave the user with some active IOB going into the meal and help control post-prandial BG spikes.  Loop will account for the IOB when it makes the recommendation for the meal bolus (just remember to have the BG targets set back to normal before entering the meal carbs).\n\n\nFinally, using a lower target for an hour or two (such as 80-80 mg/dl) may help in situations where you are \u201cstuck\u201d on a high BG from some temporary situation such as a bad carb count, slower food absorption, or anxiety from a short-term situation (work meeting, public presentation).", 
            "title": "Updating loop"
        }, 
        {
            "location": "/use/update/#workout-mode", 
            "text": "Workout mode enables an alternate BG target range from what would normally be scheduled at the time. The alternate target can be enabled for 1 hour, 2 hours, or indefinitely. If you want more options for duration, you can customize them during your Loop build.  Some people use Workout mode to set temporarily higher targets ahead of exercise that would normally cause BG to drop.  This should give the user less chance of going low during exercise.  Another use for temporary targets is to prebolus for a meal by setting lower targets for an hour before a meal is expected.  Loop will use temp basals matched to the temporary lower target, and then before the meal is entered/bolused, the targets are adjusted back to normal.  This will leave the user with some active IOB going into the meal and help control post-prandial BG spikes.  Loop will account for the IOB when it makes the recommendation for the meal bolus (just remember to have the BG targets set back to normal before entering the meal carbs).  Finally, using a lower target for an hour or two (such as 80-80 mg/dl) may help in situations where you are \u201cstuck\u201d on a high BG from some temporary situation such as a bad carb count, slower food absorption, or anxiety from a short-term situation (work meeting, public presentation).", 
            "title": "Workout mode"
        }, 
        {
            "location": "/use/multiple-rigs/", 
            "text": "Workout mode\n\n\n\n\n\n\n\n\n\nWorkout mode enables an alternate BG target range from what would normally be scheduled at the time. The alternate target can be enabled for 1 hour, 2 hours, or indefinitely. If you want more options for duration, you can customize them during your Loop build.\n\n\nSome people use Workout mode to set temporarily higher targets ahead of exercise that would normally cause BG to drop.  This should give the user less chance of going low during exercise.\n\n\nAnother use for temporary targets is to prebolus for a meal by setting lower targets for an hour before a meal is expected.  Loop will use temp basals matched to the temporary lower target, and then before the meal is entered/bolused, the targets are adjusted back to normal.  This will leave the user with some active IOB going into the meal and help control post-prandial BG spikes.  Loop will account for the IOB when it makes the recommendation for the meal bolus (just remember to have the BG targets set back to normal before entering the meal carbs).\n\n\nFinally, using a lower target for an hour or two (such as 80-80 mg/dl) may help in situations where you are \u201cstuck\u201d on a high BG from some temporary situation such as a bad carb count, slower food absorption, or anxiety from a short-term situation (work meeting, public presentation).", 
            "title": "Multiple Rigs"
        }, 
        {
            "location": "/use/multiple-rigs/#workout-mode", 
            "text": "Workout mode enables an alternate BG target range from what would normally be scheduled at the time. The alternate target can be enabled for 1 hour, 2 hours, or indefinitely. If you want more options for duration, you can customize them during your Loop build.  Some people use Workout mode to set temporarily higher targets ahead of exercise that would normally cause BG to drop.  This should give the user less chance of going low during exercise.  Another use for temporary targets is to prebolus for a meal by setting lower targets for an hour before a meal is expected.  Loop will use temp basals matched to the temporary lower target, and then before the meal is entered/bolused, the targets are adjusted back to normal.  This will leave the user with some active IOB going into the meal and help control post-prandial BG spikes.  Loop will account for the IOB when it makes the recommendation for the meal bolus (just remember to have the BG targets set back to normal before entering the meal carbs).  Finally, using a lower target for an hour or two (such as 80-80 mg/dl) may help in situations where you are \u201cstuck\u201d on a high BG from some temporary situation such as a bad carb count, slower food absorption, or anxiety from a short-term situation (work meeting, public presentation).", 
            "title": "Workout mode"
        }, 
        {
            "location": "/use/openhumans/", 
            "text": "Close Loop\n\n\nWhen you feel like you have learned what you need from open loop, you should be ready to switch to close loop.  There are several ways you can help make that transition as smooth as possible.  \n\n\nTiming\n\n\nMany people choose to transition to close loop in a step-wise fashion.  Starting close loop on weekends is an easier starting point so that you can minimize distractions (let's face it...you'll probably be staring at the Loop a lot for those first few days). Typically, people have an easier time transitioning to close loop for parts of their day that don't involve food...so nighttimes tend to be easier than daytimes to start.\n\n\nMaximum Basal Rate\n\n\nWhen you are first beginning to close loop, it is important to be conservative (low) in setting your maximum basal rate.  If your settings are incorrect in other areas (basal rates, carb absorption time, carb ratio, etc), Loop may enact incorrectly aggressive high temp basals.  Gradually increase your maximum basal rate as your comfort and confidence in Loop increase.  Typically, experienced closed loop users set their max basal rate no more than 3-4 times their average basal rate.  \n\n\nBG targets\n\n\nIf your basals, ISF, or carb ratios aren't set correctly, Loop may overshoot and leave you lower than expected (or with more IOB than you are comfortable with).  Setting your low BG target slightly higher can help prevent unexpected lows or high IOB as you adjust your settings.\n\n\nWatch the IOB\n\n\nWatch whether Loop accumulates positive or negative IOB while holding your BG steady when no food is present.  If you find that you are \"carrying\" positive or negative IOB consistently, you should review your settings to see if perhaps your basal or ISF needs adjusting.\n\n\nMeals\n\n\nMeals will likely be the hardest part of transitioning to close loop.  Starting with foods that you have a high comfort level with is a great idea.  If you have favorite meals that you know well (how high BGs usually go, how much to bolus, how to prebolus, etc), these would be a good starting point.  Watching when the Loop high temps or suspends basals (early vs late in meal) will really help you adjust to find your typical carb absorption times.  As a general idea, \nassuming other settings are accurate\n:\n\n\n\n\nearly high temps in a meal that leave you low after, you may need to shorten carb absorption time\n\n\nearly suspensions in a meal that leave you high after, you may need to lengthen carb absorption time\n\n\n\n\nThis is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.", 
            "title": "OpenHumans"
        }, 
        {
            "location": "/use/openhumans/#close-loop", 
            "text": "When you feel like you have learned what you need from open loop, you should be ready to switch to close loop.  There are several ways you can help make that transition as smooth as possible.", 
            "title": "Close Loop"
        }, 
        {
            "location": "/use/openhumans/#timing", 
            "text": "Many people choose to transition to close loop in a step-wise fashion.  Starting close loop on weekends is an easier starting point so that you can minimize distractions (let's face it...you'll probably be staring at the Loop a lot for those first few days). Typically, people have an easier time transitioning to close loop for parts of their day that don't involve food...so nighttimes tend to be easier than daytimes to start.", 
            "title": "Timing"
        }, 
        {
            "location": "/use/openhumans/#maximum-basal-rate", 
            "text": "When you are first beginning to close loop, it is important to be conservative (low) in setting your maximum basal rate.  If your settings are incorrect in other areas (basal rates, carb absorption time, carb ratio, etc), Loop may enact incorrectly aggressive high temp basals.  Gradually increase your maximum basal rate as your comfort and confidence in Loop increase.  Typically, experienced closed loop users set their max basal rate no more than 3-4 times their average basal rate.", 
            "title": "Maximum Basal Rate"
        }, 
        {
            "location": "/use/openhumans/#bg-targets", 
            "text": "If your basals, ISF, or carb ratios aren't set correctly, Loop may overshoot and leave you lower than expected (or with more IOB than you are comfortable with).  Setting your low BG target slightly higher can help prevent unexpected lows or high IOB as you adjust your settings.", 
            "title": "BG targets"
        }, 
        {
            "location": "/use/openhumans/#watch-the-iob", 
            "text": "Watch whether Loop accumulates positive or negative IOB while holding your BG steady when no food is present.  If you find that you are \"carrying\" positive or negative IOB consistently, you should review your settings to see if perhaps your basal or ISF needs adjusting.", 
            "title": "Watch the IOB"
        }, 
        {
            "location": "/use/openhumans/#meals", 
            "text": "Meals will likely be the hardest part of transitioning to close loop.  Starting with foods that you have a high comfort level with is a great idea.  If you have favorite meals that you know well (how high BGs usually go, how much to bolus, how to prebolus, etc), these would be a good starting point.  Watching when the Loop high temps or suspends basals (early vs late in meal) will really help you adjust to find your typical carb absorption times.  As a general idea,  assuming other settings are accurate :   early high temps in a meal that leave you low after, you may need to shorten carb absorption time  early suspensions in a meal that leave you high after, you may need to lengthen carb absorption time   This is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.", 
            "title": "Meals"
        }
    ]
}